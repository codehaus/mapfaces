/*
 *    Mapfaces -
 *    http://www.mapfaces.org
 *
 *    (C) 2007 - 2008, Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 3 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.mapfaces.component;

import java.io.File;
import javax.faces.context.FacesContext;
import org.geotools.feature.FeatureCollection;
import org.geotools.feature.FeatureCollections;
import org.mapfaces.models.Layer;
import org.opengis.feature.simple.SimpleFeature;
import org.opengis.feature.simple.SimpleFeatureType;

/**
 * @author Mehdi Sidhoum.
 */
public class UIMFLayer extends UIWidgetBase {

    public static final String FAMILIY = "org.mapfaces.MapPane.MFLayer";
    
    private Layer layer;
    /*
     * Directory where image generated by the portrayal servcie were saved
     */
    private File dir;
    /*
     * style of the layer div , this style is modified when we drag the map
     */
    private String style;
    /**
     * styleClass of the layer div , this style is modified when we drag the map
     */
    private String styleClass;
    /**
     * This is the list of features for this uilayer component.
     */
    private FeatureCollection<SimpleFeatureType, SimpleFeature> features = FeatureCollections.newCollection();
    /**
     * This is the url for the image png....
     */
    private String image;

    public UIMFLayer() {
        super();
        setRendererType("org.mapfaces.renderkit.html.MapPane.MFLayer");    // this component has a renderer
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public String getFamily() {
        return FAMILIY;
    }

    public Layer getLayer() {
        return layer;
    }

    public void setLayer(final Layer layer) {
        this.layer = layer;
    }

    public File getDir() {
        return dir;
    }

    public void setDir(final File dir) {
        this.dir = dir;
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public Object saveState(final FacesContext context) {
        final Object values[] = new Object[5];
        values[0] = super.saveState(context);
        values[1] = dir;
        values[2] = layer;
        values[3] = style;
        values[4] = styleClass;
        values[5] = features;
        values[6] = image;
        return values;
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public void restoreState(final FacesContext context, final Object state) {
        final Object values[] = (Object[]) state;
        super.restoreState(context, values[0]);
        dir = (File) values[1];
        layer = (Layer) values[2];
        setStyle((String) values[3]);
        setStyleClass((String) values[4]);
        setFeatures((FeatureCollection<SimpleFeatureType, SimpleFeature>) values[5]);
        setImage((String) values[6]);
    }

    public String getStyle() {
        return style;
    }

    public void setStyle(String style) {
        this.style = style;
    }

    public String getStyleClass() {
        return styleClass;
    }

    public void setStyleClass(String styleClass) {
        this.styleClass = styleClass;
    }

    public FeatureCollection<SimpleFeatureType, SimpleFeature> getFeatures() {
        return features;
    }

    public void setFeatures(FeatureCollection<SimpleFeatureType, SimpleFeature> features) {
        this.features = features;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }
}
