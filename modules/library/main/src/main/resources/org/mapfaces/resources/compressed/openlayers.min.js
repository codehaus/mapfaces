OpenLayers.Util={};
OpenLayers.Util.getElement=function(){var elements=[];
for(var i=0,len=arguments.length;
i<len;
i++){var element=arguments[i];
if(typeof element=="string"){element=document.getElementById(element)
}if(arguments.length==1){return element
}elements.push(element)
}return elements
};
OpenLayers.Util.extend=function(destination,source){destination=destination||{};
if(source){for(var property in source){var value=source[property];
if(value!==undefined){destination[property]=value
}}var sourceIsEvt=typeof window.Event=="function"&&source instanceof window.Event;
if(!sourceIsEvt&&source.hasOwnProperty&&source.hasOwnProperty("toString")){destination.toString=source.toString
}}return destination
};
OpenLayers.Util.removeItem=function(array,item){for(var i=array.length-1;
i>=0;
i--){if(array[i]==item){array.splice(i,1)
}}return array
};
OpenLayers.Util.clearArray=function(array){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"array = []"}));
array.length=0
};
OpenLayers.Util.indexOf=function(array,obj){for(var i=0,len=array.length;
i<len;
i++){if(array[i]==obj){return i
}}return -1
};
OpenLayers.Util.modifyDOMElement=function(element,id,px,sz,position,border,overflow,opacity){if(id){element.id=id
}if(px){element.style.left=px.x+"px";
element.style.top=px.y+"px"
}if(sz){element.style.width=sz.w+"px";
element.style.height=sz.h+"px"
}if(position){element.style.position=position
}if(border){element.style.border=border
}if(overflow){element.style.overflow=overflow
}if(parseFloat(opacity)>=0&&parseFloat(opacity)<1){element.style.filter="alpha(opacity="+(opacity*100)+")";
element.style.opacity=opacity
}else{if(parseFloat(opacity)==1){element.style.filter="";
element.style.opacity=""
}}};
OpenLayers.Util.createDiv=function(id,px,sz,imgURL,position,border,overflow,opacity){var dom=document.createElement("div");
if(imgURL){dom.style.backgroundImage="url("+imgURL+")"
}if(!id){id=OpenLayers.Util.createUniqueID("OpenLayersDiv")
}if(!position){position="absolute"
}OpenLayers.Util.modifyDOMElement(dom,id,px,sz,position,border,overflow,opacity);
return dom
};
OpenLayers.Util.createImage=function(id,px,sz,imgURL,position,border,opacity,delayDisplay){var image=document.createElement("img");
if(!id){id=OpenLayers.Util.createUniqueID("OpenLayersDiv")
}if(!position){position="relative"
}OpenLayers.Util.modifyDOMElement(image,id,px,sz,position,border,null,opacity);
if(delayDisplay){image.style.display="none";
OpenLayers.Event.observe(image,"load",OpenLayers.Function.bind(OpenLayers.Util.onImageLoad,image));
OpenLayers.Event.observe(image,"error",OpenLayers.Function.bind(OpenLayers.Util.onImageLoadError,image))
}image.style.alt=id;
image.galleryImg="no";
if(imgURL){image.src=imgURL
}return image
};
OpenLayers.Util.setOpacity=function(element,opacity){OpenLayers.Util.modifyDOMElement(element,null,null,null,null,null,null,opacity)
};
OpenLayers.Util.onImageLoad=function(){if(!this.viewRequestID||(this.map&&this.viewRequestID==this.map.viewRequestID)){this.style.backgroundColor=null;
this.style.display=""
}};
OpenLayers.Util.onImageLoadErrorColor="pink";
OpenLayers.IMAGE_RELOAD_ATTEMPTS=0;
OpenLayers.Util.onImageLoadError=function(){this._attempts=(this._attempts)?(this._attempts+1):1;
if(this._attempts<=OpenLayers.IMAGE_RELOAD_ATTEMPTS){var urls=this.urls;
if(urls&&urls instanceof Array&&urls.length>1){var src=this.src.toString();
var current_url,k;
for(k=0;
current_url=urls[k];
k++){if(src.indexOf(current_url)!=-1){break
}}var guess=Math.floor(urls.length*Math.random());
var new_url=urls[guess];
k=0;
while(new_url==current_url&&k++<4){guess=Math.floor(urls.length*Math.random());
new_url=urls[guess]
}this.src=src.replace(current_url,new_url)
}else{this.src=this.src
}}else{this.style.backgroundColor=OpenLayers.Util.onImageLoadErrorColor
}this.style.display=""
};
OpenLayers.Util.alphaHack=function(){var arVersion=navigator.appVersion.split("MSIE");
var version=parseFloat(arVersion[1]);
var filter=false;
try{filter=!!(document.body.filters)
}catch(e){}return(filter&&(version>=5.5)&&(version<7))
};
OpenLayers.Util.modifyAlphaImageDiv=function(div,id,px,sz,imgURL,position,border,sizing,opacity){OpenLayers.Util.modifyDOMElement(div,id,px,sz,position,null,null,opacity);
var img=div.childNodes[0];
if(imgURL){img.src=imgURL
}OpenLayers.Util.modifyDOMElement(img,div.id+"_innerImage",null,sz,"relative",border);
if(OpenLayers.Util.alphaHack()){if(div.style.display!="none"){div.style.display="inline-block"
}if(sizing==null){sizing="scale"
}div.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+img.src+"', sizingMethod='"+sizing+"')";
if(parseFloat(div.style.opacity)>=0&&parseFloat(div.style.opacity)<1){div.style.filter+=" alpha(opacity="+div.style.opacity*100+")"
}img.style.filter="alpha(opacity=0)"
}};
OpenLayers.Util.createAlphaImageDiv=function(id,px,sz,imgURL,position,border,sizing,opacity,delayDisplay){var div=OpenLayers.Util.createDiv();
var img=OpenLayers.Util.createImage(null,null,null,null,null,null,null,false);
div.appendChild(img);
if(delayDisplay){img.style.display="none";
OpenLayers.Event.observe(img,"load",OpenLayers.Function.bind(OpenLayers.Util.onImageLoad,div));
OpenLayers.Event.observe(img,"error",OpenLayers.Function.bind(OpenLayers.Util.onImageLoadError,div))
}OpenLayers.Util.modifyAlphaImageDiv(div,id,px,sz,imgURL,position,border,sizing,opacity);
return div
};
OpenLayers.Util.upperCaseObject=function(object){var uObject={};
for(var key in object){uObject[key.toUpperCase()]=object[key]
}return uObject
};
OpenLayers.Util.applyDefaults=function(to,from){to=to||{};
var fromIsEvt=typeof window.Event=="function"&&from instanceof window.Event;
for(var key in from){if(to[key]===undefined||(!fromIsEvt&&from.hasOwnProperty&&from.hasOwnProperty(key)&&!to.hasOwnProperty(key))){to[key]=from[key]
}}if(!fromIsEvt&&from&&from.hasOwnProperty&&from.hasOwnProperty("toString")&&!to.hasOwnProperty("toString")){to.toString=from.toString
}return to
};
OpenLayers.Util.getParameterString=function(params){var paramsArray=[];
for(var key in params){var value=params[key];
if((value!=null)&&(typeof value!="function")){var encodedValue;
if(typeof value=="object"&&value.constructor==Array){var encodedItemArray=[];
for(var itemIndex=0,len=value.length;
itemIndex<len;
itemIndex++){encodedItemArray.push(encodeURIComponent(value[itemIndex]))
}encodedValue=encodedItemArray.join(",")
}else{encodedValue=encodeURIComponent(value)
}paramsArray.push(encodeURIComponent(key)+"="+encodedValue)
}}return paramsArray.join("&")
};
OpenLayers.ImgPath="";
OpenLayers.Util.getImagesLocation=function(){return OpenLayers.ImgPath||(OpenLayers._getScriptLocation()+"img/")
};
OpenLayers.Util.Try=function(){var returnValue=null;
for(var i=0,len=arguments.length;
i<len;
i++){var lambda=arguments[i];
try{returnValue=lambda();
break
}catch(e){}}return returnValue
};
OpenLayers.Util.getNodes=function(p,tagName){var nodes=OpenLayers.Util.Try(function(){return OpenLayers.Util._getNodes(p.documentElement.childNodes,tagName)
},function(){return OpenLayers.Util._getNodes(p.childNodes,tagName)
});
return nodes
};
OpenLayers.Util._getNodes=function(nodes,tagName){var retArray=[];
for(var i=0,len=nodes.length;
i<len;
i++){if(nodes[i].nodeName==tagName){retArray.push(nodes[i])
}}return retArray
};
OpenLayers.Util.getTagText=function(parent,item,index){var result=OpenLayers.Util.getNodes(parent,item);
if(result&&(result.length>0)){if(!index){index=0
}if(result[index].childNodes.length>1){return result.childNodes[1].nodeValue
}else{if(result[index].childNodes.length==1){return result[index].firstChild.nodeValue
}}}else{return""
}};
OpenLayers.Util.getXmlNodeValue=function(node){var val=null;
OpenLayers.Util.Try(function(){val=node.text;
if(!val){val=node.textContent
}if(!val){val=node.firstChild.nodeValue
}},function(){val=node.textContent
});
return val
};
OpenLayers.Util.mouseLeft=function(evt,div){var target=(evt.relatedTarget)?evt.relatedTarget:evt.toElement;
while(target!=div&&target!=null){target=target.parentNode
}return(target!=div)
};
OpenLayers.Util.rad=function(x){return x*Math.PI/180
};
OpenLayers.Util.distVincenty=function(p1,p2){var a=6378137,b=6356752.3142,f=1/298.257223563;
var L=OpenLayers.Util.rad(p2.lon-p1.lon);
var U1=Math.atan((1-f)*Math.tan(OpenLayers.Util.rad(p1.lat)));
var U2=Math.atan((1-f)*Math.tan(OpenLayers.Util.rad(p2.lat)));
var sinU1=Math.sin(U1),cosU1=Math.cos(U1);
var sinU2=Math.sin(U2),cosU2=Math.cos(U2);
var lambda=L,lambdaP=2*Math.PI;
var iterLimit=20;
while(Math.abs(lambda-lambdaP)>1e-12&&--iterLimit>0){var sinLambda=Math.sin(lambda),cosLambda=Math.cos(lambda);
var sinSigma=Math.sqrt((cosU2*sinLambda)*(cosU2*sinLambda)+(cosU1*sinU2-sinU1*cosU2*cosLambda)*(cosU1*sinU2-sinU1*cosU2*cosLambda));
if(sinSigma==0){return 0
}var cosSigma=sinU1*sinU2+cosU1*cosU2*cosLambda;
var sigma=Math.atan2(sinSigma,cosSigma);
var alpha=Math.asin(cosU1*cosU2*sinLambda/sinSigma);
var cosSqAlpha=Math.cos(alpha)*Math.cos(alpha);
var cos2SigmaM=cosSigma-2*sinU1*sinU2/cosSqAlpha;
var C=f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha));
lambdaP=lambda;
lambda=L+(1-C)*f*Math.sin(alpha)*(sigma+C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)))
}if(iterLimit==0){return NaN
}var uSq=cosSqAlpha*(a*a-b*b)/(b*b);
var A=1+uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)));
var B=uSq/1024*(256+uSq*(-128+uSq*(74-47*uSq)));
var deltaSigma=B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)-B/6*cos2SigmaM*(-3+4*sinSigma*sinSigma)*(-3+4*cos2SigmaM*cos2SigmaM)));
var s=b*A*(sigma-deltaSigma);
var d=s.toFixed(3)/1000;
return d
};
OpenLayers.Util.getParameters=function(url){url=url||window.location.href;
var paramsString="";
if(OpenLayers.String.contains(url,"?")){var start=url.indexOf("?")+1;
var end=OpenLayers.String.contains(url,"#")?url.indexOf("#"):url.length;
paramsString=url.substring(start,end)
}var parameters={};
var pairs=paramsString.split(/[&;]/);
for(var i=0,len=pairs.length;
i<len;
++i){var keyValue=pairs[i].split("=");
if(keyValue[0]){var key=decodeURIComponent(keyValue[0]);
var value=keyValue[1]||"";
value=value.split(",");
for(var j=0,jlen=value.length;
j<jlen;
j++){value[j]=decodeURIComponent(value[j])
}if(value.length==1){value=value[0]
}parameters[key]=value
}}return parameters
};
OpenLayers.Util.getArgs=function(url){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.Util.getParameters"}));
return OpenLayers.Util.getParameters(url)
};
OpenLayers.Util.lastSeqID=0;
OpenLayers.Util.createUniqueID=function(prefix){if(prefix==null){prefix="id_"
}OpenLayers.Util.lastSeqID+=1;
return prefix+OpenLayers.Util.lastSeqID
};
OpenLayers.INCHES_PER_UNIT={inches:1,ft:12,mi:63360,m:39.3701,km:39370.1,dd:4374754,yd:36};
OpenLayers.INCHES_PER_UNIT["in"]=OpenLayers.INCHES_PER_UNIT.inches;
OpenLayers.INCHES_PER_UNIT.degrees=OpenLayers.INCHES_PER_UNIT.dd;
OpenLayers.INCHES_PER_UNIT.nmi=1852*OpenLayers.INCHES_PER_UNIT.m;
OpenLayers.DOTS_PER_INCH=72;
OpenLayers.Util.normalizeScale=function(scale){var normScale=(scale>1)?(1/scale):scale;
return normScale
};
OpenLayers.Util.getResolutionFromScale=function(scale,units){if(units==null){units="degrees"
}var normScale=OpenLayers.Util.normalizeScale(scale);
var resolution=1/(normScale*OpenLayers.INCHES_PER_UNIT[units]*OpenLayers.DOTS_PER_INCH);
return resolution
};
OpenLayers.Util.getScaleFromResolution=function(resolution,units){if(units==null){units="degrees"
}var scale=resolution*OpenLayers.INCHES_PER_UNIT[units]*OpenLayers.DOTS_PER_INCH;
return scale
};
OpenLayers.Util.safeStopPropagation=function(evt){OpenLayers.Event.stop(evt,true)
};
OpenLayers.Util.pagePosition=function(forElement){var valueT=0,valueL=0;
var element=forElement;
var child=forElement;
while(element){if(element==document.body){if(OpenLayers.Element.getStyle(child,"position")=="absolute"){break
}}valueT+=element.offsetTop||0;
valueL+=element.offsetLeft||0;
child=element;
try{element=element.offsetParent
}catch(e){OpenLayers.Console.error(OpenLayers.i18n("pagePositionFailed",{elemId:element.id}));
break
}}element=forElement;
while(element){valueT-=element.scrollTop||0;
valueL-=element.scrollLeft||0;
element=element.parentNode
}return[valueL,valueT]
};
OpenLayers.Util.isEquivalentUrl=function(url1,url2,options){options=options||{};
OpenLayers.Util.applyDefaults(options,{ignoreCase:true,ignorePort80:true,ignoreHash:true});
var urlObj1=OpenLayers.Util.createUrlObject(url1,options);
var urlObj2=OpenLayers.Util.createUrlObject(url2,options);
for(var key in urlObj1){if(options.test){OpenLayers.Console.userError(key+"\n1:"+urlObj1[key]+"\n2:"+urlObj2[key])
}var val1=urlObj1[key];
var val2=urlObj2[key];
switch(key){case"args":break;
case"host":case"port":case"protocol":if((val1=="")||(val2=="")){break
}default:if((key!="args")&&(urlObj1[key]!=urlObj2[key])){return false
}break
}}for(var key in urlObj1.args){if(urlObj1.args[key]!=urlObj2.args[key]){return false
}delete urlObj2.args[key]
}for(var key in urlObj2.args){return false
}return true
};
OpenLayers.Util.createUrlObject=function(url,options){options=options||{};
var urlObject={};
if(options.ignoreCase){url=url.toLowerCase()
}var a=document.createElement("a");
a.href=url;
urlObject.host=a.host;
var port=a.port;
if(port.length<=0){var newHostLength=urlObject.host.length-(port.length);
urlObject.host=urlObject.host.substring(0,newHostLength)
}urlObject.protocol=a.protocol;
urlObject.port=((port=="80")&&(options.ignorePort80))?"":port;
urlObject.hash=(options.ignoreHash)?"":a.hash;
var queryString=a.search;
if(!queryString){var qMark=url.indexOf("?");
queryString=(qMark!=-1)?url.substr(qMark):""
}urlObject.args=OpenLayers.Util.getParameters(queryString);
if(((urlObject.protocol=="file:")&&(url.indexOf("file:")!=-1))||((urlObject.protocol!="file:")&&(urlObject.host!=""))){urlObject.pathname=a.pathname;
var qIndex=urlObject.pathname.indexOf("?");
if(qIndex!=-1){urlObject.pathname=urlObject.pathname.substring(0,qIndex)
}}else{var relStr=OpenLayers.Util.removeTail(url);
var backs=0;
do{var index=relStr.indexOf("../");
if(index==0){backs++;
relStr=relStr.substr(3)
}else{if(index>=0){var prevChunk=relStr.substr(0,index-1);
var slash=prevChunk.indexOf("/");
prevChunk=(slash!=-1)?prevChunk.substr(0,slash+1):"";
var postChunk=relStr.substr(index+3);
relStr=prevChunk+postChunk
}}}while(index!=-1);
var windowAnchor=document.createElement("a");
var windowUrl=window.location.href;
if(options.ignoreCase){windowUrl=windowUrl.toLowerCase()
}windowAnchor.href=windowUrl;
urlObject.protocol=windowAnchor.protocol;
var splitter=(windowAnchor.pathname.indexOf("/")!=-1)?"/":"\\";
var dirs=windowAnchor.pathname.split(splitter);
dirs.pop();
while((backs>0)&&(dirs.length>0)){dirs.pop();
backs--
}relStr=dirs.join("/")+"/"+relStr;
urlObject.pathname=relStr
}if((urlObject.protocol=="file:")||(urlObject.protocol=="")){urlObject.host="localhost"
}return urlObject
};
OpenLayers.Util.removeTail=function(url){var head=null;
var qMark=url.indexOf("?");
var hashMark=url.indexOf("#");
if(qMark==-1){head=(hashMark!=-1)?url.substr(0,hashMark):url
}else{head=(hashMark!=-1)?url.substr(0,Math.min(qMark,hashMark)):url.substr(0,qMark)
}return head
};
OpenLayers.Util.getBrowserName=function(){var browserName="";
var ua=navigator.userAgent.toLowerCase();
if(ua.indexOf("opera")!=-1){browserName="opera"
}else{if(ua.indexOf("msie")!=-1){browserName="msie"
}else{if(ua.indexOf("safari")!=-1){browserName="safari"
}else{if(ua.indexOf("mozilla")!=-1){if(ua.indexOf("firefox")!=-1){browserName="firefox"
}else{browserName="mozilla"
}}}}}return browserName
};
OpenLayers.Util.getRenderedDimensions=function(contentHTML,size,options){var w,h;
var container=document.createElement("div");
container.style.overflow="";
container.style.position="absolute";
container.style.left="-9999px";
if(size){if(size.w){w=size.w;
container.style.width=w+"px"
}else{if(size.h){h=size.h;
container.style.height=h+"px"
}}}if(options&&options.displayClass){container.className=options.displayClass
}var content=document.createElement("div");
content.innerHTML=contentHTML;
container.appendChild(content);
document.body.appendChild(container);
if(!w){w=parseInt(content.scrollWidth);
container.style.width=w+"px"
}if(!h){h=parseInt(content.scrollHeight)
}container.removeChild(content);
document.body.removeChild(container);
return new OpenLayers.Size(w,h)
};
OpenLayers.Util.getScrollbarWidth=function(){var scrollbarWidth=OpenLayers.Util._scrollbarWidth;
if(scrollbarWidth==null){var scr=null;
var inn=null;
var wNoScroll=0;
var wScroll=0;
scr=document.createElement("div");
scr.style.position="absolute";
scr.style.top="-1000px";
scr.style.left="-1000px";
scr.style.width="100px";
scr.style.height="50px";
scr.style.overflow="hidden";
inn=document.createElement("div");
inn.style.width="100%";
inn.style.height="200px";
scr.appendChild(inn);
document.body.appendChild(scr);
wNoScroll=inn.offsetWidth;
scr.style.overflow="scroll";
wScroll=inn.offsetWidth;
document.body.removeChild(document.body.lastChild);
OpenLayers.Util._scrollbarWidth=(wNoScroll-wScroll);
scrollbarWidth=OpenLayers.Util._scrollbarWidth
}return scrollbarWidth
};OpenLayers.String={startsWith:function(str,sub){return(str.indexOf(sub)==0)
},contains:function(str,sub){return(str.indexOf(sub)!=-1)
},trim:function(str){return str.replace(/^\s*(.*?)\s*$/,"$1")
},camelize:function(str){var oStringList=str.split("-");
var camelizedString=oStringList[0];
for(var i=1,len=oStringList.length;
i<len;
i++){var s=oStringList[i];
camelizedString+=s.charAt(0).toUpperCase()+s.substring(1)
}return camelizedString
},format:function(template,context,args){if(!context){context=window
}var tokens=template.split("${");
var item,last,replacement;
for(var i=1,len=tokens.length;
i<len;
i++){item=tokens[i];
last=item.indexOf("}");
if(last>0){replacement=context[item.substring(0,last)];
if(typeof replacement=="function"){replacement=args?replacement.apply(null,args):replacement()
}tokens[i]=replacement+item.substring(++last)
}else{tokens[i]="${"+item
}}return tokens.join("")
},numberRegEx:/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/,isNumeric:function(value){return OpenLayers.String.numberRegEx.test(value)
}};
if(!String.prototype.startsWith){String.prototype.startsWith=function(sStart){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.String.startsWith"}));
return OpenLayers.String.startsWith(this,sStart)
}
}if(!String.prototype.contains){String.prototype.contains=function(str){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.String.contains"}));
return OpenLayers.String.contains(this,str)
}
}if(!String.prototype.trim){String.prototype.trim=function(){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.String.trim"}));
return OpenLayers.String.trim(this)
}
}if(!String.prototype.camelize){String.prototype.camelize=function(){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.String.camelize"}));
return OpenLayers.String.camelize(this)
}
}OpenLayers.Number={decimalSeparator:".",thousandsSeparator:",",limitSigDigs:function(num,sig){var fig=0;
if(sig>0){fig=parseFloat(num.toPrecision(sig))
}return fig
},format:function(num,dec,tsep,dsep){dec=(typeof dec!="undefined")?dec:0;
tsep=(typeof tsep!="undefined")?tsep:OpenLayers.Number.thousandsSeparator;
dsep=(typeof dsep!="undefined")?dsep:OpenLayers.Number.decimalSeparator;
if(dec!=null){num=parseFloat(num.toFixed(dec))
}var parts=num.toString().split(".");
if(parts.length==1&&dec==null){dec=0
}var integer=parts[0];
if(tsep){var thousands=/(-?[0-9]+)([0-9]{3})/;
while(thousands.test(integer)){integer=integer.replace(thousands,"$1"+tsep+"$2")
}}var str;
if(dec==0){str=integer
}else{var rem=parts.length>1?parts[1]:"0";
if(dec!=null){rem=rem+new Array(dec-rem.length+1).join("0")
}str=integer+dsep+rem
}return str
}};
if(!Number.prototype.limitSigDigs){Number.prototype.limitSigDigs=function(sig){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.Number.limitSigDigs"}));
return OpenLayers.Number.limitSigDigs(this,sig)
}
}OpenLayers.Function={bind:function(func,object){var args=Array.prototype.slice.apply(arguments,[2]);
return function(){var newArgs=args.concat(Array.prototype.slice.apply(arguments,[0]));
return func.apply(object,newArgs)
}
},bindAsEventListener:function(func,object){return function(event){return func.call(object,event||window.event)
}
}};
if(!Function.prototype.bind){Function.prototype.bind=function(){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.Function.bind"}));
Array.prototype.unshift.apply(arguments,[this]);
return OpenLayers.Function.bind.apply(null,arguments)
}
}if(!Function.prototype.bindAsEventListener){Function.prototype.bindAsEventListener=function(object){OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",{newMethod:"OpenLayers.Function.bindAsEventListener"}));
return OpenLayers.Function.bindAsEventListener(this,object)
}
}OpenLayers.Array={filter:function(array,callback,caller){var selected=[];
if(Array.prototype.filter){selected=array.filter(callback,caller)
}else{var len=array.length;
if(typeof callback!="function"){throw new TypeError()
}for(var i=0;
i<len;
i++){if(i in array){var val=array[i];
if(callback.call(caller,val,i,array)){selected.push(val)
}}}}return selected
}};OpenLayers.Class=function(){var Class=function(){if(arguments&&arguments[0]!=OpenLayers.Class.isPrototype){this.initialize.apply(this,arguments)
}};
var extended={};
var parent;
for(var i=0,len=arguments.length;
i<len;
++i){if(typeof arguments[i]=="function"){parent=arguments[i].prototype
}else{parent=arguments[i]
}OpenLayers.Util.extend(extended,parent)
}Class.prototype=extended;
return Class
};
OpenLayers.Class.isPrototype=function(){};
OpenLayers.Class.create=function(){return function(){if(arguments&&arguments[0]!=OpenLayers.Class.isPrototype){this.initialize.apply(this,arguments)
}}
};
OpenLayers.Class.inherit=function(){var superClass=arguments[0];
var proto=new superClass(OpenLayers.Class.isPrototype);
for(var i=1,len=arguments.length;
i<len;
i++){if(typeof arguments[i]=="function"){var mixin=arguments[i];
arguments[i]=new mixin(OpenLayers.Class.isPrototype)
}OpenLayers.Util.extend(proto,arguments[i])
}return proto
};OpenLayers.Bounds=OpenLayers.Class({left:null,bottom:null,right:null,top:null,initialize:function(left,bottom,right,top){if(left!=null){this.left=parseFloat(left)
}if(bottom!=null){this.bottom=parseFloat(bottom)
}if(right!=null){this.right=parseFloat(right)
}if(top!=null){this.top=parseFloat(top)
}},clone:function(){return new OpenLayers.Bounds(this.left,this.bottom,this.right,this.top)
},equals:function(bounds){var equals=false;
if(bounds!=null){equals=((this.left==bounds.left)&&(this.right==bounds.right)&&(this.top==bounds.top)&&(this.bottom==bounds.bottom))
}return equals
},toString:function(){return("left-bottom=("+this.left+","+this.bottom+") right-top=("+this.right+","+this.top+")")
},toArray:function(){return[this.left,this.bottom,this.right,this.top]
},toBBOX:function(decimal){if(decimal==null){decimal=6
}var mult=Math.pow(10,decimal);
var bbox=Math.round(this.left*mult)/mult+","+Math.round(this.bottom*mult)/mult+","+Math.round(this.right*mult)/mult+","+Math.round(this.top*mult)/mult;
return bbox
},toGeometry:function(){return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(this.left,this.bottom),new OpenLayers.Geometry.Point(this.right,this.bottom),new OpenLayers.Geometry.Point(this.right,this.top),new OpenLayers.Geometry.Point(this.left,this.top)])])
},getWidth:function(){return(this.right-this.left)
},getHeight:function(){return(this.top-this.bottom)
},getSize:function(){return new OpenLayers.Size(this.getWidth(),this.getHeight())
},getCenterPixel:function(){return new OpenLayers.Pixel((this.left+this.right)/2,(this.bottom+this.top)/2)
},getCenterLonLat:function(){return new OpenLayers.LonLat((this.left+this.right)/2,(this.bottom+this.top)/2)
},scale:function(ratio,origin){if(origin==null){origin=this.getCenterLonLat()
}var bounds=[];
var origx,origy;
if(origin.CLASS_NAME=="OpenLayers.LonLat"){origx=origin.lon;
origy=origin.lat
}else{origx=origin.x;
origy=origin.y
}var left=(this.left-origx)*ratio+origx;
var bottom=(this.bottom-origy)*ratio+origy;
var right=(this.right-origx)*ratio+origx;
var top=(this.top-origy)*ratio+origy;
return new OpenLayers.Bounds(left,bottom,right,top)
},add:function(x,y){if((x==null)||(y==null)){var msg=OpenLayers.i18n("boundsAddError");
OpenLayers.Console.error(msg);
return null
}return new OpenLayers.Bounds(this.left+x,this.bottom+y,this.right+x,this.top+y)
},extend:function(object){var bounds=null;
if(object){switch(object.CLASS_NAME){case"OpenLayers.LonLat":bounds=new OpenLayers.Bounds(object.lon,object.lat,object.lon,object.lat);
break;
case"OpenLayers.Geometry.Point":bounds=new OpenLayers.Bounds(object.x,object.y,object.x,object.y);
break;
case"OpenLayers.Bounds":bounds=object;
break
}if(bounds){if((this.left==null)||(bounds.left<this.left)){this.left=bounds.left
}if((this.bottom==null)||(bounds.bottom<this.bottom)){this.bottom=bounds.bottom
}if((this.right==null)||(bounds.right>this.right)){this.right=bounds.right
}if((this.top==null)||(bounds.top>this.top)){this.top=bounds.top
}}}},containsLonLat:function(ll,inclusive){return this.contains(ll.lon,ll.lat,inclusive)
},containsPixel:function(px,inclusive){return this.contains(px.x,px.y,inclusive)
},contains:function(x,y,inclusive){if(inclusive==null){inclusive=true
}var contains=false;
if(inclusive){contains=((x>=this.left)&&(x<=this.right)&&(y>=this.bottom)&&(y<=this.top))
}else{contains=((x>this.left)&&(x<this.right)&&(y>this.bottom)&&(y<this.top))
}return contains
},intersectsBounds:function(bounds,inclusive){if(inclusive==null){inclusive=true
}var inBottom=(bounds.bottom==this.bottom&&bounds.top==this.top)?true:(((bounds.bottom>this.bottom)&&(bounds.bottom<this.top))||((this.bottom>bounds.bottom)&&(this.bottom<bounds.top)));
var inTop=(bounds.bottom==this.bottom&&bounds.top==this.top)?true:(((bounds.top>this.bottom)&&(bounds.top<this.top))||((this.top>bounds.bottom)&&(this.top<bounds.top)));
var inRight=(bounds.right==this.right&&bounds.left==this.left)?true:(((bounds.right>this.left)&&(bounds.right<this.right))||((this.right>bounds.left)&&(this.right<bounds.right)));
var inLeft=(bounds.right==this.right&&bounds.left==this.left)?true:(((bounds.left>this.left)&&(bounds.left<this.right))||((this.left>bounds.left)&&(this.left<bounds.right)));
return(this.containsBounds(bounds,true,inclusive)||bounds.containsBounds(this,true,inclusive)||((inTop||inBottom)&&(inLeft||inRight)))
},containsBounds:function(bounds,partial,inclusive){if(partial==null){partial=false
}if(inclusive==null){inclusive=true
}var inLeft;
var inTop;
var inRight;
var inBottom;
if(inclusive){inLeft=(bounds.left>=this.left)&&(bounds.left<=this.right);
inTop=(bounds.top>=this.bottom)&&(bounds.top<=this.top);
inRight=(bounds.right>=this.left)&&(bounds.right<=this.right);
inBottom=(bounds.bottom>=this.bottom)&&(bounds.bottom<=this.top)
}else{inLeft=(bounds.left>this.left)&&(bounds.left<this.right);
inTop=(bounds.top>this.bottom)&&(bounds.top<this.top);
inRight=(bounds.right>this.left)&&(bounds.right<this.right);
inBottom=(bounds.bottom>this.bottom)&&(bounds.bottom<this.top)
}return(partial)?(inTop||inBottom)&&(inLeft||inRight):(inTop&&inLeft&&inBottom&&inRight)
},determineQuadrant:function(lonlat){var quadrant="";
var center=this.getCenterLonLat();
quadrant+=(lonlat.lat<center.lat)?"b":"t";
quadrant+=(lonlat.lon<center.lon)?"l":"r";
return quadrant
},transform:function(source,dest){var ll=OpenLayers.Projection.transform({x:this.left,y:this.bottom},source,dest);
var lr=OpenLayers.Projection.transform({x:this.right,y:this.bottom},source,dest);
var ul=OpenLayers.Projection.transform({x:this.left,y:this.top},source,dest);
var ur=OpenLayers.Projection.transform({x:this.right,y:this.top},source,dest);
this.left=Math.min(ll.x,ul.x);
this.bottom=Math.min(ll.y,lr.y);
this.right=Math.max(lr.x,ur.x);
this.top=Math.max(ul.y,ur.y);
return this
},wrapDateLine:function(maxExtent,options){options=options||{};
var leftTolerance=options.leftTolerance||0;
var rightTolerance=options.rightTolerance||0;
var newBounds=this.clone();
if(maxExtent){while(newBounds.left<maxExtent.left&&(newBounds.right-rightTolerance)<=maxExtent.left){newBounds=newBounds.add(maxExtent.getWidth(),0)
}while((newBounds.left+leftTolerance)>=maxExtent.right&&newBounds.right>maxExtent.right){newBounds=newBounds.add(-maxExtent.getWidth(),0)
}}return newBounds
},CLASS_NAME:"OpenLayers.Bounds"});
OpenLayers.Bounds.fromString=function(str){var bounds=str.split(",");
return OpenLayers.Bounds.fromArray(bounds)
};
OpenLayers.Bounds.fromArray=function(bbox){return new OpenLayers.Bounds(parseFloat(bbox[0]),parseFloat(bbox[1]),parseFloat(bbox[2]),parseFloat(bbox[3]))
};
OpenLayers.Bounds.fromSize=function(size){return new OpenLayers.Bounds(0,size.h,size.w,0)
};
OpenLayers.Bounds.oppositeQuadrant=function(quadrant){var opp="";
opp+=(quadrant.charAt(0)=="t")?"b":"t";
opp+=(quadrant.charAt(1)=="l")?"r":"l";
return opp
};OpenLayers.Element={visible:function(element){return OpenLayers.Util.getElement(element).style.display!="none"
},toggle:function(){for(var i=0,len=arguments.length;
i<len;
i++){var element=OpenLayers.Util.getElement(arguments[i]);
var display=OpenLayers.Element.visible(element)?"hide":"show";
OpenLayers.Element[display](element)
}},hide:function(){for(var i=0,len=arguments.length;
i<len;
i++){var element=OpenLayers.Util.getElement(arguments[i]);
element.style.display="none"
}},show:function(){for(var i=0,len=arguments.length;
i<len;
i++){var element=OpenLayers.Util.getElement(arguments[i]);
element.style.display=""
}},remove:function(element){element=OpenLayers.Util.getElement(element);
element.parentNode.removeChild(element)
},getHeight:function(element){element=OpenLayers.Util.getElement(element);
return element.offsetHeight
},getDimensions:function(element){element=OpenLayers.Util.getElement(element);
if(OpenLayers.Element.getStyle(element,"display")!="none"){return{width:element.offsetWidth,height:element.offsetHeight}
}var els=element.style;
var originalVisibility=els.visibility;
var originalPosition=els.position;
els.visibility="hidden";
els.position="absolute";
els.display="";
var originalWidth=element.clientWidth;
var originalHeight=element.clientHeight;
els.display="none";
els.position=originalPosition;
els.visibility=originalVisibility;
return{width:originalWidth,height:originalHeight}
},hasClass:function(element,name){var names=element.className;
return(!!names&&new RegExp("(^|\\s)"+name+"(\\s|$)").test(names))
},addClass:function(element,name){if(!OpenLayers.Element.hasClass(element,name)){element.className+=(element.className?" ":"")+name
}return element
},removeClass:function(element,name){var names=element.className;
if(names){element.className=OpenLayers.String.trim(names.replace(new RegExp("(^|\\s+)"+name+"(\\s+|$)")," "))
}return element
},toggleClass:function(element,name){if(OpenLayers.Element.hasClass(element,name)){OpenLayers.Element.removeClass(element,name)
}else{OpenLayers.Element.addClass(element,name)
}return element
},getStyle:function(element,style){element=OpenLayers.Util.getElement(element);
var value=null;
if(element&&element.style){value=element.style[OpenLayers.String.camelize(style)];
if(!value){if(document.defaultView&&document.defaultView.getComputedStyle){var css=document.defaultView.getComputedStyle(element,null);
value=css?css.getPropertyValue(style):null
}else{if(element.currentStyle){value=element.currentStyle[OpenLayers.String.camelize(style)]
}}}var positions=["left","top","right","bottom"];
if(window.opera&&(OpenLayers.Util.indexOf(positions,style)!=-1)&&(OpenLayers.Element.getStyle(element,"position")=="static")){value="auto"
}}return value=="auto"?null:value
}};OpenLayers.LonLat=OpenLayers.Class({lon:0,lat:0,initialize:function(lon,lat){this.lon=parseFloat(lon);
this.lat=parseFloat(lat)
},toString:function(){return("lon="+this.lon+",lat="+this.lat)
},toShortString:function(){return(this.lon+", "+this.lat)
},clone:function(){return new OpenLayers.LonLat(this.lon,this.lat)
},add:function(lon,lat){if((lon==null)||(lat==null)){var msg=OpenLayers.i18n("lonlatAddError");
OpenLayers.Console.error(msg);
return null
}return new OpenLayers.LonLat(this.lon+lon,this.lat+lat)
},equals:function(ll){var equals=false;
if(ll!=null){equals=((this.lon==ll.lon&&this.lat==ll.lat)||(isNaN(this.lon)&&isNaN(this.lat)&&isNaN(ll.lon)&&isNaN(ll.lat)))
}return equals
},transform:function(source,dest){var point=OpenLayers.Projection.transform({x:this.lon,y:this.lat},source,dest);
this.lon=point.x;
this.lat=point.y;
return this
},wrapDateLine:function(maxExtent){var newLonLat=this.clone();
if(maxExtent){while(newLonLat.lon<maxExtent.left){newLonLat.lon+=maxExtent.getWidth()
}while(newLonLat.lon>maxExtent.right){newLonLat.lon-=maxExtent.getWidth()
}}return newLonLat
},CLASS_NAME:"OpenLayers.LonLat"});
OpenLayers.LonLat.fromString=function(str){var pair=str.split(",");
return new OpenLayers.LonLat(parseFloat(pair[0]),parseFloat(pair[1]))
};OpenLayers.Pixel=OpenLayers.Class({x:0,y:0,initialize:function(x,y){this.x=parseFloat(x);
this.y=parseFloat(y)
},toString:function(){return("x="+this.x+",y="+this.y)
},clone:function(){return new OpenLayers.Pixel(this.x,this.y)
},equals:function(px){var equals=false;
if(px!=null){equals=((this.x==px.x&&this.y==px.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(px.x)&&isNaN(px.y)))
}return equals
},add:function(x,y){if((x==null)||(y==null)){var msg=OpenLayers.i18n("pixelAddError");
OpenLayers.Console.error(msg);
return null
}return new OpenLayers.Pixel(this.x+x,this.y+y)
},offset:function(px){var newPx=this.clone();
if(px){newPx=this.add(px.x,px.y)
}return newPx
},CLASS_NAME:"OpenLayers.Pixel"});OpenLayers.Size=OpenLayers.Class({w:0,h:0,initialize:function(w,h){this.w=parseFloat(w);
this.h=parseFloat(h)
},toString:function(){return("w="+this.w+",h="+this.h)
},clone:function(){return new OpenLayers.Size(this.w,this.h)
},equals:function(sz){var equals=false;
if(sz!=null){equals=((this.w==sz.w&&this.h==sz.h)||(isNaN(this.w)&&isNaN(this.h)&&isNaN(sz.w)&&isNaN(sz.h)))
}return equals
},CLASS_NAME:"OpenLayers.Size"});OpenLayers.Console={log:function(){},debug:function(){},info:function(){},warn:function(){},error:function(){},userError:function(error){alert(error)
},assert:function(){},dir:function(){},dirxml:function(){},trace:function(){},group:function(){},groupEnd:function(){},time:function(){},timeEnd:function(){},profile:function(){},profileEnd:function(){},count:function(){},CLASS_NAME:"OpenLayers.Console"};
(function(){var scripts=document.getElementsByTagName("script");
for(var i=0,len=scripts.length;
i<len;
++i){if(scripts[i].src.indexOf("firebug.js")!=-1){if(console){OpenLayers.Util.extend(OpenLayers.Console,console);
break
}}}})();OpenLayers.Tween=OpenLayers.Class({INTERVAL:10,easing:null,begin:null,finish:null,duration:null,callbacks:null,time:null,interval:null,playing:false,initialize:function(easing){this.easing=(easing)?easing:OpenLayers.Easing.Expo.easeOut
},start:function(begin,finish,duration,options){this.playing=true;
this.begin=begin;
this.finish=finish;
this.duration=duration;
this.callbacks=options.callbacks;
this.time=0;
if(this.interval){window.clearInterval(this.interval);
this.interval=null
}if(this.callbacks&&this.callbacks.start){this.callbacks.start.call(this,this.begin)
}this.interval=window.setInterval(OpenLayers.Function.bind(this.play,this),this.INTERVAL)
},stop:function(){if(!this.playing){return 
}if(this.callbacks&&this.callbacks.done){this.callbacks.done.call(this,this.finish)
}window.clearInterval(this.interval);
this.interval=null;
this.playing=false
},play:function(){var value={};
for(var i in this.begin){var b=this.begin[i];
var f=this.finish[i];
if(b==null||f==null||isNaN(b)||isNaN(f)){OpenLayers.Console.error("invalid value for Tween")
}var c=f-b;
value[i]=this.easing.apply(this,[this.time,b,c,this.duration])
}this.time++;
if(this.callbacks&&this.callbacks.eachStep){this.callbacks.eachStep.call(this,value)
}if(this.time>this.duration){if(this.callbacks&&this.callbacks.done){this.callbacks.done.call(this,this.finish);
this.playing=false
}window.clearInterval(this.interval);
this.interval=null
}},CLASS_NAME:"OpenLayers.Tween"});
OpenLayers.Easing={CLASS_NAME:"OpenLayers.Easing"};
OpenLayers.Easing.Linear={easeIn:function(t,b,c,d){return c*t/d+b
},easeOut:function(t,b,c,d){return c*t/d+b
},easeInOut:function(t,b,c,d){return c*t/d+b
},CLASS_NAME:"OpenLayers.Easing.Linear"};
OpenLayers.Easing.Expo={easeIn:function(t,b,c,d){return(t==0)?b:c*Math.pow(2,10*(t/d-1))+b
},easeOut:function(t,b,c,d){return(t==d)?b+c:c*(-Math.pow(2,-10*t/d)+1)+b
},easeInOut:function(t,b,c,d){if(t==0){return b
}if(t==d){return b+c
}if((t/=d/2)<1){return c/2*Math.pow(2,10*(t-1))+b
}return c/2*(-Math.pow(2,-10*--t)+2)+b
},CLASS_NAME:"OpenLayers.Easing.Expo"};
OpenLayers.Easing.Quad={easeIn:function(t,b,c,d){return c*(t/=d)*t+b
},easeOut:function(t,b,c,d){return -c*(t/=d)*(t-2)+b
},easeInOut:function(t,b,c,d){if((t/=d/2)<1){return c/2*t*t+b
}return -c/2*((--t)*(t-2)-1)+b
},CLASS_NAME:"OpenLayers.Easing.Quad"};OpenLayers.ProxyHost="";
OpenLayers.nullHandler=function(request){OpenLayers.Console.userError(OpenLayers.i18n("unhandledRequest",{statusText:request.statusText}))
};
OpenLayers.loadURL=function(uri,params,caller,onComplete,onFailure){if(typeof params=="string"){params=OpenLayers.Util.getParameters(params)
}var success=(onComplete)?onComplete:OpenLayers.nullHandler;
var failure=(onFailure)?onFailure:OpenLayers.nullHandler;
return OpenLayers.Request.GET({url:uri,params:params,success:success,failure:failure,scope:caller})
};
OpenLayers.parseXMLString=function(text){var index=text.indexOf("<");
if(index>0){text=text.substring(index)
}var ajaxResponse=OpenLayers.Util.Try(function(){var xmldom=new ActiveXObject("Microsoft.XMLDOM");
xmldom.loadXML(text);
return xmldom
},function(){return new DOMParser().parseFromString(text,"text/xml")
},function(){var req=new XMLHttpRequest();
req.open("GET","data:text/xml;charset=utf-8,"+encodeURIComponent(text),false);
if(req.overrideMimeType){req.overrideMimeType("text/xml")
}req.send(null);
return req.responseXML
});
return ajaxResponse
};
OpenLayers.Ajax={emptyFunction:function(){},getTransport:function(){return OpenLayers.Util.Try(function(){return new XMLHttpRequest()
},function(){return new ActiveXObject("Msxml2.XMLHTTP")
},function(){return new ActiveXObject("Microsoft.XMLHTTP")
})||false
},activeRequestCount:0};
OpenLayers.Ajax.Responders={responders:[],register:function(responderToAdd){for(var i=0;
i<this.responders.length;
i++){if(responderToAdd==this.responders[i]){return 
}}this.responders.push(responderToAdd)
},unregister:function(responderToRemove){OpenLayers.Util.removeItem(this.reponders,responderToRemove)
},dispatch:function(callback,request,transport){var responder;
for(var i=0;
i<this.responders.length;
i++){responder=this.responders[i];
if(responder[callback]&&typeof responder[callback]=="function"){try{responder[callback].apply(responder,[request,transport])
}catch(e){}}}}};
OpenLayers.Ajax.Responders.register({onCreate:function(){OpenLayers.Ajax.activeRequestCount++
},onComplete:function(){OpenLayers.Ajax.activeRequestCount--
}});
OpenLayers.Ajax.Base=OpenLayers.Class({initialize:function(options){this.options={method:"post",asynchronous:true,contentType:"application/xml",parameters:""};
OpenLayers.Util.extend(this.options,options||{});
this.options.method=this.options.method.toLowerCase();
if(typeof this.options.parameters=="string"){this.options.parameters=OpenLayers.Util.getParameters(this.options.parameters)
}}});
OpenLayers.Ajax.Request=OpenLayers.Class(OpenLayers.Ajax.Base,{_complete:false,initialize:function(url,options){OpenLayers.Ajax.Base.prototype.initialize.apply(this,[options]);
if(OpenLayers.ProxyHost&&OpenLayers.String.startsWith(url,"http")){url=OpenLayers.ProxyHost+encodeURIComponent(url)
}this.transport=OpenLayers.Ajax.getTransport();
this.request(url)
},request:function(url){this.url=url;
this.method=this.options.method;
var params=OpenLayers.Util.extend({},this.options.parameters);
if(this.method!="get"&&this.method!="post"){params._method=this.method;
this.method="post"
}this.parameters=params;
if(params=OpenLayers.Util.getParameterString(params)){if(this.method=="get"){this.url+=((this.url.indexOf("?")>-1)?"&":"?")+params
}else{if(/Konqueror|Safari|KHTML/.test(navigator.userAgent)){params+="&_="
}}}try{var response=new OpenLayers.Ajax.Response(this);
if(this.options.onCreate){this.options.onCreate(response)
}OpenLayers.Ajax.Responders.dispatch("onCreate",this,response);
this.transport.open(this.method.toUpperCase(),this.url,this.options.asynchronous);
if(this.options.asynchronous){window.setTimeout(OpenLayers.Function.bind(this.respondToReadyState,this,1),10)
}this.transport.onreadystatechange=OpenLayers.Function.bind(this.onStateChange,this);
this.setRequestHeaders();
this.body=this.method=="post"?(this.options.postBody||params):null;
this.transport.send(this.body);
if(!this.options.asynchronous&&this.transport.overrideMimeType){this.onStateChange()
}}catch(e){this.dispatchException(e)
}},onStateChange:function(){var readyState=this.transport.readyState;
if(readyState>1&&!((readyState==4)&&this._complete)){this.respondToReadyState(this.transport.readyState)
}},setRequestHeaders:function(){var headers={"X-Requested-With":"XMLHttpRequest",Accept:"text/javascript, text/html, application/xml, text/xml, */*",OpenLayers:true};
if(this.method=="post"){headers["Content-type"]=this.options.contentType+(this.options.encoding?"; charset="+this.options.encoding:"");
if(this.transport.overrideMimeType&&(navigator.userAgent.match(/Gecko\/(\d{4})/)||[0,2005])[1]<2005){headers.Connection="close"
}}if(typeof this.options.requestHeaders=="object"){var extras=this.options.requestHeaders;
if(typeof extras.push=="function"){for(var i=0,length=extras.length;
i<length;
i+=2){headers[extras[i]]=extras[i+1]
}}else{for(var i in extras){headers[i]=extras[i]
}}}for(var name in headers){this.transport.setRequestHeader(name,headers[name])
}},success:function(){var status=this.getStatus();
return !status||(status>=200&&status<300)
},getStatus:function(){try{return this.transport.status||0
}catch(e){return 0
}},respondToReadyState:function(readyState){var state=OpenLayers.Ajax.Request.Events[readyState];
var response=new OpenLayers.Ajax.Response(this);
if(state=="Complete"){try{this._complete=true;
(this.options["on"+response.status]||this.options["on"+(this.success()?"Success":"Failure")]||OpenLayers.Ajax.emptyFunction)(response)
}catch(e){this.dispatchException(e)
}var contentType=response.getHeader("Content-type")
}try{(this.options["on"+state]||OpenLayers.Ajax.emptyFunction)(response);
OpenLayers.Ajax.Responders.dispatch("on"+state,this,response)
}catch(e){this.dispatchException(e)
}if(state=="Complete"){this.transport.onreadystatechange=OpenLayers.Ajax.emptyFunction
}},getHeader:function(name){try{return this.transport.getResponseHeader(name)
}catch(e){return null
}},dispatchException:function(exception){var handler=this.options.onException;
if(handler){handler(this,exception);
OpenLayers.Ajax.Responders.dispatch("onException",this,exception)
}else{var listener=false;
var responders=OpenLayers.Ajax.Responders.responders;
for(var i=0;
i<responders.length;
i++){if(responders[i].onException){listener=true;
break
}}if(listener){OpenLayers.Ajax.Responders.dispatch("onException",this,exception)
}else{throw exception
}}}});
OpenLayers.Ajax.Request.Events=["Uninitialized","Loading","Loaded","Interactive","Complete"];
OpenLayers.Ajax.Response=OpenLayers.Class({status:0,statusText:"",initialize:function(request){this.request=request;
var transport=this.transport=request.transport,readyState=this.readyState=transport.readyState;
if((readyState>2&&!(!!(window.attachEvent&&!window.opera)))||readyState==4){this.status=this.getStatus();
this.statusText=this.getStatusText();
this.responseText=transport.responseText==null?"":String(transport.responseText)
}if(readyState==4){var xml=transport.responseXML;
this.responseXML=xml===undefined?null:xml
}},getStatus:OpenLayers.Ajax.Request.prototype.getStatus,getStatusText:function(){try{return this.transport.statusText||""
}catch(e){return""
}},getHeader:OpenLayers.Ajax.Request.prototype.getHeader,getResponseHeader:function(name){return this.transport.getResponseHeader(name)
}});
OpenLayers.Ajax.getElementsByTagNameNS=function(parentnode,nsuri,nsprefix,tagname){var elem=null;
if(parentnode.getElementsByTagNameNS){elem=parentnode.getElementsByTagNameNS(nsuri,tagname)
}else{elem=parentnode.getElementsByTagName(nsprefix+":"+tagname)
}return elem
};
OpenLayers.Ajax.serializeXMLToString=function(xmldom){var serializer=new XMLSerializer();
var data=serializer.serializeToString(xmldom);
return data
};OpenLayers.Request={DEFAULT_CONFIG:{method:"GET",url:window.location.href,async:true,user:undefined,password:undefined,params:null,proxy:OpenLayers.ProxyHost,headers:{},data:null,callback:function(){},success:null,failure:null,scope:null},issue:function(config){var defaultConfig=OpenLayers.Util.extend(this.DEFAULT_CONFIG,{proxy:OpenLayers.ProxyHost});
config=OpenLayers.Util.applyDefaults(config,defaultConfig);
var request=new OpenLayers.Request.XMLHttpRequest();
var url=config.url;
if(config.params){var paramString=OpenLayers.Util.getParameterString(config.params);
if(paramString.length>0){var separator=(url.indexOf("?")>-1)?"&":"?";
url+=separator+paramString
}}if(config.proxy&&(url.indexOf("http")==0)){url=config.proxy+encodeURIComponent(url)
}request.open(config.method,url,config.async,config.user,config.password);
for(var header in config.headers){request.setRequestHeader(header,config.headers[header])
}var complete=(config.scope)?OpenLayers.Function.bind(config.callback,config.scope):config.callback;
var success;
if(config.success){success=(config.scope)?OpenLayers.Function.bind(config.success,config.scope):config.success
}var failure;
if(config.failure){failure=(config.scope)?OpenLayers.Function.bind(config.failure,config.scope):config.failure
}request.onreadystatechange=function(){if(request.readyState==OpenLayers.Request.XMLHttpRequest.DONE){complete(request);
if(success&&(!request.status||(request.status>=200&&request.status<300))){success(request)
}if(failure&&(request.status&&(request.status<200||request.status>=300))){failure(request)
}}};
request.send(config.data);
return request
},GET:function(config){config=OpenLayers.Util.extend(config,{method:"GET"});
return OpenLayers.Request.issue(config)
},POST:function(config){config=OpenLayers.Util.extend(config,{method:"POST"});
config.headers=config.headers?config.headers:{};
if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(config.headers))){config.headers["Content-Type"]="application/xml"
}return OpenLayers.Request.issue(config)
},PUT:function(config){config=OpenLayers.Util.extend(config,{method:"PUT"});
config.headers=config.headers?config.headers:{};
if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(config.headers))){config.headers["Content-Type"]="application/xml"
}return OpenLayers.Request.issue(config)
},DELETE:function(config){config=OpenLayers.Util.extend(config,{method:"DELETE"});
return OpenLayers.Request.issue(config)
},HEAD:function(config){config=OpenLayers.Util.extend(config,{method:"HEAD"});
return OpenLayers.Request.issue(config)
},OPTIONS:function(config){config=OpenLayers.Util.extend(config,{method:"OPTIONS"});
return OpenLayers.Request.issue(config)
}};(function(){var oXMLHttpRequest=window.XMLHttpRequest;
var bGecko=!!window.controllers,bIE=window.document.all&&!window.opera;
function cXMLHttpRequest(){this._object=oXMLHttpRequest?new oXMLHttpRequest:new window.ActiveXObject("Microsoft.XMLHTTP")
}if(bGecko&&oXMLHttpRequest.wrapped){cXMLHttpRequest.wrapped=oXMLHttpRequest.wrapped
}cXMLHttpRequest.UNSENT=0;
cXMLHttpRequest.OPENED=1;
cXMLHttpRequest.HEADERS_RECEIVED=2;
cXMLHttpRequest.LOADING=3;
cXMLHttpRequest.DONE=4;
cXMLHttpRequest.prototype.readyState=cXMLHttpRequest.UNSENT;
cXMLHttpRequest.prototype.responseText="";
cXMLHttpRequest.prototype.responseXML=null;
cXMLHttpRequest.prototype.status=0;
cXMLHttpRequest.prototype.statusText="";
cXMLHttpRequest.prototype.onreadystatechange=null;
cXMLHttpRequest.onreadystatechange=null;
cXMLHttpRequest.onopen=null;
cXMLHttpRequest.onsend=null;
cXMLHttpRequest.onabort=null;
cXMLHttpRequest.prototype.open=function(sMethod,sUrl,bAsync,sUser,sPassword){this._async=bAsync;
var oRequest=this,nState=this.readyState;
if(bIE){var fOnUnload=function(){if(oRequest._object.readyState!=cXMLHttpRequest.DONE){fCleanTransport(oRequest)
}};
if(bAsync){window.attachEvent("onunload",fOnUnload)
}}this._object.onreadystatechange=function(){if(bGecko&&!bAsync){return 
}oRequest.readyState=oRequest._object.readyState;
fSynchronizeValues(oRequest);
if(oRequest._aborted){oRequest.readyState=cXMLHttpRequest.UNSENT;
return 
}if(oRequest.readyState==cXMLHttpRequest.DONE){fCleanTransport(oRequest);
if(bIE&&bAsync){window.detachEvent("onunload",fOnUnload)
}}if(nState!=oRequest.readyState){fReadyStateChange(oRequest)
}nState=oRequest.readyState
};
if(cXMLHttpRequest.onopen){cXMLHttpRequest.onopen.apply(this,arguments)
}this._object.open(sMethod,sUrl,bAsync,sUser,sPassword);
if(!bAsync&&bGecko){this.readyState=cXMLHttpRequest.OPENED;
fReadyStateChange(this)
}};
cXMLHttpRequest.prototype.send=function(vData){if(cXMLHttpRequest.onsend){cXMLHttpRequest.onsend.apply(this,arguments)
}if(vData&&vData.nodeType){vData=window.XMLSerializer?new window.XMLSerializer().serializeToString(vData):vData.xml;
if(!this._headers["Content-Type"]){this._object.setRequestHeader("Content-Type","application/xml")
}}this._object.send(vData);
if(bGecko&&!this._async){this.readyState=cXMLHttpRequest.OPENED;
fSynchronizeValues(this);
while(this.readyState<cXMLHttpRequest.DONE){this.readyState++;
fReadyStateChange(this);
if(this._aborted){return 
}}}};
cXMLHttpRequest.prototype.abort=function(){if(cXMLHttpRequest.onabort){cXMLHttpRequest.onabort.apply(this,arguments)
}if(this.readyState>cXMLHttpRequest.UNSENT){this._aborted=true
}this._object.abort();
fCleanTransport(this)
};
cXMLHttpRequest.prototype.getAllResponseHeaders=function(){return this._object.getAllResponseHeaders()
};
cXMLHttpRequest.prototype.getResponseHeader=function(sName){return this._object.getResponseHeader(sName)
};
cXMLHttpRequest.prototype.setRequestHeader=function(sName,sValue){if(!this._headers){this._headers={}
}this._headers[sName]=sValue;
return this._object.setRequestHeader(sName,sValue)
};
cXMLHttpRequest.prototype.toString=function(){return"[object XMLHttpRequest]"
};
cXMLHttpRequest.toString=function(){return"[XMLHttpRequest]"
};
function fReadyStateChange(oRequest){if(oRequest.onreadystatechange){oRequest.onreadystatechange.apply(oRequest)
}if(cXMLHttpRequest.onreadystatechange){cXMLHttpRequest.onreadystatechange.apply(oRequest)
}}function fGetDocument(oRequest){var oDocument=oRequest.responseXML;
if(bIE&&oDocument&&!oDocument.documentElement&&oRequest.getResponseHeader("Content-Type").match(/[^\/]+\/[^\+]+\+xml/)){oDocument=new ActiveXObject("Microsoft.XMLDOM");
oDocument.loadXML(oRequest.responseText)
}if(oDocument){if((bIE&&oDocument.parseError!=0)||(oDocument.documentElement&&oDocument.documentElement.tagName=="parsererror")){return null
}}return oDocument
}function fSynchronizeValues(oRequest){try{oRequest.responseText=oRequest._object.responseText
}catch(e){}try{oRequest.responseXML=fGetDocument(oRequest._object)
}catch(e){}try{oRequest.status=oRequest._object.status
}catch(e){}try{oRequest.statusText=oRequest._object.statusText
}catch(e){}}function fCleanTransport(oRequest){oRequest._object.onreadystatechange=new window.Function;
delete oRequest._headers
}if(!window.Function.prototype.apply){window.Function.prototype.apply=function(oRequest,oArguments){if(!oArguments){oArguments=[]
}oRequest.__func=this;
oRequest.__func(oArguments[0],oArguments[1],oArguments[2],oArguments[3],oArguments[4]);
delete oRequest.__func
}
}OpenLayers.Request.XMLHttpRequest=cXMLHttpRequest
})();OpenLayers.Event={observers:false,KEY_BACKSPACE:8,KEY_TAB:9,KEY_RETURN:13,KEY_ESC:27,KEY_LEFT:37,KEY_UP:38,KEY_RIGHT:39,KEY_DOWN:40,KEY_DELETE:46,element:function(event){return event.target||event.srcElement
},isLeftClick:function(event){return(((event.which)&&(event.which==1))||((event.button)&&(event.button==1)))
},isRightClick:function(event){return(((event.which)&&(event.which==3))||((event.button)&&(event.button==2)))
},stop:function(event,allowDefault){if(!allowDefault){if(event.preventDefault){event.preventDefault()
}else{event.returnValue=false
}}if(event.stopPropagation){event.stopPropagation()
}else{event.cancelBubble=true
}},findElement:function(event,tagName){var element=OpenLayers.Event.element(event);
while(element.parentNode&&(!element.tagName||(element.tagName.toUpperCase()!=tagName.toUpperCase()))){element=element.parentNode
}return element
},observe:function(elementParam,name,observer,useCapture){var element=OpenLayers.Util.getElement(elementParam);
useCapture=useCapture||false;
if(name=="keypress"&&(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||element.attachEvent)){name="keydown"
}if(!this.observers){this.observers={}
}if(!element._eventCacheID){var idPrefix="eventCacheID_";
if(element.id){idPrefix=element.id+"_"+idPrefix
}element._eventCacheID=OpenLayers.Util.createUniqueID(idPrefix)
}var cacheID=element._eventCacheID;
if(!this.observers[cacheID]){this.observers[cacheID]=[]
}this.observers[cacheID].push({element:element,name:name,observer:observer,useCapture:useCapture});
if(element.addEventListener){element.addEventListener(name,observer,useCapture)
}else{if(element.attachEvent){element.attachEvent("on"+name,observer)
}}},stopObservingElement:function(elementParam){var element=OpenLayers.Util.getElement(elementParam);
var cacheID=element._eventCacheID;
this._removeElementObservers(OpenLayers.Event.observers[cacheID])
},_removeElementObservers:function(elementObservers){if(elementObservers){for(var i=elementObservers.length-1;
i>=0;
i--){var entry=elementObservers[i];
var args=new Array(entry.element,entry.name,entry.observer,entry.useCapture);
var removed=OpenLayers.Event.stopObserving.apply(this,args)
}}},stopObserving:function(elementParam,name,observer,useCapture){useCapture=useCapture||false;
var element=OpenLayers.Util.getElement(elementParam);
var cacheID=element._eventCacheID;
if(name=="keypress"){if(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||element.detachEvent){name="keydown"
}}var foundEntry=false;
var elementObservers=OpenLayers.Event.observers[cacheID];
if(elementObservers){var i=0;
while(!foundEntry&&i<elementObservers.length){var cacheEntry=elementObservers[i];
if((cacheEntry.name==name)&&(cacheEntry.observer==observer)&&(cacheEntry.useCapture==useCapture)){elementObservers.splice(i,1);
if(elementObservers.length==0){delete OpenLayers.Event.observers[cacheID]
}foundEntry=true;
break
}i++
}}if(foundEntry){if(element.removeEventListener){element.removeEventListener(name,observer,useCapture)
}else{if(element&&element.detachEvent){element.detachEvent("on"+name,observer)
}}}return foundEntry
},unloadCache:function(){if(OpenLayers.Event&&OpenLayers.Event.observers){for(var cacheID in OpenLayers.Event.observers){var elementObservers=OpenLayers.Event.observers[cacheID];
OpenLayers.Event._removeElementObservers.apply(this,[elementObservers])
}OpenLayers.Event.observers=false
}},CLASS_NAME:"OpenLayers.Event"};
OpenLayers.Event.observe(window,"unload",OpenLayers.Event.unloadCache,false);
if(window.Event){OpenLayers.Util.applyDefaults(window.Event,OpenLayers.Event)
}else{var Event=OpenLayers.Event
}OpenLayers.Events=OpenLayers.Class({BROWSER_EVENTS:["mouseover","mouseout","mousedown","mouseup","mousemove","click","dblclick","rightclick","dblrightclick","resize","focus","blur"],listeners:null,object:null,element:null,eventTypes:null,eventHandler:null,fallThrough:null,includeXY:false,initialize:function(object,element,eventTypes,fallThrough,options){OpenLayers.Util.extend(this,options);
this.object=object;
this.element=element;
this.fallThrough=fallThrough;
this.listeners={};
this.eventHandler=OpenLayers.Function.bindAsEventListener(this.handleBrowserEvent,this);
this.eventTypes=[];
if(eventTypes!=null){for(var i=0,len=eventTypes.length;
i<len;
i++){this.addEventType(eventTypes[i])
}}if(this.element!=null){this.attachToElement(element)
}},destroy:function(){if(this.element){OpenLayers.Event.stopObservingElement(this.element)
}this.element=null;
this.listeners=null;
this.object=null;
this.eventTypes=null;
this.fallThrough=null;
this.eventHandler=null
},addEventType:function(eventName){if(!this.listeners[eventName]){this.eventTypes.push(eventName);
this.listeners[eventName]=[]
}},attachToElement:function(element){for(var i=0,len=this.BROWSER_EVENTS.length;
i<len;
i++){var eventType=this.BROWSER_EVENTS[i];
this.addEventType(eventType);
OpenLayers.Event.observe(element,eventType,this.eventHandler)
}OpenLayers.Event.observe(element,"dragstart",OpenLayers.Event.stop)
},on:function(object){for(var type in object){if(type!="scope"){this.register(type,object.scope,object[type])
}}},register:function(type,obj,func){if((func!=null)&&(OpenLayers.Util.indexOf(this.eventTypes,type)!=-1)){if(obj==null){obj=this.object
}var listeners=this.listeners[type];
listeners.push({obj:obj,func:func})
}},registerPriority:function(type,obj,func){if(func!=null){if(obj==null){obj=this.object
}var listeners=this.listeners[type];
if(listeners!=null){listeners.unshift({obj:obj,func:func})
}}},un:function(object){for(var type in object){if(type!="scope"){this.unregister(type,object.scope,object[type])
}}},unregister:function(type,obj,func){if(obj==null){obj=this.object
}var listeners=this.listeners[type];
if(listeners!=null){for(var i=0,len=listeners.length;
i<len;
i++){if(listeners[i].obj==obj&&listeners[i].func==func){listeners.splice(i,1);
break
}}}},remove:function(type){if(this.listeners[type]!=null){this.listeners[type]=[]
}},triggerEvent:function(type,evt){if(evt==null){evt={}
}evt.object=this.object;
evt.element=this.element;
if(!evt.type){evt.type=type
}var listeners=(this.listeners[type])?this.listeners[type].slice():null;
if((listeners!=null)&&(listeners.length>0)){var continueChain;
for(var i=0,len=listeners.length;
i<len;
i++){var callback=listeners[i];
continueChain=callback.func.apply(callback.obj,[evt]);
if((continueChain!=undefined)&&(continueChain==false)){break
}}if(!this.fallThrough){OpenLayers.Event.stop(evt,true)
}}return continueChain
},handleBrowserEvent:function(evt){if(this.includeXY){evt.xy=this.getMousePosition(evt)
}this.triggerEvent(evt.type,evt)
},clearMouseCache:function(){this.element.scrolls=null;
this.element.lefttop=null;
this.element.offsets=null
},getMousePosition:function(evt){if(!this.includeXY){this.clearMouseCache()
}else{if(!this.element.hasScrollEvent){OpenLayers.Event.observe(window,"scroll",OpenLayers.Function.bind(this.clearMouseCache,this));
this.element.hasScrollEvent=true
}}if(!this.element.scrolls){this.element.scrolls=[];
this.element.scrolls[0]=(document.documentElement.scrollLeft||document.body.scrollLeft);
this.element.scrolls[1]=(document.documentElement.scrollTop||document.body.scrollTop)
}if(!this.element.lefttop){this.element.lefttop=[];
this.element.lefttop[0]=(document.documentElement.clientLeft||0);
this.element.lefttop[1]=(document.documentElement.clientTop||0)
}if(!this.element.offsets){this.element.offsets=OpenLayers.Util.pagePosition(this.element);
this.element.offsets[0]+=this.element.scrolls[0];
this.element.offsets[1]+=this.element.scrolls[1]
}return new OpenLayers.Pixel((evt.clientX+this.element.scrolls[0])-this.element.offsets[0]-this.element.lefttop[0],(evt.clientY+this.element.scrolls[1])-this.element.offsets[1]-this.element.lefttop[1])
},CLASS_NAME:"OpenLayers.Events"});OpenLayers.Projection=OpenLayers.Class({proj:null,projCode:null,initialize:function(projCode,options){OpenLayers.Util.extend(this,options);
this.projCode=projCode;
if(window.Proj4js){this.proj=new Proj4js.Proj(projCode)
}},getCode:function(){return this.proj?this.proj.srsCode:this.projCode
},getUnits:function(){return this.proj?this.proj.units:null
},toString:function(){return this.getCode()
},equals:function(projection){if(projection&&projection.getCode){return this.getCode()==projection.getCode()
}else{return false
}},destroy:function(){delete this.proj;
delete this.projCode
},CLASS_NAME:"OpenLayers.Projection"});
OpenLayers.Projection.transforms={};
OpenLayers.Projection.addTransform=function(from,to,method){if(!OpenLayers.Projection.transforms[from]){OpenLayers.Projection.transforms[from]={}
}OpenLayers.Projection.transforms[from][to]=method
};
OpenLayers.Projection.transform=function(point,source,dest){if(source.proj&&dest.proj){point=Proj4js.transform(source.proj,dest.proj,point)
}else{if(source&&dest&&OpenLayers.Projection.transforms[source.getCode()]&&OpenLayers.Projection.transforms[source.getCode()][dest.getCode()]){OpenLayers.Projection.transforms[source.getCode()][dest.getCode()](point)
}}return point
};OpenLayers.Layer=OpenLayers.Class({id:null,name:null,div:null,opacity:null,alwaysInRange:null,EVENT_TYPES:["loadstart","loadend","loadcancel","visibilitychanged","moveend"],events:null,map:null,isBaseLayer:false,alpha:false,displayInLayerSwitcher:true,visibility:true,attribution:null,inRange:false,imageSize:null,imageOffset:null,options:null,eventListeners:null,gutter:0,projection:null,units:null,scales:null,resolutions:null,maxExtent:null,minExtent:null,maxResolution:null,minResolution:null,numZoomLevels:null,minScale:null,maxScale:null,displayOutsideMaxExtent:false,wrapDateLine:false,transitionEffect:null,SUPPORTED_TRANSITIONS:["resize"],initialize:function(name,options){this.addOptions(options);
this.name=name;
if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");
this.div=OpenLayers.Util.createDiv(this.id);
this.div.style.width="100%";
this.div.style.height="100%";
this.events=new OpenLayers.Events(this,this.div,this.EVENT_TYPES);
if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)
}}if(this.wrapDateLine){this.displayOutsideMaxExtent=true
}},destroy:function(setNewBaseLayer){if(setNewBaseLayer==null){setNewBaseLayer=true
}if(this.map!=null){this.map.removeLayer(this,setNewBaseLayer)
}this.projection=null;
this.map=null;
this.name=null;
this.div=null;
this.options=null;
if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)
}this.events.destroy()
}this.eventListeners=null;
this.events=null
},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer(this.name,this.options)
}OpenLayers.Util.applyDefaults(obj,this);
obj.map=null;
return obj
},setName:function(newName){if(newName!=this.name){this.name=newName;
if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"name"})
}}},addOptions:function(newOptions){if(this.options==null){this.options={}
}OpenLayers.Util.extend(this.options,newOptions);
OpenLayers.Util.extend(this,newOptions)
},onMapResize:function(){},redraw:function(){var redrawn=false;
if(this.map){this.inRange=this.calculateInRange();
var extent=this.getExtent();
if(extent&&this.inRange&&this.visibility){this.moveTo(extent,true,false);
redrawn=true
}}return redrawn
},moveTo:function(bounds,zoomChanged,dragging){var display=this.visibility;
if(!this.isBaseLayer){display=display&&this.inRange
}this.display(display)
},setMap:function(map){if(this.map==null){this.map=map;
this.maxExtent=this.maxExtent||this.map.maxExtent;
this.projection=this.projection||this.map.projection;
if(this.projection&&typeof this.projection=="string"){this.projection=new OpenLayers.Projection(this.projection)
}this.units=this.projection.getUnits()||this.units||this.map.units;
this.initResolutions();
if(!this.isBaseLayer){this.inRange=this.calculateInRange();
var show=((this.visibility)&&(this.inRange));
this.div.style.display=show?"":"none"
}this.setTileSize()
}},removeMap:function(map){},getImageSize:function(){return(this.imageSize||this.tileSize)
},setTileSize:function(size){var tileSize=(size)?size:((this.tileSize)?this.tileSize:this.map.getTileSize());
this.tileSize=tileSize;
if(this.gutter){this.imageOffset=new OpenLayers.Pixel(-this.gutter,-this.gutter);
this.imageSize=new OpenLayers.Size(tileSize.w+(2*this.gutter),tileSize.h+(2*this.gutter))
}},getVisibility:function(){return this.visibility
},setVisibility:function(visibility){if(visibility!=this.visibility){this.visibility=visibility;
this.display(visibility);
this.redraw();
if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"visibility"})
}this.events.triggerEvent("visibilitychanged")
}},display:function(display){var inRange=this.calculateInRange();
if(display!=(this.div.style.display!="none")){this.div.style.display=(display&&inRange)?"block":"none"
}},calculateInRange:function(){var inRange=false;
if(this.alwaysInRange){inRange=true
}else{if(this.map){var resolution=this.map.getResolution();
inRange=((resolution>=this.minResolution)&&(resolution<=this.maxResolution))
}}return inRange
},setIsBaseLayer:function(isBaseLayer){if(isBaseLayer!=this.isBaseLayer){this.isBaseLayer=isBaseLayer;
if(this.map!=null){this.map.events.triggerEvent("changebaselayer",{layer:this})
}}},initResolutions:function(){var props=new Array("projection","units","scales","resolutions","maxScale","minScale","maxResolution","minResolution","minExtent","maxExtent","numZoomLevels","maxZoomLevel");
var notScaleProps=["projection","units"];
var useInRange=false;
var confProps={};
for(var i=0,len=props.length;
i<len;
i++){var property=props[i];
if(this.options[property]&&OpenLayers.Util.indexOf(notScaleProps,property)==-1){useInRange=true
}confProps[property]=this.options[property]||this.map[property]
}if(this.alwaysInRange==null){this.alwaysInRange=!useInRange
}if((this.options.minScale!=null||this.options.maxScale!=null)&&this.options.scales==null){confProps.scales=null
}if((this.options.minResolution!=null||this.options.maxResolution!=null)&&this.options.resolutions==null){confProps.resolutions=null
}if((!confProps.numZoomLevels)&&(confProps.maxZoomLevel)){confProps.numZoomLevels=confProps.maxZoomLevel+1
}if((confProps.scales!=null)||(confProps.resolutions!=null)){if(confProps.scales!=null){confProps.resolutions=[];
for(var i=0,len=confProps.scales.length;
i<len;
i++){var scale=confProps.scales[i];
confProps.resolutions[i]=OpenLayers.Util.getResolutionFromScale(scale,confProps.units)
}}confProps.numZoomLevels=confProps.resolutions.length
}else{if(confProps.minScale){confProps.maxResolution=OpenLayers.Util.getResolutionFromScale(confProps.minScale,confProps.units)
}else{if(confProps.maxResolution=="auto"){var viewSize=this.map.getSize();
var wRes=confProps.maxExtent.getWidth()/viewSize.w;
var hRes=confProps.maxExtent.getHeight()/viewSize.h;
confProps.maxResolution=Math.max(wRes,hRes)
}}if(confProps.maxScale!=null){confProps.minResolution=OpenLayers.Util.getResolutionFromScale(confProps.maxScale,confProps.units)
}else{if((confProps.minResolution=="auto")&&(confProps.minExtent!=null)){var viewSize=this.map.getSize();
var wRes=confProps.minExtent.getWidth()/viewSize.w;
var hRes=confProps.minExtent.getHeight()/viewSize.h;
confProps.minResolution=Math.max(wRes,hRes)
}}if(confProps.minResolution!=null&&this.options.numZoomLevels==undefined){var ratio=confProps.maxResolution/confProps.minResolution;
confProps.numZoomLevels=Math.floor(Math.log(ratio)/Math.log(2))+1
}confProps.resolutions=new Array(confProps.numZoomLevels);
var base=2;
if(typeof confProps.minResolution=="number"&&confProps.numZoomLevels>1){base=Math.pow((confProps.maxResolution/confProps.minResolution),(1/(confProps.numZoomLevels-1)))
}for(var i=0;
i<confProps.numZoomLevels;
i++){var res=confProps.maxResolution/Math.pow(base,i);
confProps.resolutions[i]=res
}}confProps.resolutions.sort(function(a,b){return(b-a)
});
this.resolutions=confProps.resolutions;
this.maxResolution=confProps.resolutions[0];
var lastIndex=confProps.resolutions.length-1;
this.minResolution=confProps.resolutions[lastIndex];
this.scales=[];
for(var i=0,len=confProps.resolutions.length;
i<len;
i++){this.scales[i]=OpenLayers.Util.getScaleFromResolution(confProps.resolutions[i],confProps.units)
}this.minScale=this.scales[0];
this.maxScale=this.scales[this.scales.length-1];
this.numZoomLevels=confProps.numZoomLevels
},getResolution:function(){var zoom=this.map.getZoom();
return this.getResolutionForZoom(zoom)
},getExtent:function(){return this.map.calculateBounds()
},getZoomForExtent:function(extent,closest){var viewSize=this.map.getSize();
var idealResolution=Math.max(extent.getWidth()/viewSize.w,extent.getHeight()/viewSize.h);
return this.getZoomForResolution(idealResolution,closest)
},getDataExtent:function(){},getResolutionForZoom:function(zoom){zoom=Math.max(0,Math.min(zoom,this.resolutions.length-1));
var resolution;
if(this.map.fractionalZoom){var low=Math.floor(zoom);
var high=Math.ceil(zoom);
resolution=this.resolutions[high]+((zoom-low)*(this.resolutions[low]-this.resolutions[high]))
}else{resolution=this.resolutions[Math.round(zoom)]
}return resolution
},getZoomForResolution:function(resolution,closest){var zoom;
if(this.map.fractionalZoom){var lowZoom=0;
var highZoom=this.resolutions.length-1;
var highRes=this.resolutions[lowZoom];
var lowRes=this.resolutions[highZoom];
var res;
for(var i=0,len=this.resolutions.length;
i<len;
++i){res=this.resolutions[i];
if(res>=resolution){highRes=res;
lowZoom=i
}if(res<=resolution){lowRes=res;
highZoom=i;
break
}}var dRes=highRes-lowRes;
if(dRes>0){zoom=lowZoom+((resolution-lowRes)/dRes)
}else{zoom=lowZoom
}}else{var diff;
var minDiff=Number.POSITIVE_INFINITY;
for(var i=0,len=this.resolutions.length;
i<len;
i++){if(closest){diff=Math.abs(this.resolutions[i]-resolution);
if(diff>minDiff){break
}minDiff=diff
}else{if(this.resolutions[i]<resolution){break
}}}zoom=Math.max(0,i-1)
}return zoom
},getLonLatFromViewPortPx:function(viewPortPx){var lonlat=null;
if(viewPortPx!=null){var size=this.map.getSize();
var center=this.map.getCenter();
if(center){var res=this.map.getResolution();
var delta_x=viewPortPx.x-(size.w/2);
var delta_y=viewPortPx.y-(size.h/2);
lonlat=new OpenLayers.LonLat(center.lon+delta_x*res,center.lat-delta_y*res);
if(this.wrapDateLine){lonlat=lonlat.wrapDateLine(this.maxExtent)
}}}return lonlat
},getViewPortPxFromLonLat:function(lonlat){var px=null;
if(lonlat!=null){var resolution=this.map.getResolution();
var extent=this.map.getExtent();
px=new OpenLayers.Pixel((1/resolution*(lonlat.lon-extent.left)),(1/resolution*(extent.top-lonlat.lat)))
}return px
},setOpacity:function(opacity){if(opacity!=this.opacity){this.opacity=opacity;
for(var i=0,len=this.div.childNodes.length;
i<len;
++i){var element=this.div.childNodes[i].firstChild;
OpenLayers.Util.modifyDOMElement(element,null,null,null,null,null,null,opacity)
}}},getZIndex:function(){return this.div.style.zIndex
},setZIndex:function(zIndex){this.div.style.zIndex=zIndex
},adjustBounds:function(bounds){if(this.gutter){var mapGutter=this.gutter*this.map.getResolution();
bounds=new OpenLayers.Bounds(bounds.left-mapGutter,bounds.bottom-mapGutter,bounds.right+mapGutter,bounds.top+mapGutter)
}if(this.wrapDateLine){var wrappingOptions={rightTolerance:this.getResolution()};
bounds=bounds.wrapDateLine(this.maxExtent,wrappingOptions)
}return bounds
},CLASS_NAME:"OpenLayers.Layer"});OpenLayers.Icon=OpenLayers.Class({url:null,size:null,offset:null,calculateOffset:null,imageDiv:null,px:null,initialize:function(url,size,offset,calculateOffset){this.url=url;
this.size=(size)?size:new OpenLayers.Size(20,20);
this.offset=offset?offset:new OpenLayers.Pixel(-(this.size.w/2),-(this.size.h/2));
this.calculateOffset=calculateOffset;
var id=OpenLayers.Util.createUniqueID("OL_Icon_");
this.imageDiv=OpenLayers.Util.createAlphaImageDiv(id)
},destroy:function(){OpenLayers.Event.stopObservingElement(this.imageDiv.firstChild);
this.imageDiv.innerHTML="";
this.imageDiv=null
},clone:function(){return new OpenLayers.Icon(this.url,this.size,this.offset,this.calculateOffset)
},setSize:function(size){if(size!=null){this.size=size
}this.draw()
},setUrl:function(url){if(url!=null){this.url=url
}this.draw()
},draw:function(px){OpenLayers.Util.modifyAlphaImageDiv(this.imageDiv,null,null,this.size,this.url,"absolute");
this.moveTo(px);
return this.imageDiv
},setOpacity:function(opacity){OpenLayers.Util.modifyAlphaImageDiv(this.imageDiv,null,null,null,null,null,null,null,opacity)
},moveTo:function(px){if(px!=null){this.px=px
}if(this.imageDiv!=null){if(this.px==null){this.display(false)
}else{if(this.calculateOffset){this.offset=this.calculateOffset(this.size)
}var offsetPx=this.px.offset(this.offset);
OpenLayers.Util.modifyAlphaImageDiv(this.imageDiv,null,offsetPx)
}}},display:function(display){this.imageDiv.style.display=(display)?"":"none"
},CLASS_NAME:"OpenLayers.Icon"});OpenLayers.Marker=OpenLayers.Class({icon:null,lonlat:null,events:null,map:null,initialize:function(lonlat,icon){this.lonlat=lonlat;
var newIcon=(icon)?icon:OpenLayers.Marker.defaultIcon();
if(this.icon==null){this.icon=newIcon
}else{this.icon.url=newIcon.url;
this.icon.size=newIcon.size;
this.icon.offset=newIcon.offset;
this.icon.calculateOffset=newIcon.calculateOffset
}this.events=new OpenLayers.Events(this,this.icon.imageDiv,null)
},destroy:function(){this.map=null;
this.events.destroy();
this.events=null;
if(this.icon!=null){this.icon.destroy();
this.icon=null
}},draw:function(px){return this.icon.draw(px)
},moveTo:function(px){if((px!=null)&&(this.icon!=null)){this.icon.moveTo(px)
}this.lonlat=this.map.getLonLatFromLayerPx(px)
},onScreen:function(){var onScreen=false;
if(this.map){var screenBounds=this.map.getExtent();
onScreen=screenBounds.containsLonLat(this.lonlat)
}return onScreen
},inflate:function(inflate){if(this.icon){var newSize=new OpenLayers.Size(this.icon.size.w*inflate,this.icon.size.h*inflate);
this.icon.setSize(newSize)
}},setOpacity:function(opacity){this.icon.setOpacity(opacity)
},setUrl:function(url){this.icon.setUrl(url)
},display:function(display){this.icon.display(display)
},CLASS_NAME:"OpenLayers.Marker"});
OpenLayers.Marker.defaultIcon=function(){var url=OpenLayers.Util.getImagesLocation()+"marker.png";
var size=new OpenLayers.Size(21,25);
var calculateOffset=function(size){return new OpenLayers.Pixel(-(size.w/2),-size.h)
};
return new OpenLayers.Icon(url,size,null,calculateOffset)
};OpenLayers.Marker.Box=OpenLayers.Class(OpenLayers.Marker,{bounds:null,div:null,initialize:function(bounds,borderColor,borderWidth){this.bounds=bounds;
this.div=OpenLayers.Util.createDiv();
this.div.style.overflow="hidden";
this.events=new OpenLayers.Events(this,this.div,null);
this.setBorder(borderColor,borderWidth)
},destroy:function(){this.bounds=null;
this.div=null;
OpenLayers.Marker.prototype.destroy.apply(this,arguments)
},setBorder:function(color,width){if(!color){color="red"
}if(!width){width=2
}this.div.style.border=width+"px solid "+color
},draw:function(px,sz){OpenLayers.Util.modifyDOMElement(this.div,null,px,sz);
return this.div
},onScreen:function(){var onScreen=false;
if(this.map){var screenBounds=this.map.getExtent();
onScreen=screenBounds.containsBounds(this.bounds,true,true)
}return onScreen
},display:function(display){this.div.style.display=(display)?"":"none"
},CLASS_NAME:"OpenLayers.Marker.Box"});OpenLayers.Popup=OpenLayers.Class({events:null,id:"",lonlat:null,div:null,contentSize:null,size:null,contentHTML:null,backgroundColor:"",opacity:"",border:"",contentDiv:null,groupDiv:null,closeDiv:null,autoSize:false,minSize:null,maxSize:null,displayClass:"olPopup",contentDisplayClass:"olPopupContent",padding:0,fixPadding:function(){if(typeof this.padding=="number"){this.padding=new OpenLayers.Bounds(this.padding,this.padding,this.padding,this.padding)
}},panMapIfOutOfView:false,map:null,initialize:function(id,lonlat,contentSize,contentHTML,closeBox,closeBoxCallback){if(id==null){id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")
}this.id=id;
this.lonlat=lonlat;
this.contentSize=(contentSize!=null)?contentSize:new OpenLayers.Size(OpenLayers.Popup.WIDTH,OpenLayers.Popup.HEIGHT);
if(contentHTML!=null){this.contentHTML=contentHTML
}this.backgroundColor=OpenLayers.Popup.COLOR;
this.opacity=OpenLayers.Popup.OPACITY;
this.border=OpenLayers.Popup.BORDER;
this.div=OpenLayers.Util.createDiv(this.id,null,null,null,null,null,"hidden");
this.div.className=this.displayClass;
var groupDivId=this.id+"_GroupDiv";
this.groupDiv=OpenLayers.Util.createDiv(groupDivId,null,null,null,"relative",null,"hidden");
var id=this.div.id+"_contentDiv";
this.contentDiv=OpenLayers.Util.createDiv(id,null,this.contentSize.clone(),null,"relative");
this.contentDiv.className=this.contentDisplayClass;
this.groupDiv.appendChild(this.contentDiv);
this.div.appendChild(this.groupDiv);
if(closeBox){this.addCloseBox(closeBoxCallback)
}this.registerEvents()
},destroy:function(){this.id=null;
this.lonlat=null;
this.size=null;
this.contentHTML=null;
this.backgroundColor=null;
this.opacity=null;
this.border=null;
this.events.destroy();
this.events=null;
if(this.closeDiv){OpenLayers.Event.stopObservingElement(this.closeDiv);
this.groupDiv.removeChild(this.closeDiv)
}this.closeDiv=null;
this.div.removeChild(this.groupDiv);
this.groupDiv=null;
if(this.map!=null){this.map.removePopup(this)
}this.map=null;
this.div=null;
this.autoSize=null;
this.minSize=null;
this.maxSize=null;
this.padding=null;
this.panMapIfOutOfView=null
},draw:function(px){if(px==null){if((this.lonlat!=null)&&(this.map!=null)){px=this.map.getLayerPxFromLonLat(this.lonlat)
}}if(OpenLayers.Util.getBrowserName()=="firefox"){this.map.events.register("movestart",this,function(){var style=document.defaultView.getComputedStyle(this.contentDiv,null);
var currentOverflow=style.getPropertyValue("overflow");
if(currentOverflow!="hidden"){this.contentDiv._oldOverflow=currentOverflow;
this.contentDiv.style.overflow="hidden"
}});
this.map.events.register("moveend",this,function(){var oldOverflow=this.contentDiv._oldOverflow;
if(oldOverflow){this.contentDiv.style.overflow=oldOverflow;
this.contentDiv._oldOverflow=null
}})
}this.moveTo(px);
if(!this.autoSize&&!this.size){this.setSize(this.contentSize)
}this.setBackgroundColor();
this.setOpacity();
this.setBorder();
this.setContentHTML();
if(this.panMapIfOutOfView){this.panIntoView()
}return this.div
},updatePosition:function(){if((this.lonlat)&&(this.map)){var px=this.map.getLayerPxFromLonLat(this.lonlat);
if(px){this.moveTo(px)
}}},moveTo:function(px){if((px!=null)&&(this.div!=null)){this.div.style.left=px.x+"px";
this.div.style.top=px.y+"px"
}},visible:function(){return OpenLayers.Element.visible(this.div)
},toggle:function(){if(this.visible()){this.hide()
}else{this.show()
}},show:function(){OpenLayers.Element.show(this.div);
if(this.panMapIfOutOfView){this.panIntoView()
}},hide:function(){OpenLayers.Element.hide(this.div)
},setSize:function(contentSize){this.size=contentSize.clone();
var contentDivPadding=this.getContentDivPadding();
var wPadding=contentDivPadding.left+contentDivPadding.right;
var hPadding=contentDivPadding.top+contentDivPadding.bottom;
this.fixPadding();
wPadding+=this.padding.left+this.padding.right;
hPadding+=this.padding.top+this.padding.bottom;
if(this.closeDiv){var closeDivWidth=parseInt(this.closeDiv.style.width);
wPadding+=closeDivWidth+contentDivPadding.right
}this.size.w+=wPadding;
this.size.h+=hPadding;
if(OpenLayers.Util.getBrowserName()=="msie"){this.contentSize.w+=contentDivPadding.left+contentDivPadding.right;
this.contentSize.h+=contentDivPadding.bottom+contentDivPadding.top
}if(this.div!=null){this.div.style.width=this.size.w+"px";
this.div.style.height=this.size.h+"px"
}if(this.contentDiv!=null){this.contentDiv.style.width=contentSize.w+"px";
this.contentDiv.style.height=contentSize.h+"px"
}},updateSize:function(){var preparedHTML="<div class='"+this.contentDisplayClass+"'>"+this.contentDiv.innerHTML+"<div>";
var realSize=OpenLayers.Util.getRenderedDimensions(preparedHTML,null,{displayClass:this.displayClass});
var safeSize=this.getSafeContentSize(realSize);
var newSize=null;
if(safeSize.equals(realSize)){newSize=realSize
}else{var fixedSize=new OpenLayers.Size();
fixedSize.w=(safeSize.w<realSize.w)?safeSize.w:null;
fixedSize.h=(safeSize.h<realSize.h)?safeSize.h:null;
if(fixedSize.w&&fixedSize.h){newSize=safeSize
}else{var clippedSize=OpenLayers.Util.getRenderedDimensions(preparedHTML,fixedSize,{displayClass:this.contentDisplayClass});
var currentOverflow=OpenLayers.Element.getStyle(this.contentDiv,"overflow");
if((currentOverflow!="hidden")&&(clippedSize.equals(safeSize))){var scrollBar=OpenLayers.Util.getScrollbarWidth();
if(fixedSize.w){clippedSize.h+=scrollBar
}else{clippedSize.w+=scrollBar
}}newSize=this.getSafeContentSize(clippedSize)
}}this.setSize(newSize)
},setBackgroundColor:function(color){if(color!=undefined){this.backgroundColor=color
}if(this.div!=null){this.div.style.backgroundColor=this.backgroundColor
}},setOpacity:function(opacity){if(opacity!=undefined){this.opacity=opacity
}if(this.div!=null){this.div.style.opacity=this.opacity;
this.div.style.filter="alpha(opacity="+this.opacity*100+")"
}},setBorder:function(border){if(border!=undefined){this.border=border
}if(this.div!=null){this.div.style.border=this.border
}},setContentHTML:function(contentHTML){if(contentHTML!=null){this.contentHTML=contentHTML
}if((this.contentDiv!=null)&&(this.contentHTML!=null)&&(this.contentHTML!=this.contentDiv.innerHTML)){this.contentDiv.innerHTML=this.contentHTML;
if(this.autoSize){this.registerImageListeners();
this.updateSize()
}}},registerImageListeners:function(){var onImgLoad=function(){this.popup.updateSize();
if(this.popup.visible()&&this.popup.panMapIfOutOfView){this.popup.panIntoView()
}OpenLayers.Event.stopObserving(this.img,"load",this.img._onImageLoad)
};
var images=this.contentDiv.getElementsByTagName("img");
for(var i=0,len=images.length;
i<len;
i++){var img=images[i];
if(img.width==0||img.height==0){var context={popup:this,img:img};
img._onImgLoad=OpenLayers.Function.bind(onImgLoad,context);
OpenLayers.Event.observe(img,"load",img._onImgLoad)
}}},getSafeContentSize:function(size){var safeContentSize=size.clone();
var contentDivPadding=this.getContentDivPadding();
var wPadding=contentDivPadding.left+contentDivPadding.right;
var hPadding=contentDivPadding.top+contentDivPadding.bottom;
this.fixPadding();
wPadding+=this.padding.left+this.padding.right;
hPadding+=this.padding.top+this.padding.bottom;
if(this.closeDiv){var closeDivWidth=parseInt(this.closeDiv.style.width);
wPadding+=closeDivWidth+contentDivPadding.right
}if(this.minSize){safeContentSize.w=Math.max(safeContentSize.w,(this.minSize.w-wPadding));
safeContentSize.h=Math.max(safeContentSize.h,(this.minSize.h-hPadding))
}if(this.maxSize){safeContentSize.w=Math.min(safeContentSize.w,(this.maxSize.w-wPadding));
safeContentSize.h=Math.min(safeContentSize.h,(this.maxSize.h-hPadding))
}if(this.map&&this.map.size){var maxY=this.map.size.h-this.map.paddingForPopups.top-this.map.paddingForPopups.bottom-hPadding;
var maxX=this.map.size.w-this.map.paddingForPopups.left-this.map.paddingForPopups.right-wPadding;
safeContentSize.w=Math.min(safeContentSize.w,maxX);
safeContentSize.h=Math.min(safeContentSize.h,maxY)
}return safeContentSize
},getContentDivPadding:function(){var contentDivPadding=this._contentDivPadding;
if(!contentDivPadding){this.div.style.display="none";
document.body.appendChild(this.div);
contentDivPadding=new OpenLayers.Bounds(OpenLayers.Element.getStyle(this.contentDiv,"padding-left"),OpenLayers.Element.getStyle(this.contentDiv,"padding-bottom"),OpenLayers.Element.getStyle(this.contentDiv,"padding-right"),OpenLayers.Element.getStyle(this.contentDiv,"padding-top"));
this._contentDivPadding=contentDivPadding;
document.body.removeChild(this.div);
this.div.style.display=""
}return contentDivPadding
},addCloseBox:function(callback){this.closeDiv=OpenLayers.Util.createDiv(this.id+"_close",null,new OpenLayers.Size(17,17));
this.closeDiv.className="olPopupCloseBox";
var contentDivPadding=this.getContentDivPadding();
this.closeDiv.style.right=contentDivPadding.right+"px";
this.closeDiv.style.top=contentDivPadding.top+"px";
this.groupDiv.appendChild(this.closeDiv);
var closePopup=callback||function(e){this.hide();
OpenLayers.Event.stop(e)
};
OpenLayers.Event.observe(this.closeDiv,"click",OpenLayers.Function.bindAsEventListener(closePopup,this))
},panIntoView:function(){var mapSize=this.map.getSize();
var origTL=this.map.getViewPortPxFromLayerPx(new OpenLayers.Pixel(parseInt(this.div.style.left),parseInt(this.div.style.top)));
var newTL=origTL.clone();
if(origTL.x<this.map.paddingForPopups.left){newTL.x=this.map.paddingForPopups.left
}else{if((origTL.x+this.size.w)>(mapSize.w-this.map.paddingForPopups.right)){newTL.x=mapSize.w-this.map.paddingForPopups.right-this.size.w
}}if(origTL.y<this.map.paddingForPopups.top){newTL.y=this.map.paddingForPopups.top
}else{if((origTL.y+this.size.h)>(mapSize.h-this.map.paddingForPopups.bottom)){newTL.y=mapSize.h-this.map.paddingForPopups.bottom-this.size.h
}}var dx=origTL.x-newTL.x;
var dy=origTL.y-newTL.y;
if(dx=="NaN"){dx=0
}if(dy=="NaN"){dy=0
}if(dx!=0||dy!=0){this.map.pan(dx,dy)
}},registerEvents:function(){this.events=new OpenLayers.Events(this,this.div,null,true);
this.events.on({mousedown:this.onmousedown,mousemove:this.onmousemove,mouseup:this.onmouseup,click:this.onclick,mouseout:this.onmouseout,dblclick:this.ondblclick,scope:this})
},onmousedown:function(evt){this.mousedown=true;
OpenLayers.Event.stop(evt,true)
},onmousemove:function(evt){if(this.mousedown){OpenLayers.Event.stop(evt,true)
}},onmouseup:function(evt){if(this.mousedown){this.mousedown=false;
OpenLayers.Event.stop(evt,true)
}},onclick:function(evt){OpenLayers.Event.stop(evt,true)
},onmouseout:function(evt){this.mousedown=false
},ondblclick:function(evt){OpenLayers.Event.stop(evt,true)
},CLASS_NAME:"OpenLayers.Popup"});
OpenLayers.Popup.WIDTH=200;
OpenLayers.Popup.HEIGHT=200;
OpenLayers.Popup.COLOR="white";
OpenLayers.Popup.OPACITY=1;
OpenLayers.Popup.BORDER="0px";OpenLayers.Tile=OpenLayers.Class({EVENT_TYPES:["loadstart","loadend","reload","unload"],events:null,id:null,layer:null,url:null,bounds:null,size:null,position:null,isLoading:false,initialize:function(layer,position,bounds,url,size){this.layer=layer;
this.position=position.clone();
this.bounds=bounds.clone();
this.url=url;
this.size=size.clone();
this.id=OpenLayers.Util.createUniqueID("Tile_");
this.events=new OpenLayers.Events(this,null,this.EVENT_TYPES)
},unload:function(){if(this.isLoading){this.isLoading=false;
this.events.triggerEvent("unload")
}},destroy:function(){this.layer=null;
this.bounds=null;
this.size=null;
this.position=null;
this.events.destroy();
this.events=null
},clone:function(obj){if(obj==null){obj=new OpenLayers.Tile(this.layer,this.position,this.bounds,this.url,this.size)
}OpenLayers.Util.applyDefaults(obj,this);
return obj
},draw:function(){var maxExtent=this.layer.maxExtent;
var withinMaxExtent=(maxExtent&&this.bounds.intersectsBounds(maxExtent,false));
this.shouldDraw=(withinMaxExtent||this.layer.displayOutsideMaxExtent);
this.clear();
return this.shouldDraw
},moveTo:function(bounds,position,redraw){if(redraw==null){redraw=true
}this.bounds=bounds.clone();
this.position=position.clone();
if(redraw){this.draw()
}},clear:function(){},getBoundsFromBaseLayer:function(position){var msg=OpenLayers.i18n("reprojectDeprecated",{layerName:this.layer.name});
OpenLayers.Console.warn(msg);
var topLeft=this.layer.map.getLonLatFromLayerPx(position);
var bottomRightPx=position.clone();
bottomRightPx.x+=this.size.w;
bottomRightPx.y+=this.size.h;
var bottomRight=this.layer.map.getLonLatFromLayerPx(bottomRightPx);
if(topLeft.lon>bottomRight.lon){if(topLeft.lon<0){topLeft.lon=-180-(topLeft.lon+180)
}else{bottomRight.lon=180+bottomRight.lon+180
}}var bounds=new OpenLayers.Bounds(topLeft.lon,bottomRight.lat,bottomRight.lon,topLeft.lat);
return bounds
},showTile:function(){if(this.shouldDraw){this.show()
}},show:function(){},hide:function(){},CLASS_NAME:"OpenLayers.Tile"});OpenLayers.Tile.Image=OpenLayers.Class(OpenLayers.Tile,{url:null,imgDiv:null,frame:null,layerAlphaHack:null,isBackBuffer:false,lastRatio:1,isFirstDraw:true,backBufferTile:null,initialize:function(layer,position,bounds,url,size){OpenLayers.Tile.prototype.initialize.apply(this,arguments);
this.url=url;
this.frame=document.createElement("div");
this.frame.style.overflow="hidden";
this.frame.style.position="absolute";
this.layerAlphaHack=this.layer.alpha&&OpenLayers.Util.alphaHack()
},destroy:function(){if(this.imgDiv!=null){if(this.layerAlphaHack){OpenLayers.Event.stopObservingElement(this.imgDiv.childNodes[0].id)
}else{OpenLayers.Event.stopObservingElement(this.imgDiv.id)
}if(this.imgDiv.parentNode==this.frame){this.frame.removeChild(this.imgDiv);
this.imgDiv.map=null
}this.imgDiv.urls=null
}this.imgDiv=null;
if((this.frame!=null)&&(this.frame.parentNode==this.layer.div)){this.layer.div.removeChild(this.frame)
}this.frame=null;
if(this.backBufferTile){this.backBufferTile.destroy();
this.backBufferTile=null
}this.layer.events.unregister("loadend",this,this.resetBackBuffer);
OpenLayers.Tile.prototype.destroy.apply(this,arguments)
},clone:function(obj){if(obj==null){obj=new OpenLayers.Tile.Image(this.layer,this.position,this.bounds,this.url,this.size)
}obj=OpenLayers.Tile.prototype.clone.apply(this,[obj]);
obj.imgDiv=null;
return obj
},draw:function(){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position)
}var drawTile=OpenLayers.Tile.prototype.draw.apply(this,arguments);
if(OpenLayers.Util.indexOf(this.layer.SUPPORTED_TRANSITIONS,this.layer.transitionEffect)!=-1){if(drawTile){if(!this.backBufferTile){this.backBufferTile=this.clone();
this.backBufferTile.hide();
this.backBufferTile.isBackBuffer=true;
this.events.register("loadend",this,this.resetBackBuffer);
this.layer.events.register("loadend",this,this.resetBackBuffer)
}this.startTransition()
}else{if(this.backBufferTile){this.backBufferTile.clear()
}}}else{if(drawTile&&this.isFirstDraw){this.events.register("loadend",this,this.showTile);
this.isFirstDraw=false
}}if(!drawTile){return false
}if(this.isLoading){this.events.triggerEvent("reload")
}else{this.isLoading=true;
this.events.triggerEvent("loadstart")
}return this.renderTile()
},resetBackBuffer:function(){this.showTile();
if(this.backBufferTile&&(this.isFirstDraw||!this.layer.numLoadingTiles)){this.isFirstDraw=false;
var maxExtent=this.layer.maxExtent;
var withinMaxExtent=(maxExtent&&this.bounds.intersectsBounds(maxExtent,false));
if(withinMaxExtent){this.backBufferTile.position=this.position;
this.backBufferTile.bounds=this.bounds;
this.backBufferTile.size=this.size;
this.backBufferTile.imageSize=this.layer.imageSize||this.size;
this.backBufferTile.imageOffset=this.layer.imageOffset;
this.backBufferTile.resolution=this.layer.getResolution();
this.backBufferTile.renderTile()
}}},renderTile:function(){if(this.imgDiv==null){this.initImgDiv()
}this.imgDiv.viewRequestID=this.layer.map.viewRequestID;
if(this.layer.url instanceof Array){this.imgDiv.urls=this.layer.url.slice()
}this.url=this.layer.getURL(this.bounds);
OpenLayers.Util.modifyDOMElement(this.frame,null,this.position,this.size);
var imageSize=this.layer.getImageSize();
if(this.layerAlphaHack){OpenLayers.Util.modifyAlphaImageDiv(this.imgDiv,null,null,imageSize,this.url)
}else{OpenLayers.Util.modifyDOMElement(this.imgDiv,null,null,imageSize);
this.imgDiv.src=this.url
}return true
},clear:function(){if(this.imgDiv){this.hide();
if(OpenLayers.Tile.Image.useBlankTile){this.imgDiv.src=OpenLayers.Util.getImagesLocation()+"blank.gif"
}}},initImgDiv:function(){var offset=this.layer.imageOffset;
var size=this.layer.getImageSize();
if(this.layerAlphaHack){this.imgDiv=OpenLayers.Util.createAlphaImageDiv(null,offset,size,null,"relative",null,null,null,true)
}else{this.imgDiv=OpenLayers.Util.createImage(null,offset,size,null,"relative",null,null,true)
}this.imgDiv.className="olTileImage";
this.frame.style.zIndex=this.isBackBuffer?0:1;
this.frame.appendChild(this.imgDiv);
this.layer.div.appendChild(this.frame);
if(this.layer.opacity!=null){OpenLayers.Util.modifyDOMElement(this.imgDiv,null,null,null,null,null,null,this.layer.opacity)
}this.imgDiv.map=this.layer.map;
var onload=function(){if(this.isLoading){this.isLoading=false;
this.events.triggerEvent("loadend")
}};
if(this.layerAlphaHack){OpenLayers.Event.observe(this.imgDiv.childNodes[0],"load",OpenLayers.Function.bind(onload,this))
}else{OpenLayers.Event.observe(this.imgDiv,"load",OpenLayers.Function.bind(onload,this))
}var onerror=function(){if(this.imgDiv._attempts>OpenLayers.IMAGE_RELOAD_ATTEMPTS){onload.call(this)
}};
OpenLayers.Event.observe(this.imgDiv,"error",OpenLayers.Function.bind(onerror,this))
},checkImgURL:function(){if(this.layer){var loaded=this.layerAlphaHack?this.imgDiv.firstChild.src:this.imgDiv.src;
if(!OpenLayers.Util.isEquivalentUrl(loaded,this.url)){this.hide()
}}},startTransition:function(){if(!this.backBufferTile||!this.backBufferTile.imgDiv){return 
}var ratio=1;
if(this.backBufferTile.resolution){ratio=this.backBufferTile.resolution/this.layer.getResolution()
}if(ratio!=this.lastRatio){if(this.layer.transitionEffect=="resize"){var upperLeft=new OpenLayers.LonLat(this.backBufferTile.bounds.left,this.backBufferTile.bounds.top);
var size=new OpenLayers.Size(this.backBufferTile.size.w*ratio,this.backBufferTile.size.h*ratio);
var px=this.layer.map.getLayerPxFromLonLat(upperLeft);
OpenLayers.Util.modifyDOMElement(this.backBufferTile.frame,null,px,size);
var imageSize=this.backBufferTile.imageSize;
imageSize=new OpenLayers.Size(imageSize.w*ratio,imageSize.h*ratio);
var imageOffset=this.backBufferTile.imageOffset;
if(imageOffset){imageOffset=new OpenLayers.Pixel(imageOffset.x*ratio,imageOffset.y*ratio)
}OpenLayers.Util.modifyDOMElement(this.backBufferTile.imgDiv,null,imageOffset,imageSize);
this.backBufferTile.show()
}}else{if(this.layer.singleTile){this.backBufferTile.show()
}else{this.backBufferTile.hide()
}}this.lastRatio=ratio
},show:function(){this.frame.style.display="";
if(OpenLayers.Util.indexOf(this.layer.SUPPORTED_TRANSITIONS,this.layer.transitionEffect)!=-1){if(navigator.userAgent.toLowerCase().indexOf("gecko")!=-1){this.frame.scrollLeft=this.frame.scrollLeft
}}},hide:function(){this.frame.style.display="none"
},CLASS_NAME:"OpenLayers.Tile.Image"});
OpenLayers.Tile.Image.useBlankTile=(OpenLayers.Util.getBrowserName()=="safari"||OpenLayers.Util.getBrowserName()=="opera");OpenLayers.Feature=OpenLayers.Class({layer:null,id:null,lonlat:null,data:null,marker:null,popupClass:OpenLayers.Popup.AnchoredBubble,popup:null,initialize:function(layer,lonlat,data){this.layer=layer;
this.lonlat=lonlat;
this.data=(data!=null)?data:{};
this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")
},destroy:function(){if((this.layer!=null)&&(this.layer.map!=null)){if(this.popup!=null){this.layer.map.removePopup(this.popup)
}}this.layer=null;
this.id=null;
this.lonlat=null;
this.data=null;
if(this.marker!=null){this.destroyMarker(this.marker);
this.marker=null
}if(this.popup!=null){this.destroyPopup(this.popup);
this.popup=null
}},onScreen:function(){var onScreen=false;
if((this.layer!=null)&&(this.layer.map!=null)){var screenBounds=this.layer.map.getExtent();
onScreen=screenBounds.containsLonLat(this.lonlat)
}return onScreen
},createMarker:function(){if(this.lonlat!=null){this.marker=new OpenLayers.Marker(this.lonlat,this.data.icon)
}return this.marker
},destroyMarker:function(){this.marker.destroy()
},createPopup:function(closeBox){if(this.lonlat!=null){var id=this.id+"_popup";
var anchor=(this.marker)?this.marker.icon:null;
if(!this.popup){this.popup=new this.popupClass(id,this.lonlat,this.data.popupSize,this.data.popupContentHTML,anchor,closeBox)
}if(this.data.overflow!=null){this.popup.contentDiv.style.overflow=this.data.overflow
}this.popup.feature=this
}return this.popup
},destroyPopup:function(){if(this.popup){this.popup.feature=null;
this.popup.destroy();
this.popup=null
}},CLASS_NAME:"OpenLayers.Feature"});OpenLayers.State={UNKNOWN:"Unknown",INSERT:"Insert",UPDATE:"Update",DELETE:"Delete"};
OpenLayers.Feature.Vector=OpenLayers.Class(OpenLayers.Feature,{fid:null,geometry:null,attributes:null,state:null,style:null,renderIntent:"default",initialize:function(geometry,attributes,style){OpenLayers.Feature.prototype.initialize.apply(this,[null,null,attributes]);
this.lonlat=null;
this.geometry=geometry?geometry:null;
this.state=null;
this.attributes={};
if(attributes){this.attributes=OpenLayers.Util.extend(this.attributes,attributes)
}this.style=style?style:null
},destroy:function(){if(this.layer){this.layer.removeFeatures(this);
this.layer=null
}this.geometry=null;
OpenLayers.Feature.prototype.destroy.apply(this,arguments)
},clone:function(){return new OpenLayers.Feature.Vector(this.geometry?this.geometry.clone():null,this.attributes,this.style)
},onScreen:function(boundsOnly){var onScreen=false;
if(this.layer&&this.layer.map){var screenBounds=this.layer.map.getExtent();
if(boundsOnly){var featureBounds=this.geometry.getBounds();
onScreen=screenBounds.intersectsBounds(featureBounds)
}else{var screenPoly=screenBounds.toGeometry();
onScreen=screenPoly.intersects(this.geometry)
}}return onScreen
},createMarker:function(){return null
},destroyMarker:function(){},createPopup:function(){return null
},atPoint:function(lonlat,toleranceLon,toleranceLat){var atPoint=false;
if(this.geometry){atPoint=this.geometry.atPoint(lonlat,toleranceLon,toleranceLat)
}return atPoint
},destroyPopup:function(){},move:function(location){if(!this.layer||!this.geometry.move){return 
}var pixel;
if(location.CLASS_NAME=="OpenLayers.LonLat"){pixel=this.layer.getViewPortPxFromLonLat(location)
}else{pixel=location
}var lastPixel=this.layer.getViewPortPxFromLonLat(this.geometry.getBounds().getCenterLonLat());
var res=this.layer.map.getResolution();
this.geometry.move(res*(pixel.x-lastPixel.x),res*(lastPixel.y-pixel.y));
this.layer.drawFeature(this);
return lastPixel
},toState:function(state){if(state==OpenLayers.State.UPDATE){switch(this.state){case OpenLayers.State.UNKNOWN:case OpenLayers.State.DELETE:this.state=state;
break;
case OpenLayers.State.UPDATE:case OpenLayers.State.INSERT:break
}}else{if(state==OpenLayers.State.INSERT){switch(this.state){case OpenLayers.State.UNKNOWN:break;
default:this.state=state;
break
}}else{if(state==OpenLayers.State.DELETE){switch(this.state){case OpenLayers.State.INSERT:break;
case OpenLayers.State.DELETE:break;
case OpenLayers.State.UNKNOWN:case OpenLayers.State.UPDATE:this.state=state;
break
}}else{if(state==OpenLayers.State.UNKNOWN){this.state=state
}}}}},CLASS_NAME:"OpenLayers.Feature.Vector"});
OpenLayers.Feature.Vector.style={"default":{fillColor:"#ee9900",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"#ee9900",strokeOpacity:1,strokeWidth:1,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit"},select:{fillColor:"blue",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"blue",strokeOpacity:1,strokeWidth:2,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"pointer"},temporary:{fillColor:"yellow",fillOpacity:0.2,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"yellow",strokeOpacity:1,strokeLinecap:"round",strokeWidth:4,strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit"}};OpenLayers.Handler=OpenLayers.Class({id:null,control:null,map:null,keyMask:null,active:false,evt:null,initialize:function(control,callbacks,options){OpenLayers.Util.extend(this,options);
this.control=control;
this.callbacks=callbacks;
if(control.map){this.setMap(control.map)
}OpenLayers.Util.extend(this,options);
this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")
},setMap:function(map){this.map=map
},checkModifiers:function(evt){if(this.keyMask==null){return true
}var keyModifiers=(evt.shiftKey?OpenLayers.Handler.MOD_SHIFT:0)|(evt.ctrlKey?OpenLayers.Handler.MOD_CTRL:0)|(evt.altKey?OpenLayers.Handler.MOD_ALT:0);
return(keyModifiers==this.keyMask)
},activate:function(){if(this.active){return false
}var events=OpenLayers.Events.prototype.BROWSER_EVENTS;
for(var i=0,len=events.length;
i<len;
i++){if(this[events[i]]){this.register(events[i],this[events[i]])
}}this.active=true;
return true
},deactivate:function(){if(!this.active){return false
}var events=OpenLayers.Events.prototype.BROWSER_EVENTS;
for(var i=0,len=events.length;
i<len;
i++){if(this[events[i]]){this.unregister(events[i],this[events[i]])
}}this.active=false;
return true
},callback:function(name,args){if(name&&this.callbacks[name]){this.callbacks[name].apply(this.control,args)
}},register:function(name,method){this.map.events.registerPriority(name,this,method);
this.map.events.registerPriority(name,this,this.setEvent)
},unregister:function(name,method){this.map.events.unregister(name,this,method);
this.map.events.unregister(name,this,this.setEvent)
},setEvent:function(evt){this.evt=evt;
return true
},destroy:function(){this.deactivate();
this.control=this.map=null
},CLASS_NAME:"OpenLayers.Handler"});
OpenLayers.Handler.MOD_NONE=0;
OpenLayers.Handler.MOD_SHIFT=1;
OpenLayers.Handler.MOD_CTRL=2;
OpenLayers.Handler.MOD_ALT=4;OpenLayers.Handler.Click=OpenLayers.Class(OpenLayers.Handler,{delay:300,single:true,"double":false,pixelTolerance:0,stopSingle:false,stopDouble:false,timerId:null,down:null,rightclickTimerId:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);
if(this.pixelTolerance!=null){this.mousedown=function(evt){this.down=evt.xy;
return true
}
}},mousedown:null,mouseup:function(evt){var propagate=true;
if(this.checkModifiers(evt)&&this.control.handleRightClicks&&OpenLayers.Event.isRightClick(evt)){propogate=this.rightclick(evt)
}return propagate
},rightclick:function(evt){if(this.passesTolerance(evt)){if(this.rightclickTimerId!=null){this.clearTimer();
this.callback("dblrightclick",[evt]);
return !this.stopDouble
}else{var clickEvent=this["double"]?OpenLayers.Util.extend({},evt):this.callback("rightclick",[evt]);
var delayedRightCall=OpenLayers.Function.bind(this.delayedRightCall,this,clickEvent);
this.rightclickTimerId=window.setTimeout(delayedRightCall,this.delay)
}}return !this.stopSingle
},delayedRightCall:function(evt){this.rightclickTimerId=null;
if(evt){this.callback("rightclick",[evt])
}return !this.stopSingle
},dblclick:function(evt){if(this.passesTolerance(evt)){if(this["double"]){this.callback("dblclick",[evt])
}this.clearTimer()
}return !this.stopDouble
},click:function(evt){if(this.passesTolerance(evt)){if(this.timerId!=null){this.clearTimer()
}else{var clickEvent=this.single?OpenLayers.Util.extend({},evt):null;
this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,clickEvent),this.delay)
}}return !this.stopSingle
},passesTolerance:function(evt){var passes=true;
if(this.pixelTolerance!=null&&this.down){var dpx=Math.sqrt(Math.pow(this.down.x-evt.xy.x,2)+Math.pow(this.down.y-evt.xy.y,2));
if(dpx>this.pixelTolerance){passes=false
}}return passes
},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);
this.timerId=null
}},delayedCall:function(evt){this.timerId=null;
if(evt){this.callback("click",[evt])
}},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();
this.down=null;
deactivated=true
}return deactivated
},CLASS_NAME:"OpenLayers.Handler.Click"});OpenLayers.Handler.Hover=OpenLayers.Class(OpenLayers.Handler,{delay:500,pixelTolerance:null,stopMove:false,px:null,timerId:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments)
},mousemove:function(evt){if(this.passesTolerance(evt.xy)){this.clearTimer();
this.callback("move",[evt]);
this.px=evt.xy;
evt=OpenLayers.Util.extend({},evt);
this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,evt),this.delay)
}return !this.stopMove
},mouseout:function(evt){if(OpenLayers.Util.mouseLeft(evt,this.map.div)){this.clearTimer();
this.callback("move",[evt])
}return true
},passesTolerance:function(px){var passes=true;
if(this.pixelTolerance&&this.px){var dpx=Math.sqrt(Math.pow(this.px.x-px.x,2)+Math.pow(this.px.y-px.y,2));
if(dpx<this.pixelTolerance){passes=false
}}return passes
},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);
this.timerId=null
}},delayedCall:function(evt){this.callback("pause",[evt])
},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();
deactivated=true
}return deactivated
},CLASS_NAME:"OpenLayers.Handler.Hover"});OpenLayers.Handler.Point=OpenLayers.Class(OpenLayers.Handler,{point:null,layer:null,multi:false,drawing:false,mouseDown:false,lastDown:null,lastUp:null,persist:false,layerOptions:null,initialize:function(control,callbacks,options){this.style=OpenLayers.Util.extend(OpenLayers.Feature.Vector.style["default"],{});
OpenLayers.Handler.prototype.initialize.apply(this,arguments)
},activate:function(){if(!OpenLayers.Handler.prototype.activate.apply(this,arguments)){return false
}var options=OpenLayers.Util.extend({displayInLayerSwitcher:false,calculateInRange:function(){return true
}},this.layerOptions);
this.layer=new OpenLayers.Layer.Vector(this.CLASS_NAME,options);
this.map.addLayer(this.layer);
return true
},createFeature:function(){this.point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point());
this.layer.addFeatures([this.point],{silent:true})
},deactivate:function(){if(!OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){return false
}if(this.drawing){this.cancel()
}this.destroyFeature();
if(this.layer.map!=null){this.layer.destroy(false)
}this.layer=null;
return true
},destroyFeature:function(){if(this.layer){this.layer.destroyFeatures()
}this.point=null
},finalize:function(cancel){var key=cancel?"cancel":"done";
this.drawing=false;
this.mouseDown=false;
this.lastDown=null;
this.lastUp=null;
this.callback(key,[this.geometryClone()]);
if(cancel||!this.persist){this.destroyFeature()
}},cancel:function(){this.finalize(true)
},click:function(evt){OpenLayers.Event.stop(evt);
return false
},dblclick:function(evt){OpenLayers.Event.stop(evt);
return false
},drawFeature:function(){this.layer.drawFeature(this.point,this.style)
},getGeometry:function(){var geometry=this.point.geometry;
if(this.multi){geometry=new OpenLayers.Geometry.MultiPoint([geometry])
}return geometry
},geometryClone:function(){return this.getGeometry().clone()
},mousedown:function(evt){if(!this.checkModifiers(evt)){return true
}if(this.lastDown&&this.lastDown.equals(evt.xy)){return true
}if(this.lastDown==null){if(this.persist){this.destroyFeature()
}this.createFeature()
}this.lastDown=evt.xy;
this.drawing=true;
var lonlat=this.map.getLonLatFromPixel(evt.xy);
this.point.geometry.x=lonlat.lon;
this.point.geometry.y=lonlat.lat;
this.point.geometry.clearBounds();
this.drawFeature();
return false
},mousemove:function(evt){if(this.drawing){var lonlat=this.map.getLonLatFromPixel(evt.xy);
this.point.geometry.x=lonlat.lon;
this.point.geometry.y=lonlat.lat;
this.point.geometry.clearBounds();
this.drawFeature()
}return true
},mouseup:function(evt){if(this.drawing){this.finalize();
return false
}else{return true
}},CLASS_NAME:"OpenLayers.Handler.Point"});OpenLayers.Handler.Path=OpenLayers.Class(OpenLayers.Handler.Point,{line:null,freehand:false,freehandToggle:"shiftKey",initialize:function(control,callbacks,options){OpenLayers.Handler.Point.prototype.initialize.apply(this,arguments)
},createFeature:function(){this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString());
this.point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point());
this.layer.addFeatures([this.line,this.point],{silent:true})
},destroyFeature:function(){OpenLayers.Handler.Point.prototype.destroyFeature.apply(this);
this.line=null
},destroyPoint:function(){if(this.point){this.layer.destroyFeatures([this.point])
}},addPoint:function(){this.line.geometry.addComponent(this.point.geometry.clone(),this.line.geometry.components.length);
this.callback("point",[this.point.geometry,this.getGeometry()])
},freehandMode:function(evt){return(this.freehandToggle&&evt[this.freehandToggle])?!this.freehand:this.freehand
},modifyFeature:function(){var index=this.line.geometry.components.length-1;
this.line.geometry.components[index].x=this.point.geometry.x;
this.line.geometry.components[index].y=this.point.geometry.y;
this.line.geometry.components[index].clearBounds()
},drawFeature:function(){this.layer.drawFeature(this.line,this.style);
this.layer.drawFeature(this.point,this.style)
},getGeometry:function(){var geometry=this.line.geometry;
if(this.multi){geometry=new OpenLayers.Geometry.MultiLineString([geometry])
}return geometry
},mousedown:function(evt){if(this.lastDown&&this.lastDown.equals(evt.xy)){return false
}if(this.lastDown==null){if(this.persist){this.destroyFeature()
}this.createFeature()
}this.mouseDown=true;
this.lastDown=evt.xy;
var lonlat=this.control.map.getLonLatFromPixel(evt.xy);
this.point.geometry.x=lonlat.lon;
this.point.geometry.y=lonlat.lat;
this.point.geometry.clearBounds();
if((this.lastUp==null)||!this.lastUp.equals(evt.xy)){this.addPoint()
}this.drawFeature();
this.drawing=true;
return false
},mousemove:function(evt){if(this.drawing){var lonlat=this.map.getLonLatFromPixel(evt.xy);
this.point.geometry.x=lonlat.lon;
this.point.geometry.y=lonlat.lat;
this.point.geometry.clearBounds();
if(this.mouseDown&&this.freehandMode(evt)){this.addPoint()
}else{this.modifyFeature()
}this.drawFeature()
}return true
},mouseup:function(evt){this.mouseDown=false;
if(this.drawing){if(this.freehandMode(evt)){if(this.persist){this.destroyPoint()
}this.finalize()
}else{if(this.lastUp==null){this.addPoint()
}this.lastUp=evt.xy
}return false
}return true
},dblclick:function(evt){if(!this.freehandMode(evt)){var index=this.line.geometry.components.length-1;
this.line.geometry.removeComponent(this.line.geometry.components[index]);
if(this.persist){this.destroyPoint()
}this.finalize()
}return false
},CLASS_NAME:"OpenLayers.Handler.Path"});OpenLayers.Handler.Polygon=OpenLayers.Class(OpenLayers.Handler.Path,{polygon:null,initialize:function(control,callbacks,options){OpenLayers.Handler.Path.prototype.initialize.apply(this,arguments)
},createFeature:function(){this.polygon=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon());
this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LinearRing());
this.polygon.geometry.addComponent(this.line.geometry);
this.point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point());
this.layer.addFeatures([this.polygon,this.point],{silent:true})
},destroyFeature:function(){OpenLayers.Handler.Path.prototype.destroyFeature.apply(this);
this.polygon=null
},modifyFeature:function(){var index=this.line.geometry.components.length-2;
this.line.geometry.components[index].x=this.point.geometry.x;
this.line.geometry.components[index].y=this.point.geometry.y;
this.line.geometry.components[index].clearBounds()
},drawFeature:function(){this.layer.drawFeature(this.polygon,this.style);
this.layer.drawFeature(this.point,this.style)
},getGeometry:function(){var geometry=this.polygon.geometry;
if(this.multi){geometry=new OpenLayers.Geometry.MultiPolygon([geometry])
}return geometry
},dblclick:function(evt){if(!this.freehandMode(evt)){var index=this.line.geometry.components.length-2;
this.line.geometry.removeComponent(this.line.geometry.components[index]);
if(this.persist){this.destroyPoint()
}this.finalize()
}return false
},CLASS_NAME:"OpenLayers.Handler.Polygon"});OpenLayers.Handler.Feature=OpenLayers.Class(OpenLayers.Handler,{EVENTMAP:{click:{"in":"click",out:"clickout"},mousemove:{"in":"over",out:"out"},dblclick:{"in":"dblclick",out:null},mousedown:{"in":null,out:null},mouseup:{"in":null,out:null}},feature:null,lastFeature:null,down:null,up:null,clickoutTolerance:4,geometryTypes:null,stopClick:true,stopDown:true,stopUp:false,initialize:function(control,layer,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,[control,callbacks,options]);
this.layer=layer
},mousedown:function(evt){this.down=evt.xy;
return this.handle(evt)?!this.stopDown:true
},mouseup:function(evt){this.up=evt.xy;
return this.handle(evt)?!this.stopUp:true
},click:function(evt){return this.handle(evt)?!this.stopClick:true
},mousemove:function(evt){if(!this.callbacks.over&&!this.callbacks.out){return true
}this.handle(evt);
return true
},dblclick:function(evt){return !this.handle(evt)
},geometryTypeMatches:function(feature){return this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)>-1
},handle:function(evt){var type=evt.type;
var handled=false;
var previouslyIn=!!(this.feature);
var click=(type=="click"||type=="dblclick");
this.feature=this.layer.getFeatureFromEvent(evt);
if(this.feature){var inNew=(this.feature!=this.lastFeature);
if(this.geometryTypeMatches(this.feature)){if(previouslyIn&&inNew){this.triggerCallback(type,"out",[this.lastFeature]);
this.triggerCallback(type,"in",[this.feature])
}else{if(!previouslyIn||click){this.triggerCallback(type,"in",[this.feature])
}}this.lastFeature=this.feature;
handled=true
}else{if(previouslyIn&&inNew||(click&&this.lastFeature)){this.triggerCallback(type,"out",[this.lastFeature])
}this.feature=null
}}else{if(previouslyIn||(click&&this.lastFeature)){this.triggerCallback(type,"out",[this.lastFeature])
}}return handled
},triggerCallback:function(type,mode,args){var key=this.EVENTMAP[type][mode];
if(key){if(type=="click"&&mode=="out"&&this.up&&this.down){var dpx=Math.sqrt(Math.pow(this.up.x-this.down.x,2)+Math.pow(this.up.y-this.down.y,2));
if(dpx<=this.clickoutTolerance){this.callback(key,args)
}}else{this.callback(key,args)
}}},activate:function(){var activated=false;
if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.moveLayerToTop();
this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});
activated=true
}return activated
},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();
this.feature=null;
this.lastFeature=null;
this.down=null;
this.up=null;
this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});
deactivated=true
}return deactivated
},handleMapEvents:function(evt){if(!evt.property||evt.property=="order"){this.moveLayerToTop()
}},moveLayerToTop:function(){var index=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;
this.layer.setZIndex(index)
},moveLayerBack:function(){var index=this.layer.getZIndex()-1;
if(index>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(index)
}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))
}},CLASS_NAME:"OpenLayers.Handler.Feature"});OpenLayers.Handler.Drag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,last:null,start:null,oldOnselectstart:null,interval:0,timeoutId:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments)
},down:function(evt){},move:function(evt){},up:function(evt){},out:function(evt){},mousedown:function(evt){var propagate=true;
this.dragging=false;
if(this.checkModifiers(evt)&&OpenLayers.Event.isLeftClick(evt)){this.started=true;
this.start=evt.xy;
this.last=evt.xy;
this.map.div.style.cursor="move";
this.down(evt);
this.callback("down",[evt.xy]);
OpenLayers.Event.stop(evt);
if(!this.oldOnselectstart){this.oldOnselectstart=(document.onselectstart)?document.onselectstart:function(){return true
};
document.onselectstart=function(){return false
}
}propagate=!this.stopDown
}else{this.started=false;
this.start=null;
this.last=null
}return propagate
},mousemove:function(evt){if(this.started&&!this.timeoutId&&(evt.xy.x!=this.last.x||evt.xy.y!=this.last.y)){if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)
}this.dragging=true;
this.move(evt);
this.callback("move",[evt.xy]);
if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;
document.onselectstart=function(){return false
}
}this.last=this.evt.xy
}return true
},removeTimeout:function(){this.timeoutId=null
},mouseup:function(evt){if(this.started){var dragged=(this.start!=this.last);
this.started=false;
this.dragging=false;
this.map.div.style.cursor="";
this.up(evt);
this.callback("up",[evt.xy]);
if(dragged){this.callback("done",[evt.xy])
}document.onselectstart=this.oldOnselectstart
}return true
},mouseout:function(evt){if(this.started&&OpenLayers.Util.mouseLeft(evt,this.map.div)){var dragged=(this.start!=this.last);
this.started=false;
this.dragging=false;
this.map.div.style.cursor="";
this.out(evt);
this.callback("out",[]);
if(dragged){this.callback("done",[evt.xy])
}if(document.onselectstart){document.onselectstart=this.oldOnselectstart
}}return true
},click:function(evt){return(this.start==this.last)
},activate:function(){var activated=false;
if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;
activated=true
}return activated
},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.started=false;
this.dragging=false;
this.start=null;
this.last=null;
deactivated=true
}return deactivated
},CLASS_NAME:"OpenLayers.Handler.Drag"});OpenLayers.Handler.RegularPolygon=OpenLayers.Class(OpenLayers.Handler.Drag,{sides:4,radius:null,snapAngle:null,snapToggle:"shiftKey",persist:false,irregular:false,angle:null,fixedRadius:false,feature:null,layer:null,origin:null,initialize:function(control,callbacks,options){this.style=OpenLayers.Util.extend(OpenLayers.Feature.Vector.style["default"],{});
OpenLayers.Handler.prototype.initialize.apply(this,[control,callbacks,options]);
this.options=(options)?options:new Object()
},setOptions:function(newOptions){OpenLayers.Util.extend(this.options,newOptions);
OpenLayers.Util.extend(this,newOptions)
},activate:function(){var activated=false;
if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){var options={displayInLayerSwitcher:false,calculateInRange:function(){return true
}};
this.layer=new OpenLayers.Layer.Vector(this.CLASS_NAME,options);
this.map.addLayer(this.layer);
activated=true
}return activated
},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.Drag.prototype.deactivate.apply(this,arguments)){if(this.dragging){this.cancel()
}if(this.layer.map!=null){this.layer.destroy(false);
if(this.feature){this.feature.destroy()
}}this.layer=null;
this.feature=null;
deactivated=true
}return deactivated
},down:function(evt){this.fixedRadius=!!(this.radius);
var maploc=this.map.getLonLatFromPixel(evt.xy);
this.origin=new OpenLayers.Geometry.Point(maploc.lon,maploc.lat);
if(!this.fixedRadius||this.irregular){this.radius=this.map.getResolution()
}if(this.persist){this.clear()
}this.feature=new OpenLayers.Feature.Vector();
this.createGeometry();
this.layer.addFeatures([this.feature],{silent:true});
this.layer.drawFeature(this.feature,this.style)
},move:function(evt){var maploc=this.map.getLonLatFromPixel(evt.xy);
var point=new OpenLayers.Geometry.Point(maploc.lon,maploc.lat);
if(this.irregular){var ry=Math.sqrt(2)*Math.abs(point.y-this.origin.y)/2;
this.radius=Math.max(this.map.getResolution()/2,ry)
}else{if(this.fixedRadius){this.origin=point
}else{this.calculateAngle(point,evt);
this.radius=Math.max(this.map.getResolution()/2,point.distanceTo(this.origin))
}}this.modifyGeometry();
if(this.irregular){var dx=point.x-this.origin.x;
var dy=point.y-this.origin.y;
var ratio;
if(dy==0){ratio=dx/(this.radius*Math.sqrt(2))
}else{ratio=dx/dy
}this.feature.geometry.resize(1,this.origin,ratio);
this.feature.geometry.move(dx/2,dy/2)
}this.layer.drawFeature(this.feature,this.style)
},up:function(evt){this.finalize()
},out:function(evt){this.finalize()
},createGeometry:function(){this.angle=Math.PI*((1/this.sides)-(1/2));
if(this.snapAngle){this.angle+=this.snapAngle*(Math.PI/180)
}this.feature.geometry=OpenLayers.Geometry.Polygon.createRegularPolygon(this.origin,this.radius,this.sides,this.snapAngle)
},modifyGeometry:function(){var angle,dx,dy,point;
var ring=this.feature.geometry.components[0];
if(ring.components.length!=(this.sides+1)){this.createGeometry();
ring=this.feature.geometry.components[0]
}for(var i=0;
i<this.sides;
++i){point=ring.components[i];
angle=this.angle+(i*2*Math.PI/this.sides);
point.x=this.origin.x+(this.radius*Math.cos(angle));
point.y=this.origin.y+(this.radius*Math.sin(angle));
point.clearBounds()
}},calculateAngle:function(point,evt){var alpha=Math.atan2(point.y-this.origin.y,point.x-this.origin.x);
if(this.snapAngle&&(this.snapToggle&&!evt[this.snapToggle])){var snapAngleRad=(Math.PI/180)*this.snapAngle;
this.angle=Math.round(alpha/snapAngleRad)*snapAngleRad
}else{this.angle=alpha
}},cancel:function(){this.callback("cancel",null);
this.finalize()
},finalize:function(){this.origin=null;
this.radius=this.options.radius
},clear:function(){this.layer.renderer.clear();
this.layer.destroyFeatures()
},callback:function(name,args){if(this.callbacks[name]){this.callbacks[name].apply(this.control,[this.feature.geometry.clone()])
}if(!this.persist&&(name=="done"||name=="cancel")){this.clear()
}},CLASS_NAME:"OpenLayers.Handler.RegularPolygon"});OpenLayers.Handler.Box=OpenLayers.Class(OpenLayers.Handler,{dragHandler:null,boxDivClassName:"olHandlerBoxZoomBox",boxCharacteristics:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);
var callbacks={down:this.startBox,move:this.moveBox,out:this.removeBox,up:this.endBox};
this.dragHandler=new OpenLayers.Handler.Drag(this,callbacks,{keyMask:this.keyMask})
},setMap:function(map){OpenLayers.Handler.prototype.setMap.apply(this,arguments);
if(this.dragHandler){this.dragHandler.setMap(map)
}},startBox:function(xy){this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.dragHandler.start);
this.zoomBox.className=this.boxDivClassName;
this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.viewPortDiv.appendChild(this.zoomBox);
this.map.div.style.cursor="crosshair"
},moveBox:function(xy){var startX=this.dragHandler.start.x;
var startY=this.dragHandler.start.y;
var deltaX=Math.abs(startX-xy.x);
var deltaY=Math.abs(startY-xy.y);
this.zoomBox.style.width=Math.max(1,deltaX)+"px";
this.zoomBox.style.height=Math.max(1,deltaY)+"px";
this.zoomBox.style.left=xy.x<startX?xy.x+"px":startX+"px";
this.zoomBox.style.top=xy.y<startY?xy.y+"px":startY+"px";
var box=this.getBoxCharacteristics(deltaX,deltaY);
if(box.newBoxModel){if(xy.x>startX){this.zoomBox.style.width=Math.max(1,deltaX-box.xOffset)+"px"
}if(xy.y>startY){this.zoomBox.style.height=Math.max(1,deltaY-box.yOffset)+"px"
}}},endBox:function(end){var result;
if(Math.abs(this.dragHandler.start.x-end.x)>5||Math.abs(this.dragHandler.start.y-end.y)>5){var start=this.dragHandler.start;
var top=Math.min(start.y,end.y);
var bottom=Math.max(start.y,end.y);
var left=Math.min(start.x,end.x);
var right=Math.max(start.x,end.x);
result=new OpenLayers.Bounds(left,bottom,right,top)
}else{result=this.dragHandler.start.clone()
}this.removeBox();
this.map.div.style.cursor="";
this.callback("done",[result])
},removeBox:function(){this.map.viewPortDiv.removeChild(this.zoomBox);
this.zoomBox=null;
this.boxCharacteristics=null
},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragHandler.activate();
return true
}else{return false
}},deactivate:function(){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.dragHandler.deactivate();
return true
}else{return false
}},getBoxCharacteristics:function(dx,dy){if(!this.boxCharacteristics){var xOffset=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-left-width"))+parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-right-width"))+1;
var yOffset=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-top-width"))+parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-bottom-width"))+1;
var newBoxModel=OpenLayers.Util.getBrowserName()=="msie"?document.compatMode!="BackCompat":true;
this.boxCharacteristics={xOffset:xOffset,yOffset:yOffset,newBoxModel:newBoxModel}
}return this.boxCharacteristics
},CLASS_NAME:"OpenLayers.Handler.Box"});OpenLayers.Handler.MouseWheel=OpenLayers.Class(OpenLayers.Handler,{wheelListener:null,mousePosition:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);
this.wheelListener=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this)
},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);
this.wheelListener=null
},onWheelEvent:function(e){if(!this.map||!this.checkModifiers(e)){return 
}var overScrollableDiv=false;
var overLayerDiv=false;
var overMapDiv=false;
var elem=OpenLayers.Event.element(e);
while((elem!=null)&&!overMapDiv&&!overScrollableDiv){if(!overScrollableDiv){try{if(elem.currentStyle){overflow=elem.currentStyle.overflow
}else{var style=document.defaultView.getComputedStyle(elem,null);
var overflow=style.getPropertyValue("overflow")
}overScrollableDiv=(overflow&&(overflow=="auto")||(overflow=="scroll"))
}catch(err){}}if(!overLayerDiv){for(var i=0,len=this.map.layers.length;
i<len;
i++){if(elem==this.map.layers[i].div||elem==this.map.layers[i].pane){overLayerDiv=true;
break
}}}overMapDiv=(elem==this.map.div);
elem=elem.parentNode
}if(!overScrollableDiv&&overMapDiv){if(overLayerDiv){this.wheelZoom(e)
}OpenLayers.Event.stop(e)
}},wheelZoom:function(e){var delta=0;
if(!e){e=window.event
}if(e.wheelDelta){delta=e.wheelDelta/120;
if(window.opera&&window.opera.version()<9.2){delta=-delta
}}else{if(e.detail){delta=-e.detail/3
}}if(delta){if(this.mousePosition){e.xy=this.mousePosition
}if(!e.xy){e.xy=this.map.getPixelFromLonLat(this.map.getCenter())
}if(delta<0){this.callback("down",[e,delta])
}else{this.callback("up",[e,delta])
}}},mousemove:function(evt){this.mousePosition=evt.xy
},activate:function(evt){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){var wheelListener=this.wheelListener;
OpenLayers.Event.observe(window,"DOMMouseScroll",wheelListener);
OpenLayers.Event.observe(window,"mousewheel",wheelListener);
OpenLayers.Event.observe(document,"mousewheel",wheelListener);
return true
}else{return false
}},deactivate:function(evt){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){var wheelListener=this.wheelListener;
OpenLayers.Event.stopObserving(window,"DOMMouseScroll",wheelListener);
OpenLayers.Event.stopObserving(window,"mousewheel",wheelListener);
OpenLayers.Event.stopObserving(document,"mousewheel",wheelListener);
return true
}else{return false
}},CLASS_NAME:"OpenLayers.Handler.MouseWheel"});OpenLayers.Handler.Keyboard=OpenLayers.Class(OpenLayers.Handler,{KEY_EVENTS:["keydown","keyup"],eventListener:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);
this.eventListener=OpenLayers.Function.bindAsEventListener(this.handleKeyEvent,this)
},destroy:function(){this.deactivate();
this.eventListener=null;
OpenLayers.Handler.prototype.destroy.apply(this,arguments)
},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){for(var i=0,len=this.KEY_EVENTS.length;
i<len;
i++){OpenLayers.Event.observe(document,this.KEY_EVENTS[i],this.eventListener)
}return true
}else{return false
}},deactivate:function(){var deactivated=false;
if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){for(var i=0,len=this.KEY_EVENTS.length;
i<len;
i++){OpenLayers.Event.stopObserving(document,this.KEY_EVENTS[i],this.eventListener)
}deactivated=true
}return deactivated
},handleKeyEvent:function(evt){if(this.checkModifiers(evt)){this.callback(evt.type,[evt])
}},CLASS_NAME:"OpenLayers.Handler.Keyboard"});OpenLayers.Control=OpenLayers.Class({id:null,map:null,div:null,type:null,allowSelection:false,displayClass:"",title:"",active:null,handler:null,eventListeners:null,events:null,EVENT_TYPES:["activate","deactivate"],initialize:function(options){this.displayClass=this.CLASS_NAME.replace("OpenLayers.","ol").replace(/\./g,"");
OpenLayers.Util.extend(this,options);
this.events=new OpenLayers.Events(this,null,this.EVENT_TYPES);
if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)
}if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")
}},destroy:function(){if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)
}this.events.destroy();
this.events=null
}this.eventListeners=null;
if(this.handler){this.handler.destroy();
this.handler=null
}if(this.handlers){for(var key in this.handlers){if(this.handlers.hasOwnProperty(key)&&typeof this.handlers[key].destroy=="function"){this.handlers[key].destroy()
}}this.handlers=null
}if(this.map){this.map.removeControl(this);
this.map=null
}},setMap:function(map){this.map=map;
if(this.handler){this.handler.setMap(map)
}},draw:function(px){if(this.div==null){this.div=OpenLayers.Util.createDiv(this.id);
this.div.className=this.displayClass;
if(!this.allowSelection){this.div.className+=" olControlNoSelect";
this.div.setAttribute("unselectable","on",0);
this.div.onselectstart=function(){return(false)
}
}if(this.title!=""){this.div.title=this.title
}}if(px!=null){this.position=px.clone()
}this.moveTo(this.position);
return this.div
},moveTo:function(px){if((px!=null)&&(this.div!=null)){this.div.style.left=px.x+"px";
this.div.style.top=px.y+"px"
}},activate:function(){if(this.active){return false
}if(this.handler){this.handler.activate()
}this.active=true;
this.events.triggerEvent("activate");
return true
},deactivate:function(){if(this.active){if(this.handler){this.handler.deactivate()
}this.active=false;
this.events.triggerEvent("deactivate");
return true
}return false
},CLASS_NAME:"OpenLayers.Control"});
OpenLayers.Control.TYPE_BUTTON=1;
OpenLayers.Control.TYPE_TOGGLE=2;
OpenLayers.Control.TYPE_TOOL=3;OpenLayers.Control.Attribution=OpenLayers.Class(OpenLayers.Control,{separator:", ",initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){this.map.events.un({removelayer:this.updateAttribution,addlayer:this.updateAttribution,changelayer:this.updateAttribution,changebaselayer:this.updateAttribution,scope:this});
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
this.map.events.on({changebaselayer:this.updateAttribution,changelayer:this.updateAttribution,addlayer:this.updateAttribution,removelayer:this.updateAttribution,scope:this});
this.updateAttribution();
return this.div
},updateAttribution:function(){var attributions=[];
if(this.map&&this.map.layers){for(var i=0,len=this.map.layers.length;
i<len;
i++){var layer=this.map.layers[i];
if(layer.attribution&&layer.getVisibility()){attributions.push(layer.attribution)
}}this.div.innerHTML=attributions.join(this.separator)
}},CLASS_NAME:"OpenLayers.Control.Attribution"});OpenLayers.Control.Button=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){},CLASS_NAME:"OpenLayers.Control.Button"});OpenLayers.Control.ZoomBox=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,out:false,draw:function(){this.handler=new OpenLayers.Handler.Box(this,{done:this.zoomBox},{keyMask:this.keyMask})
},zoomBox:function(position){if(position instanceof OpenLayers.Bounds){if(!this.out){var minXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.left,position.bottom));
var maxXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.right,position.top));
var bounds=new OpenLayers.Bounds(minXY.lon,minXY.lat,maxXY.lon,maxXY.lat)
}else{var pixWidth=Math.abs(position.right-position.left);
var pixHeight=Math.abs(position.top-position.bottom);
var zoomFactor=Math.min((this.map.size.h/pixHeight),(this.map.size.w/pixWidth));
var extent=this.map.getExtent();
var center=this.map.getLonLatFromPixel(position.getCenterPixel());
var xmin=center.lon-(extent.getWidth()/2)*zoomFactor;
var xmax=center.lon+(extent.getWidth()/2)*zoomFactor;
var ymin=center.lat-(extent.getHeight()/2)*zoomFactor;
var ymax=center.lat+(extent.getHeight()/2)*zoomFactor;
var bounds=new OpenLayers.Bounds(xmin,ymin,xmax,ymax)
}this.map.zoomToExtent(bounds)
}else{if(!this.out){this.map.setCenter(this.map.getLonLatFromPixel(position),this.map.getZoom()+1)
}else{this.map.setCenter(this.map.getLonLatFromPixel(position),this.map.getZoom()-1)
}}},CLASS_NAME:"OpenLayers.Control.ZoomBox"});OpenLayers.Control.ZoomToMaxExtent=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){if(this.map){this.map.zoomToMaxExtent()
}},CLASS_NAME:"OpenLayers.Control.ZoomToMaxExtent"});OpenLayers.Control.DragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:25,draw:function(){this.handler=new OpenLayers.Handler.Drag(this,{move:this.panMap,done:this.panMapDone},{interval:this.interval})
},panMap:function(xy){this.panned=true;
this.map.pan(this.handler.last.x-xy.x,this.handler.last.y-xy.y,{dragging:this.handler.dragging,animate:false})
},panMapDone:function(xy){if(this.panned){this.panMap(xy);
this.panned=false
}},CLASS_NAME:"OpenLayers.Control.DragPan"});OpenLayers.Control.Navigation=OpenLayers.Class(OpenLayers.Control,{dragPan:null,dragPanOptions:null,zoomBox:null,zoomWheelEnabled:true,handleRightClicks:false,initialize:function(options){this.handlers={};
OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){this.deactivate();
if(this.dragPan){this.dragPan.destroy()
}this.dragPan=null;
if(this.zoomBox){this.zoomBox.destroy()
}this.zoomBox=null;
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},activate:function(){this.dragPan.activate();
if(this.zoomWheelEnabled){this.handlers.wheel.activate()
}this.handlers.click.activate();
this.zoomBox.activate();
return OpenLayers.Control.prototype.activate.apply(this,arguments)
},deactivate:function(){this.zoomBox.deactivate();
this.dragPan.deactivate();
this.handlers.click.deactivate();
this.handlers.wheel.deactivate();
return OpenLayers.Control.prototype.deactivate.apply(this,arguments)
},draw:function(){if(this.handleRightClicks){this.map.div.oncontextmenu=function(){return false
}
}var clickCallbacks={dblclick:this.defaultDblClick,dblrightclick:this.defaultDblRightClick};
var clickOptions={"double":true,stopDouble:true};
this.handlers.click=new OpenLayers.Handler.Click(this,clickCallbacks,clickOptions);
this.dragPan=new OpenLayers.Control.DragPan(OpenLayers.Util.extend({map:this.map},this.dragPanOptions));
this.zoomBox=new OpenLayers.Control.ZoomBox({map:this.map,keyMask:OpenLayers.Handler.MOD_SHIFT});
this.dragPan.draw();
this.zoomBox.draw();
this.handlers.wheel=new OpenLayers.Handler.MouseWheel(this,{up:this.wheelUp,down:this.wheelDown});
this.activate()
},defaultDblClick:function(evt){var newCenter=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(newCenter,this.map.zoom+1)
},defaultDblRightClick:function(evt){var newCenter=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(newCenter,this.map.zoom-1)
},wheelChange:function(evt,deltaZ){var newZoom=this.map.getZoom()+deltaZ;
if(!this.map.isValidZoomLevel(newZoom)){return 
}var size=this.map.getSize();
var deltaX=size.w/2-evt.xy.x;
var deltaY=evt.xy.y-size.h/2;
var newRes=this.map.baseLayer.getResolutionForZoom(newZoom);
var zoomPoint=this.map.getLonLatFromPixel(evt.xy);
var newCenter=new OpenLayers.LonLat(zoomPoint.lon+deltaX*newRes,zoomPoint.lat+deltaY*newRes);
this.map.setCenter(newCenter,newZoom)
},wheelUp:function(evt){this.wheelChange(evt,1)
},wheelDown:function(evt){this.wheelChange(evt,-1)
},disableZoomWheel:function(){this.zoomWheelEnabled=false;
this.handlers.wheel.deactivate()
},enableZoomWheel:function(){this.zoomWheelEnabled=true;
if(this.active){this.handlers.wheel.activate()
}},CLASS_NAME:"OpenLayers.Control.Navigation"});OpenLayers.Control.MouseDefaults=OpenLayers.Class(OpenLayers.Control,{performedDrag:false,wheelObserver:null,initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){if(this.handler){this.handler.destroy()
}this.handler=null;
this.map.events.un({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});
OpenLayers.Event.stopObserving(window,"DOMMouseScroll",this.wheelObserver);
OpenLayers.Event.stopObserving(window,"mousewheel",this.wheelObserver);
OpenLayers.Event.stopObserving(document,"mousewheel",this.wheelObserver);
this.wheelObserver=null;
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){this.map.events.on({click:this.defaultClick,dblclick:this.defaultDblClick,mousedown:this.defaultMouseDown,mouseup:this.defaultMouseUp,mousemove:this.defaultMouseMove,mouseout:this.defaultMouseOut,scope:this});
this.registerWheelEvents()
},registerWheelEvents:function(){this.wheelObserver=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this);
OpenLayers.Event.observe(window,"DOMMouseScroll",this.wheelObserver);
OpenLayers.Event.observe(window,"mousewheel",this.wheelObserver);
OpenLayers.Event.observe(document,"mousewheel",this.wheelObserver)
},defaultClick:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}var notAfterDrag=!this.performedDrag;
this.performedDrag=false;
return notAfterDrag
},defaultDblClick:function(evt){var newCenter=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(newCenter,this.map.zoom+1);
OpenLayers.Event.stop(evt);
return false
},defaultMouseDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}this.mouseDragStart=evt.xy.clone();
this.performedDrag=false;
if(evt.shiftKey){this.map.div.style.cursor="crosshair";
this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.mouseDragStart,null,null,"absolute","2px solid red");
this.zoomBox.style.backgroundColor="white";
this.zoomBox.style.filter="alpha(opacity=50)";
this.zoomBox.style.opacity="0.50";
this.zoomBox.style.fontSize="1px";
this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.viewPortDiv.appendChild(this.zoomBox)
}document.onselectstart=function(){return false
};
OpenLayers.Event.stop(evt)
},defaultMouseMove:function(evt){this.mousePosition=evt.xy.clone();
if(this.mouseDragStart!=null){if(this.zoomBox){var deltaX=Math.abs(this.mouseDragStart.x-evt.xy.x);
var deltaY=Math.abs(this.mouseDragStart.y-evt.xy.y);
this.zoomBox.style.width=Math.max(1,deltaX)+"px";
this.zoomBox.style.height=Math.max(1,deltaY)+"px";
if(evt.xy.x<this.mouseDragStart.x){this.zoomBox.style.left=evt.xy.x+"px"
}if(evt.xy.y<this.mouseDragStart.y){this.zoomBox.style.top=evt.xy.y+"px"
}}else{var deltaX=this.mouseDragStart.x-evt.xy.x;
var deltaY=this.mouseDragStart.y-evt.xy.y;
var size=this.map.getSize();
var newXY=new OpenLayers.Pixel(size.w/2+deltaX,size.h/2+deltaY);
var newCenter=this.map.getLonLatFromViewPortPx(newXY);
this.map.setCenter(newCenter,null,true);
this.mouseDragStart=evt.xy.clone();
this.map.div.style.cursor="move"
}this.performedDrag=true
}},defaultMouseUp:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}if(this.zoomBox){this.zoomBoxEnd(evt)
}else{if(this.performedDrag){this.map.setCenter(this.map.center)
}}document.onselectstart=null;
this.mouseDragStart=null;
this.map.div.style.cursor=""
},defaultMouseOut:function(evt){if(this.mouseDragStart!=null&&OpenLayers.Util.mouseLeft(evt,this.map.div)){if(this.zoomBox){this.removeZoomBox()
}this.mouseDragStart=null
}},defaultWheelUp:function(evt){if(this.map.getZoom()<=this.map.getNumZoomLevels()){this.map.setCenter(this.map.getLonLatFromPixel(evt.xy),this.map.getZoom()+1)
}},defaultWheelDown:function(evt){if(this.map.getZoom()>0){this.map.setCenter(this.map.getLonLatFromPixel(evt.xy),this.map.getZoom()-1)
}},zoomBoxEnd:function(evt){if(this.mouseDragStart!=null){if(Math.abs(this.mouseDragStart.x-evt.xy.x)>5||Math.abs(this.mouseDragStart.y-evt.xy.y)>5){var start=this.map.getLonLatFromViewPortPx(this.mouseDragStart);
var end=this.map.getLonLatFromViewPortPx(evt.xy);
var top=Math.max(start.lat,end.lat);
var bottom=Math.min(start.lat,end.lat);
var left=Math.min(start.lon,end.lon);
var right=Math.max(start.lon,end.lon);
var bounds=new OpenLayers.Bounds(left,bottom,right,top);
this.map.zoomToExtent(bounds)
}else{var end=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(new OpenLayers.LonLat((end.lon),(end.lat)),this.map.getZoom()+1)
}this.removeZoomBox()
}},removeZoomBox:function(){this.map.viewPortDiv.removeChild(this.zoomBox);
this.zoomBox=null
},onWheelEvent:function(e){var inMap=false;
var elem=OpenLayers.Event.element(e);
while(elem!=null){if(this.map&&elem==this.map.div){inMap=true;
break
}elem=elem.parentNode
}if(inMap){var delta=0;
if(!e){e=window.event
}if(e.wheelDelta){delta=e.wheelDelta/120;
if(window.opera&&window.opera.version()<9.2){delta=-delta
}}else{if(e.detail){delta=-e.detail/3
}}if(delta){e.xy=this.mousePosition;
if(delta<0){this.defaultWheelDown(e)
}else{this.defaultWheelUp(e)
}}OpenLayers.Event.stop(e)
}},CLASS_NAME:"OpenLayers.Control.MouseDefaults"});OpenLayers.Control.MousePosition=OpenLayers.Class(OpenLayers.Control,{element:null,prefix:"",separator:", ",suffix:"",numDigits:5,granularity:10,lastXy:null,displayProjection:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){if(this.map){this.map.events.unregister("mousemove",this,this.redraw)
}OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!this.element){this.div.left="";
this.div.top="";
this.element=this.div
}this.redraw();
return this.div
},redraw:function(evt){var lonLat;
if(evt==null){lonLat=new OpenLayers.LonLat(0,0)
}else{if(this.lastXy==null||Math.abs(evt.xy.x-this.lastXy.x)>this.granularity||Math.abs(evt.xy.y-this.lastXy.y)>this.granularity){this.lastXy=evt.xy;
return 
}lonLat=this.map.getLonLatFromPixel(evt.xy);
if(!lonLat){return 
}if(this.displayProjection){lonLat.transform(this.map.getProjectionObject(),this.displayProjection)
}this.lastXy=evt.xy
}var newHtml=this.formatOutput(lonLat);
if(newHtml!=this.element.innerHTML){this.element.innerHTML=newHtml
}},formatOutput:function(lonLat){var digits=parseInt(this.numDigits);
var newHtml=this.prefix+lonLat.lon.toFixed(digits)+this.separator+lonLat.lat.toFixed(digits)+this.suffix;
return newHtml
},setMap:function(){OpenLayers.Control.prototype.setMap.apply(this,arguments);
this.map.events.register("mousemove",this,this.redraw)
},CLASS_NAME:"OpenLayers.Control.MousePosition"});OpenLayers.Control.OverviewMap=OpenLayers.Class(OpenLayers.Control,{element:null,ovmap:null,size:new OpenLayers.Size(180,90),layers:null,minRectSize:15,minRectDisplayClass:"RectReplacement",minRatio:8,maxRatio:32,mapOptions:null,handlers:null,resolutionFactor:1,initialize:function(options){this.layers=[];
this.handlers={};
OpenLayers.Control.prototype.initialize.apply(this,[options])
},destroy:function(){if(!this.mapDiv){return 
}this.handlers.click.destroy();
this.mapDiv.removeChild(this.extentRectangle);
this.extentRectangle=null;
this.rectEvents.destroy();
this.rectEvents=null;
this.ovmap.destroy();
this.ovmap=null;
this.element.removeChild(this.mapDiv);
this.mapDiv=null;
this.div.removeChild(this.element);
this.element=null;
if(this.maximizeDiv){OpenLayers.Event.stopObservingElement(this.maximizeDiv);
this.div.removeChild(this.maximizeDiv);
this.maximizeDiv=null
}if(this.minimizeDiv){OpenLayers.Event.stopObservingElement(this.minimizeDiv);
this.div.removeChild(this.minimizeDiv);
this.minimizeDiv=null
}this.map.events.un({moveend:this.update,changebaselayer:this.baseLayerDraw,scope:this});
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!(this.layers.length>0)){if(this.map.baseLayer){var layer=this.map.baseLayer.clone();
this.layers=[layer]
}else{this.map.events.register("changebaselayer",this,this.baseLayerDraw);
return this.div
}}this.element=document.createElement("div");
this.element.className=this.displayClass+"Element";
this.element.style.display="none";
this.mapDiv=document.createElement("div");
this.mapDiv.style.width=this.size.w+"px";
this.mapDiv.style.height=this.size.h+"px";
this.mapDiv.style.position="relative";
this.mapDiv.style.overflow="hidden";
this.mapDiv.id=OpenLayers.Util.createUniqueID("overviewMap");
this.extentRectangle=document.createElement("div");
this.extentRectangle.style.position="absolute";
this.extentRectangle.style.zIndex=1000;
this.extentRectangle.className=this.displayClass+"ExtentRectangle";
this.mapDiv.appendChild(this.extentRectangle);
this.element.appendChild(this.mapDiv);
this.div.appendChild(this.element);
if(!this.outsideViewport){this.div.className+=" "+this.displayClass+"Container";
var imgLocation=OpenLayers.Util.getImagesLocation();
var img=imgLocation+"layer-switcher-maximize.png";
this.maximizeDiv=OpenLayers.Util.createAlphaImageDiv(this.displayClass+"MaximizeButton",null,new OpenLayers.Size(18,18),img,"absolute");
this.maximizeDiv.style.display="none";
this.maximizeDiv.className=this.displayClass+"MaximizeButton";
OpenLayers.Event.observe(this.maximizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.maximizeControl,this));
this.div.appendChild(this.maximizeDiv);
var img=imgLocation+"layer-switcher-minimize.png";
this.minimizeDiv=OpenLayers.Util.createAlphaImageDiv("OpenLayers_Control_minimizeDiv",null,new OpenLayers.Size(18,18),img,"absolute");
this.minimizeDiv.style.display="none";
this.minimizeDiv.className=this.displayClass+"MinimizeButton";
OpenLayers.Event.observe(this.minimizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.minimizeControl,this));
this.div.appendChild(this.minimizeDiv);
var eventsToStop=["dblclick","mousedown"];
for(var i=0,len=eventsToStop.length;
i<len;
i++){OpenLayers.Event.observe(this.maximizeDiv,eventsToStop[i],OpenLayers.Event.stop);
OpenLayers.Event.observe(this.minimizeDiv,eventsToStop[i],OpenLayers.Event.stop)
}this.minimizeControl()
}else{this.element.style.display=""
}if(this.map.getExtent()){this.update()
}this.map.events.register("moveend",this,this.update);
return this.div
},baseLayerDraw:function(){this.draw();
this.map.events.unregister("changebaselayer",this,this.baseLayerDraw)
},rectDrag:function(px){var deltaX=this.handlers.drag.last.x-px.x;
var deltaY=this.handlers.drag.last.y-px.y;
if(deltaX!=0||deltaY!=0){var rectTop=this.rectPxBounds.top;
var rectLeft=this.rectPxBounds.left;
var rectHeight=Math.abs(this.rectPxBounds.getHeight());
var rectWidth=this.rectPxBounds.getWidth();
var newTop=Math.max(0,(rectTop-deltaY));
newTop=Math.min(newTop,this.ovmap.size.h-this.hComp-rectHeight);
var newLeft=Math.max(0,(rectLeft-deltaX));
newLeft=Math.min(newLeft,this.ovmap.size.w-this.wComp-rectWidth);
this.setRectPxBounds(new OpenLayers.Bounds(newLeft,newTop+rectHeight,newLeft+rectWidth,newTop))
}},mapDivClick:function(evt){var pxCenter=this.rectPxBounds.getCenterPixel();
var deltaX=evt.xy.x-pxCenter.x;
var deltaY=evt.xy.y-pxCenter.y;
var top=this.rectPxBounds.top;
var left=this.rectPxBounds.left;
var height=Math.abs(this.rectPxBounds.getHeight());
var width=this.rectPxBounds.getWidth();
var newTop=Math.max(0,(top+deltaY));
newTop=Math.min(newTop,this.ovmap.size.h-height);
var newLeft=Math.max(0,(left+deltaX));
newLeft=Math.min(newLeft,this.ovmap.size.w-width);
this.setRectPxBounds(new OpenLayers.Bounds(newLeft,newTop+height,newLeft+width,newTop));
this.updateMapToRect()
},maximizeControl:function(e){this.element.style.display="";
this.showToggle(false);
if(e!=null){OpenLayers.Event.stop(e)
}},minimizeControl:function(e){this.element.style.display="none";
this.showToggle(true);
if(e!=null){OpenLayers.Event.stop(e)
}},showToggle:function(minimize){this.maximizeDiv.style.display=minimize?"":"none";
this.minimizeDiv.style.display=minimize?"none":""
},update:function(){if(this.ovmap==null){this.createMap()
}if(!this.isSuitableOverview()){this.updateOverview()
}this.updateRectToMap()
},isSuitableOverview:function(){var mapExtent=this.map.getExtent();
var maxExtent=this.map.maxExtent;
var testExtent=new OpenLayers.Bounds(Math.max(mapExtent.left,maxExtent.left),Math.max(mapExtent.bottom,maxExtent.bottom),Math.min(mapExtent.right,maxExtent.right),Math.min(mapExtent.top,maxExtent.top));
if(this.ovmap.getProjection()!=this.map.getProjection()){testExtent=testExtent.transform(this.map.getProjectionObject(),this.ovmap.getProjectionObject())
}var resRatio=this.ovmap.getResolution()/this.map.getResolution();
return((resRatio>this.minRatio)&&(resRatio<=this.maxRatio)&&(this.ovmap.getExtent().containsBounds(testExtent)))
},updateOverview:function(){var mapRes=this.map.getResolution();
var targetRes=this.ovmap.getResolution();
var resRatio=targetRes/mapRes;
if(resRatio>this.maxRatio){targetRes=this.minRatio*mapRes
}else{if(resRatio<=this.minRatio){targetRes=this.maxRatio*mapRes
}}var center;
if(this.ovmap.getProjection()!=this.map.getProjection()){center=this.map.center.clone();
center.transform(this.map.getProjectionObject(),this.ovmap.getProjectionObject())
}else{center=this.map.center
}this.ovmap.setCenter(center,this.ovmap.getZoomForResolution(targetRes*this.resolutionFactor));
this.updateRectToMap()
},createMap:function(){var options=OpenLayers.Util.extend({controls:[],maxResolution:"auto",fallThrough:false},this.mapOptions);
this.ovmap=new OpenLayers.Map(this.mapDiv,options);
OpenLayers.Event.stopObserving(window,"unload",this.ovmap.unloadDestroy);
this.ovmap.addLayers(this.layers);
this.ovmap.zoomToMaxExtent();
this.wComp=parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-left-width"))+parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-right-width"));
this.wComp=(this.wComp)?this.wComp:2;
this.hComp=parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-top-width"))+parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-bottom-width"));
this.hComp=(this.hComp)?this.hComp:2;
this.handlers.drag=new OpenLayers.Handler.Drag(this,{move:this.rectDrag,done:this.updateMapToRect},{map:this.ovmap});
this.handlers.click=new OpenLayers.Handler.Click(this,{click:this.mapDivClick},{single:true,"double":false,stopSingle:true,stopDouble:true,pixelTolerance:1,map:this.ovmap});
this.handlers.click.activate();
this.rectEvents=new OpenLayers.Events(this,this.extentRectangle,null,true);
this.rectEvents.register("mouseover",this,function(e){if(!this.handlers.drag.active&&!this.map.dragging){this.handlers.drag.activate()
}});
this.rectEvents.register("mouseout",this,function(e){if(!this.handlers.drag.dragging){this.handlers.drag.deactivate()
}});
if(this.ovmap.getProjection()!=this.map.getProjection()){var sourceUnits=this.map.getProjectionObject().getUnits()||this.map.units||this.map.baseLayer.units;
var targetUnits=this.ovmap.getProjectionObject().getUnits()||this.ovmap.units||this.ovmap.baseLayer.units;
this.resolutionFactor=sourceUnits&&targetUnits?OpenLayers.INCHES_PER_UNIT[sourceUnits]/OpenLayers.INCHES_PER_UNIT[targetUnits]:1
}},updateRectToMap:function(){var bounds;
if(this.ovmap.getProjection()!=this.map.getProjection()){bounds=this.map.getExtent().transform(this.map.getProjectionObject(),this.ovmap.getProjectionObject())
}else{bounds=this.map.getExtent()
}var pxBounds=this.getRectBoundsFromMapBounds(bounds);
if(pxBounds){this.setRectPxBounds(pxBounds)
}},updateMapToRect:function(){var lonLatBounds=this.getMapBoundsFromRectBounds(this.rectPxBounds);
if(this.ovmap.getProjection()!=this.map.getProjection()){lonLatBounds=lonLatBounds.transform(this.ovmap.getProjectionObject(),this.map.getProjectionObject())
}this.map.panTo(lonLatBounds.getCenterLonLat())
},setRectPxBounds:function(pxBounds){var top=Math.max(pxBounds.top,0);
var left=Math.max(pxBounds.left,0);
var bottom=Math.min(pxBounds.top+Math.abs(pxBounds.getHeight()),this.ovmap.size.h-this.hComp);
var right=Math.min(pxBounds.left+pxBounds.getWidth(),this.ovmap.size.w-this.wComp);
var width=Math.max(right-left,0);
var height=Math.max(bottom-top,0);
if(width<this.minRectSize||height<this.minRectSize){this.extentRectangle.className=this.displayClass+this.minRectDisplayClass;
var rLeft=left+(width/2)-(this.minRectSize/2);
var rTop=top+(height/2)-(this.minRectSize/2);
this.extentRectangle.style.top=Math.round(rTop)+"px";
this.extentRectangle.style.left=Math.round(rLeft)+"px";
this.extentRectangle.style.height=this.minRectSize+"px";
this.extentRectangle.style.width=this.minRectSize+"px"
}else{this.extentRectangle.className=this.displayClass+"ExtentRectangle";
this.extentRectangle.style.top=Math.round(top)+"px";
this.extentRectangle.style.left=Math.round(left)+"px";
this.extentRectangle.style.height=Math.round(height)+"px";
this.extentRectangle.style.width=Math.round(width)+"px"
}this.rectPxBounds=new OpenLayers.Bounds(Math.round(left),Math.round(bottom),Math.round(right),Math.round(top))
},getRectBoundsFromMapBounds:function(lonLatBounds){var leftBottomLonLat=new OpenLayers.LonLat(lonLatBounds.left,lonLatBounds.bottom);
var rightTopLonLat=new OpenLayers.LonLat(lonLatBounds.right,lonLatBounds.top);
var leftBottomPx=this.getOverviewPxFromLonLat(leftBottomLonLat);
var rightTopPx=this.getOverviewPxFromLonLat(rightTopLonLat);
var bounds=null;
if(leftBottomPx&&rightTopPx){bounds=new OpenLayers.Bounds(leftBottomPx.x,leftBottomPx.y,rightTopPx.x,rightTopPx.y)
}return bounds
},getMapBoundsFromRectBounds:function(pxBounds){var leftBottomPx=new OpenLayers.Pixel(pxBounds.left,pxBounds.bottom);
var rightTopPx=new OpenLayers.Pixel(pxBounds.right,pxBounds.top);
var leftBottomLonLat=this.getLonLatFromOverviewPx(leftBottomPx);
var rightTopLonLat=this.getLonLatFromOverviewPx(rightTopPx);
return new OpenLayers.Bounds(leftBottomLonLat.lon,leftBottomLonLat.lat,rightTopLonLat.lon,rightTopLonLat.lat)
},getLonLatFromOverviewPx:function(overviewMapPx){var size=this.ovmap.size;
var res=this.ovmap.getResolution();
var center=this.ovmap.getExtent().getCenterLonLat();
var delta_x=overviewMapPx.x-(size.w/2);
var delta_y=overviewMapPx.y-(size.h/2);
return new OpenLayers.LonLat(center.lon+delta_x*res,center.lat-delta_y*res)
},getOverviewPxFromLonLat:function(lonlat){var res=this.ovmap.getResolution();
var extent=this.ovmap.getExtent();
var px=null;
if(extent){px=new OpenLayers.Pixel(Math.round(1/res*(lonlat.lon-extent.left)),Math.round(1/res*(extent.top-lonlat.lat)))
}return px
},CLASS_NAME:"OpenLayers.Control.OverviewMap"});OpenLayers.Control.KeyboardDefaults=OpenLayers.Class(OpenLayers.Control,{slideFactor:75,initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){if(this.handler){this.handler.destroy()
}this.handler=null;
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){this.handler=new OpenLayers.Handler.Keyboard(this,{keydown:this.defaultKeyPress});
this.activate()
},defaultKeyPress:function(evt){switch(evt.keyCode){case OpenLayers.Event.KEY_LEFT:this.map.pan(-this.slideFactor,0);
break;
case OpenLayers.Event.KEY_RIGHT:this.map.pan(this.slideFactor,0);
break;
case OpenLayers.Event.KEY_UP:this.map.pan(0,-this.slideFactor);
break;
case OpenLayers.Event.KEY_DOWN:this.map.pan(0,this.slideFactor);
break;
case 33:var size=this.map.getSize();
this.map.pan(0,-0.75*size.h);
break;
case 34:var size=this.map.getSize();
this.map.pan(0,0.75*size.h);
break;
case 35:var size=this.map.getSize();
this.map.pan(0.75*size.w,0);
break;
case 36:var size=this.map.getSize();
this.map.pan(-0.75*size.w,0);
break;
case 43:case 61:case 187:case 107:this.map.zoomIn();
break;
case 45:case 109:case 189:case 95:this.map.zoomOut();
break
}},CLASS_NAME:"OpenLayers.Control.KeyboardDefaults"});OpenLayers.Control.ArgParser=OpenLayers.Class(OpenLayers.Control,{center:null,zoom:null,layers:null,displayProjection:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},setMap:function(map){OpenLayers.Control.prototype.setMap.apply(this,arguments);
for(var i=0,len=this.map.controls.length;
i<len;
i++){var control=this.map.controls[i];
if((control!=this)&&(control.CLASS_NAME=="OpenLayers.Control.ArgParser")){if(control.displayProjection!=this.displayProjection){this.displayProjection=control.displayProjection
}break
}}if(i==this.map.controls.length){var args=OpenLayers.Util.getParameters();
if(args.layers){this.layers=args.layers;
this.map.events.register("addlayer",this,this.configureLayers);
this.configureLayers()
}if(args.lat&&args.lon){this.center=new OpenLayers.LonLat(parseFloat(args.lon),parseFloat(args.lat));
if(args.zoom){this.zoom=parseInt(args.zoom)
}this.map.events.register("changebaselayer",this,this.setCenter);
this.setCenter()
}}},setCenter:function(){if(this.map.baseLayer){this.map.events.unregister("changebaselayer",this,this.setCenter);
if(this.displayProjection){this.center.transform(this.displayProjection,this.map.getProjectionObject())
}this.map.setCenter(this.center,this.zoom)
}},configureLayers:function(){if(this.layers.length==this.map.layers.length){this.map.events.unregister("addlayer",this,this.configureLayers);
for(var i=0,len=this.layers.length;
i<len;
i++){var layer=this.map.layers[i];
var c=this.layers.charAt(i);
if(c=="B"){this.map.setBaseLayer(layer)
}else{if((c=="T")||(c=="F")){layer.setVisibility(c=="T")
}}}}},CLASS_NAME:"OpenLayers.Control.ArgParser"});OpenLayers.Control.Scale=OpenLayers.Class(OpenLayers.Control,{element:null,initialize:function(element,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.element=OpenLayers.Util.getElement(element)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!this.element){this.element=document.createElement("div");
this.div.appendChild(this.element)
}this.map.events.register("moveend",this,this.updateScale);
this.updateScale();
return this.div
},updateScale:function(){var scale=this.map.getScale();
if(!scale){return 
}if(scale>=9500&&scale<=950000){scale=Math.round(scale/1000)+"K"
}else{if(scale>=950000){scale=Math.round(scale/1000000)+"M"
}else{scale=Math.round(scale)
}}this.element.innerHTML=OpenLayers.i18n("scale",{scaleDenom:scale})
},CLASS_NAME:"OpenLayers.Control.Scale"});OpenLayers.Control.ScaleLine=OpenLayers.Class(OpenLayers.Control,{maxWidth:100,topOutUnits:"km",topInUnits:"m",bottomOutUnits:"mi",bottomInUnits:"ft",eTop:null,eBottom:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options])
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!this.eTop){this.div.style.display="block";
this.div.style.position="absolute";
this.eTop=document.createElement("div");
this.eTop.className=this.displayClass+"Top";
var theLen=this.topInUnits.length;
this.div.appendChild(this.eTop);
if((this.topOutUnits=="")||(this.topInUnits=="")){this.eTop.style.visibility="hidden"
}else{this.eTop.style.visibility="visible"
}this.eBottom=document.createElement("div");
this.eBottom.className=this.displayClass+"Bottom";
this.div.appendChild(this.eBottom);
if((this.bottomOutUnits=="")||(this.bottomInUnits=="")){this.eBottom.style.visibility="hidden"
}else{this.eBottom.style.visibility="visible"
}}this.map.events.register("moveend",this,this.update);
this.update();
return this.div
},getBarLen:function(maxLen){var digits=parseInt(Math.log(maxLen)/Math.log(10));
var pow10=Math.pow(10,digits);
var firstChar=parseInt(maxLen/pow10);
var barLen;
if(firstChar>5){barLen=5
}else{if(firstChar>2){barLen=2
}else{barLen=1
}}return barLen*pow10
},update:function(){var res=this.map.getResolution();
if(!res){return 
}var curMapUnits=this.map.getUnits();
var inches=OpenLayers.INCHES_PER_UNIT;
var maxSizeData=this.maxWidth*res*inches[curMapUnits];
var topUnits;
var bottomUnits;
if(maxSizeData>100000){topUnits=this.topOutUnits;
bottomUnits=this.bottomOutUnits
}else{topUnits=this.topInUnits;
bottomUnits=this.bottomInUnits
}var topMax=maxSizeData/inches[topUnits];
var bottomMax=maxSizeData/inches[bottomUnits];
var topRounded=this.getBarLen(topMax);
var bottomRounded=this.getBarLen(bottomMax);
topMax=topRounded/inches[curMapUnits]*inches[topUnits];
bottomMax=bottomRounded/inches[curMapUnits]*inches[bottomUnits];
var topPx=topMax/res;
var bottomPx=bottomMax/res;
this.eTop.style.width=Math.round(topPx)+"px";
this.eBottom.style.width=Math.round(bottomPx)+"px";
this.eTop.innerHTML=topRounded+" "+topUnits;
this.eBottom.innerHTML=bottomRounded+" "+bottomUnits
},CLASS_NAME:"OpenLayers.Control.ScaleLine"});OpenLayers.Control.DrawFeature=OpenLayers.Class(OpenLayers.Control,{layer:null,callbacks:null,EVENT_TYPES:["featureadded"],featureAdded:function(){},handlerOptions:null,initialize:function(layer,handler,options){this.EVENT_TYPES=OpenLayers.Control.DrawFeature.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);
OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.callbacks=OpenLayers.Util.extend({done:this.drawFeature},this.callbacks);
this.layer=layer;
this.handler=new handler(this,this.callbacks,this.handlerOptions)
},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry);
this.layer.addFeatures([feature]);
this.featureAdded(feature);
this.events.triggerEvent("featureadded",{feature:feature})
},CLASS_NAME:"OpenLayers.Control.DrawFeature"});OpenLayers.Control.Panel=OpenLayers.Class(OpenLayers.Control,{controls:null,defaultControl:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.controls=[]
},destroy:function(){OpenLayers.Control.prototype.destroy.apply(this,arguments);
for(var i=this.controls.length-1;
i>=0;
i--){if(this.controls[i].events){this.controls[i].events.un({activate:this.redraw,deactivate:this.redraw,scope:this})
}OpenLayers.Event.stopObservingElement(this.controls[i].panel_div);
this.controls[i].panel_div=null
}},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){for(var i=0,len=this.controls.length;
i<len;
i++){if(this.controls[i]==this.defaultControl){this.controls[i].activate()
}}this.redraw();
return true
}else{return false
}},deactivate:function(){if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){for(var i=0,len=this.controls.length;
i<len;
i++){this.controls[i].deactivate()
}return true
}else{return false
}},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
for(var i=0,len=this.controls.length;
i<len;
i++){this.map.addControl(this.controls[i]);
this.controls[i].deactivate();
this.controls[i].events.on({activate:this.redraw,deactivate:this.redraw,scope:this})
}this.activate();
return this.div
},redraw:function(){this.div.innerHTML="";
if(this.active){for(var i=0,len=this.controls.length;
i<len;
i++){var element=this.controls[i].panel_div;
if(this.controls[i].active){element.className=this.controls[i].displayClass+"ItemActive"
}else{element.className=this.controls[i].displayClass+"ItemInactive";
if(this.controls[i].displayClass.indexOf("FeatureInfo")!=-1){if(document.getElementById("form:getFeatureInfo")){document.getElementById("form:getFeatureInfo").innerHTML=""
}}}this.div.appendChild(element)
}}},activateControl:function(control){if(!this.active){return false
}if(control.type==OpenLayers.Control.TYPE_BUTTON){control.trigger();
this.redraw();
return 
}if(control.type==OpenLayers.Control.TYPE_TOGGLE){if(control.active){control.deactivate()
}else{control.activate()
}this.redraw();
return 
}for(var i=0,len=this.controls.length;
i<len;
i++){if(this.controls[i]!=control){if(this.controls[i].type!=OpenLayers.Control.TYPE_TOGGLE){this.controls[i].deactivate()
}}}control.activate()
},addControls:function(controls){if(!(controls instanceof Array)){controls=[controls]
}this.controls=this.controls.concat(controls);
for(var i=0,len=controls.length;
i<len;
i++){var element=document.createElement("div");
var textNode=document.createTextNode(" ");
controls[i].panel_div=element;
if(controls[i].title!=""){controls[i].panel_div.title=controls[i].title
}OpenLayers.Event.observe(controls[i].panel_div,"click",OpenLayers.Function.bind(this.onClick,this,controls[i]));
OpenLayers.Event.observe(controls[i].panel_div,"mousedown",OpenLayers.Function.bindAsEventListener(OpenLayers.Event.stop))
}if(this.map){for(var i=0,len=controls.length;
i<len;
i++){this.map.addControl(controls[i]);
controls[i].deactivate();
controls[i].events.on({activate:this.redraw,deactivate:this.redraw,scope:this})
}this.redraw()
}},onClick:function(ctrl,evt){OpenLayers.Event.stop(evt?evt:window.event);
this.activateControl(ctrl)
},getControlsBy:function(property,match){var test=(typeof match.test=="function");
var found=OpenLayers.Array.filter(this.controls,function(item){return item[property]==match||(test&&match.test(item[property]))
});
return found
},getControlsByName:function(match){return this.getControlsBy("name",match)
},getControlsByClass:function(match){return this.getControlsBy("CLASS_NAME",match)
},CLASS_NAME:"OpenLayers.Control.Panel"});OpenLayers.Control.NavigationHistory=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOGGLE,previous:null,previousOptions:null,next:null,nextOptions:null,limit:50,activateOnDraw:true,clearOnDeactivate:false,registry:null,nextStack:null,previousStack:null,listeners:null,restoring:false,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.registry=OpenLayers.Util.extend({moveend:function(){return{center:this.map.getCenter(),resolution:this.map.getResolution()}
}},this.registry);
this.clear();
var previousOptions={trigger:OpenLayers.Function.bind(this.previousTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Previous"};
OpenLayers.Util.extend(previousOptions,this.previousOptions);
this.previous=new OpenLayers.Control.Button(previousOptions);
var nextOptions={trigger:OpenLayers.Function.bind(this.nextTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Next"};
OpenLayers.Util.extend(nextOptions,this.nextOptions);
this.next=new OpenLayers.Control.Button(nextOptions)
},onPreviousChange:function(state,length){if(state&&!this.previous.active){this.previous.activate()
}else{if(!state&&this.previous.active){this.previous.deactivate()
}}},onNextChange:function(state,length){if(state&&!this.next.active){this.next.activate()
}else{if(!state&&this.next.active){this.next.deactivate()
}}},destroy:function(){OpenLayers.Control.prototype.destroy.apply(this);
this.previous.destroy();
this.next.destroy();
this.deactivate();
for(var prop in this){this[prop]=null
}},setMap:function(map){this.map=map;
this.next.setMap(map);
this.previous.setMap(map)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
this.next.draw();
this.previous.draw();
if(this.activateOnDraw){this.activate()
}},previousTrigger:function(){var current=this.previousStack.shift();
var state=this.previousStack.shift();
if(state!=undefined){this.nextStack.unshift(current);
this.previousStack.unshift(state);
this.restoring=true;
this.restore(state);
this.restoring=false;
this.onNextChange(this.nextStack[0],this.nextStack.length);
this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)
}else{this.previousStack.unshift(current)
}return state
},nextTrigger:function(){var state=this.nextStack.shift();
if(state!=undefined){this.previousStack.unshift(state);
this.restoring=true;
this.restore(state);
this.restoring=false;
this.onNextChange(this.nextStack[0],this.nextStack.length);
this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)
}return state
},clear:function(){this.previousStack=[];
this.nextStack=[]
},restore:function(state){var zoom=this.map.getZoomForResolution(state.resolution);
this.map.setCenter(state.center,zoom)
},setListeners:function(){this.listeners={};
for(var type in this.registry){this.listeners[type]=OpenLayers.Function.bind(function(){if(!this.restoring){var state=this.registry[type].apply(this,arguments);
this.previousStack.unshift(state);
if(this.previousStack.length>1){this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)
}if(this.previousStack.length>(this.limit+1)){this.previousStack.pop()
}if(this.nextStack.length>0){this.nextStack=[];
this.onNextChange(null,0)
}}return true
},this)
}},activate:function(){var activated=false;
if(this.map){if(OpenLayers.Control.prototype.activate.apply(this)){if(this.listeners==null){this.setListeners()
}for(var type in this.listeners){this.map.events.register(type,this,this.listeners[type])
}activated=true;
if(this.previousStack.length==0){this.initStack()
}}}return activated
},initStack:function(){if(this.map.getCenter()){this.listeners.moveend()
}},deactivate:function(){var deactivated=false;
if(this.map){if(OpenLayers.Control.prototype.deactivate.apply(this)){for(var type in this.listeners){this.map.events.unregister(type,this,this.listeners[type])
}if(this.clearOnDeactivate){this.clear()
}deactivated=true
}}return deactivated
},CLASS_NAME:"OpenLayers.Control.NavigationHistory"});OpenLayers.Control.Measure=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,EVENT_TYPES:["measure","measurepartial"],handlerOptions:null,callbacks:null,displaySystem:"metric",displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},initialize:function(handler,options){this.EVENT_TYPES=OpenLayers.Control.Measure.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);
OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.callbacks=OpenLayers.Util.extend({done:this.measureComplete,point:this.measurePartial},this.callbacks);
this.handler=new handler(this,this.callbacks,this.handlerOptions)
},updateHandler:function(handler,options){var active=this.active;
if(active){this.deactivate()
}this.handler=new handler(this,this.callbacks,options);
if(active){this.activate()
}},measureComplete:function(geometry){this.measure(geometry,"measure")
},measurePartial:function(point,geometry){this.measure(geometry,"measurepartial")
},measure:function(geometry,eventType){var stat,order;
if(geometry.CLASS_NAME.indexOf("LineString")>-1){stat=this.getBestLength(geometry);
order=1
}else{stat=this.getBestArea(geometry);
order=2
}this.events.triggerEvent(eventType,{measure:stat[0],units:stat[1],order:order,geometry:geometry})
},getBestArea:function(geometry){var units=this.displaySystemUnits[this.displaySystem];
var unit,area;
for(var i=0,len=units.length;
i<len;
++i){unit=units[i];
area=this.getArea(geometry,unit);
if(area>1){break
}}return[area,unit]
},getArea:function(geometry,units){var area=geometry.getArea();
var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];
if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[this.map.getUnits()];
area*=Math.pow((inPerMapUnit/inPerDisplayUnit),2)
}return area
},getBestLength:function(geometry){var units=this.displaySystemUnits[this.displaySystem];
var unit,length;
for(var i=0,len=units.length;
i<len;
++i){unit=units[i];
length=this.getLength(geometry,unit);
if(length>1){break
}}return[length,unit]
},getLength:function(geometry,units){var length=geometry.getLength();
var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];
if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[this.map.getUnits()];
length*=(inPerMapUnit/inPerDisplayUnit)
}return length
},CLASS_NAME:"OpenLayers.Control.Measure"});OpenLayers.Geometry=OpenLayers.Class({id:null,parent:null,bounds:null,initialize:function(){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")
},destroy:function(){this.id=null;
this.bounds=null
},clone:function(){return new OpenLayers.Geometry()
},setBounds:function(bounds){if(bounds){this.bounds=bounds.clone()
}},clearBounds:function(){this.bounds=null;
if(this.parent){this.parent.clearBounds()
}},extendBounds:function(newBounds){var bounds=this.getBounds();
if(!bounds){this.setBounds(newBounds)
}else{this.bounds.extend(newBounds)
}},getBounds:function(){if(this.bounds==null){this.calculateBounds()
}return this.bounds
},calculateBounds:function(){},atPoint:function(lonlat,toleranceLon,toleranceLat){var atPoint=false;
var bounds=this.getBounds();
if((bounds!=null)&&(lonlat!=null)){var dX=(toleranceLon!=null)?toleranceLon:0;
var dY=(toleranceLat!=null)?toleranceLat:0;
var toleranceBounds=new OpenLayers.Bounds(this.bounds.left-dX,this.bounds.bottom-dY,this.bounds.right+dX,this.bounds.top+dY);
atPoint=toleranceBounds.containsLonLat(lonlat)
}return atPoint
},getLength:function(){return 0
},getArea:function(){return 0
},toString:function(){return OpenLayers.Format.WKT.prototype.write(new OpenLayers.Feature.Vector(this))
},CLASS_NAME:"OpenLayers.Geometry"});
OpenLayers.Geometry.segmentsIntersect=function(seg1,seg2,point){var intersection=false;
var x11_21=seg1.x1-seg2.x1;
var y11_21=seg1.y1-seg2.y1;
var x12_11=seg1.x2-seg1.x1;
var y12_11=seg1.y2-seg1.y1;
var y22_21=seg2.y2-seg2.y1;
var x22_21=seg2.x2-seg2.x1;
var d=(y22_21*x12_11)-(x22_21*y12_11);
var n1=(x22_21*y11_21)-(y22_21*x11_21);
var n2=(x12_11*y11_21)-(y12_11*x11_21);
if(d==0){if(n1==0&&n2==0){intersection=true
}}else{var along1=n1/d;
var along2=n2/d;
if(along1>=0&&along1<=1&&along2>=0&&along2<=1){if(!point){intersection=true
}else{var x=seg1.x1+(along1*x12_11);
var y=seg1.y1+(along1*y12_11);
intersection=new OpenLayers.Geometry.Point(x,y)
}}}return intersection
};OpenLayers.Geometry.Rectangle=OpenLayers.Class(OpenLayers.Geometry,{x:null,y:null,width:null,height:null,initialize:function(x,y,width,height){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);
this.x=x;
this.y=y;
this.width=width;
this.height=height
},calculateBounds:function(){this.bounds=new OpenLayers.Bounds(this.x,this.y,this.x+this.width,this.y+this.height)
},getLength:function(){var length=(2*this.width)+(2*this.height);
return length
},getArea:function(){var area=this.width*this.height;
return area
},CLASS_NAME:"OpenLayers.Geometry.Rectangle"});OpenLayers.Geometry.Collection=OpenLayers.Class(OpenLayers.Geometry,{components:null,componentTypes:null,initialize:function(components){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);
this.components=[];
if(components!=null){this.addComponents(components)
}},destroy:function(){this.components.length=0;
this.components=null
},clone:function(){var geometry=eval("new "+this.CLASS_NAME+"()");
for(var i=0,len=this.components.length;
i<len;
i++){geometry.addComponent(this.components[i].clone())
}OpenLayers.Util.applyDefaults(geometry,this);
return geometry
},getComponentsString:function(){var strings=[];
for(var i=0,len=this.components.length;
i<len;
i++){strings.push(this.components[i].toShortString())
}return strings.join(",")
},calculateBounds:function(){this.bounds=null;
if(this.components&&this.components.length>0){this.setBounds(this.components[0].getBounds());
for(var i=1,len=this.components.length;
i<len;
i++){this.extendBounds(this.components[i].getBounds())
}}},addComponents:function(components){if(!(components instanceof Array)){components=[components]
}for(var i=0,len=components.length;
i<len;
i++){this.addComponent(components[i])
}},addComponent:function(component,index){var added=false;
if(component){if(this.componentTypes==null||(OpenLayers.Util.indexOf(this.componentTypes,component.CLASS_NAME)>-1)){if(index!=null&&(index<this.components.length)){var components1=this.components.slice(0,index);
var components2=this.components.slice(index,this.components.length);
components1.push(component);
this.components=components1.concat(components2)
}else{this.components.push(component)
}component.parent=this;
this.clearBounds();
added=true
}}return added
},removeComponents:function(components){if(!(components instanceof Array)){components=[components]
}for(var i=components.length-1;
i>=0;
--i){this.removeComponent(components[i])
}},removeComponent:function(component){OpenLayers.Util.removeItem(this.components,component);
this.clearBounds()
},getLength:function(){var length=0;
for(var i=0,len=this.components.length;
i<len;
i++){length+=this.components[i].getLength()
}return length
},getArea:function(){var area=0;
for(var i=0,len=this.components.length;
i<len;
i++){area+=this.components[i].getArea()
}return area
},move:function(x,y){for(var i=0,len=this.components.length;
i<len;
i++){this.components[i].move(x,y)
}},rotate:function(angle,origin){for(var i=0,len=this.components.length;
i<len;
++i){this.components[i].rotate(angle,origin)
}},resize:function(scale,origin,ratio){for(var i=0;
i<this.components.length;
++i){this.components[i].resize(scale,origin,ratio)
}},equals:function(geometry){var equivalent=true;
if(!geometry||!geometry.CLASS_NAME||(this.CLASS_NAME!=geometry.CLASS_NAME)){equivalent=false
}else{if(!(geometry.components instanceof Array)||(geometry.components.length!=this.components.length)){equivalent=false
}else{for(var i=0,len=this.components.length;
i<len;
++i){if(!this.components[i].equals(geometry.components[i])){equivalent=false;
break
}}}}return equivalent
},transform:function(source,dest){if(source&&dest){for(var i=0,len=this.components.length;
i<len;
i++){var component=this.components[i];
component.transform(source,dest)
}this.bounds=null
}return this
},intersects:function(geometry){var intersect=false;
for(var i=0,len=this.components.length;
i<len;
++i){intersect=geometry.intersects(this.components[i]);
if(intersect){break
}}return intersect
},CLASS_NAME:"OpenLayers.Geometry.Collection"});OpenLayers.Geometry.Point=OpenLayers.Class(OpenLayers.Geometry,{x:null,y:null,initialize:function(x,y){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);
this.x=parseFloat(x);
this.y=parseFloat(y)
},clone:function(obj){if(obj==null){obj=new OpenLayers.Geometry.Point(this.x,this.y)
}OpenLayers.Util.applyDefaults(obj,this);
return obj
},calculateBounds:function(){this.bounds=new OpenLayers.Bounds(this.x,this.y,this.x,this.y)
},distanceTo:function(point){var distance=0;
if((this.x!=null)&&(this.y!=null)&&(point!=null)&&(point.x!=null)&&(point.y!=null)){var dx2=Math.pow(this.x-point.x,2);
var dy2=Math.pow(this.y-point.y,2);
distance=Math.sqrt(dx2+dy2)
}return distance
},equals:function(geom){var equals=false;
if(geom!=null){equals=((this.x==geom.x&&this.y==geom.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(geom.x)&&isNaN(geom.y)))
}return equals
},toShortString:function(){return(this.x+", "+this.y)
},move:function(x,y){this.x=this.x+x;
this.y=this.y+y;
this.clearBounds()
},rotate:function(angle,origin){angle*=Math.PI/180;
var radius=this.distanceTo(origin);
var theta=angle+Math.atan2(this.y-origin.y,this.x-origin.x);
this.x=origin.x+(radius*Math.cos(theta));
this.y=origin.y+(radius*Math.sin(theta));
this.clearBounds()
},resize:function(scale,origin,ratio){ratio=(ratio==undefined)?1:ratio;
this.x=origin.x+(scale*ratio*(this.x-origin.x));
this.y=origin.y+(scale*(this.y-origin.y));
this.clearBounds()
},intersects:function(geometry){var intersect=false;
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.equals(geometry)
}else{intersect=geometry.intersects(this)
}return intersect
},transform:function(source,dest){if((source&&dest)){OpenLayers.Projection.transform(this,source,dest);
this.bounds=null
}return this
},CLASS_NAME:"OpenLayers.Geometry.Point"});OpenLayers.Geometry.MultiPoint=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Point"],initialize:function(components){OpenLayers.Geometry.Collection.prototype.initialize.apply(this,arguments)
},addPoint:function(point,index){this.addComponent(point,index)
},removePoint:function(point){this.removeComponent(point)
},CLASS_NAME:"OpenLayers.Geometry.MultiPoint"});OpenLayers.Geometry.Curve=OpenLayers.Class(OpenLayers.Geometry.MultiPoint,{componentTypes:["OpenLayers.Geometry.Point"],initialize:function(points){OpenLayers.Geometry.MultiPoint.prototype.initialize.apply(this,arguments)
},getLength:function(){var length=0;
if(this.components&&(this.components.length>1)){for(var i=1,len=this.components.length;
i<len;
i++){length+=this.components[i-1].distanceTo(this.components[i])
}}return length
},CLASS_NAME:"OpenLayers.Geometry.Curve"});OpenLayers.Geometry.LineString=OpenLayers.Class(OpenLayers.Geometry.Curve,{initialize:function(points){OpenLayers.Geometry.Curve.prototype.initialize.apply(this,arguments)
},removeComponent:function(point){if(this.components&&(this.components.length>2)){OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments)
}},intersects:function(geometry){var intersect=false;
var type=geometry.CLASS_NAME;
if(type=="OpenLayers.Geometry.LineString"||type=="OpenLayers.Geometry.LinearRing"||type=="OpenLayers.Geometry.Point"){var segs1=this.getSortedSegments();
var segs2;
if(type=="OpenLayers.Geometry.Point"){segs2=[{x1:geometry.x,y1:geometry.y,x2:geometry.x,y2:geometry.y}]
}else{segs2=geometry.getSortedSegments()
}var seg1,seg1x1,seg1x2,seg1y1,seg1y2,seg2,seg2y1,seg2y2;
outer:for(var i=0,len=segs1.length;
i<len;
++i){seg1=segs1[i];
seg1x1=seg1.x1;
seg1x2=seg1.x2;
seg1y1=seg1.y1;
seg1y2=seg1.y2;
inner:for(var j=0,jlen=segs2.length;
j<jlen;
++j){seg2=segs2[j];
if(seg2.x1>seg1x2){break
}if(seg2.x2<seg1x1){continue
}seg2y1=seg2.y1;
seg2y2=seg2.y2;
if(Math.min(seg2y1,seg2y2)>Math.max(seg1y1,seg1y2)){continue
}if(Math.max(seg2y1,seg2y2)<Math.min(seg1y1,seg1y2)){continue
}if(OpenLayers.Geometry.segmentsIntersect(seg1,seg2)){intersect=true;
break outer
}}}}else{intersect=geometry.intersects(this)
}return intersect
},getSortedSegments:function(){var numSeg=this.components.length-1;
var segments=new Array(numSeg);
for(var i=0;
i<numSeg;
++i){point1=this.components[i];
point2=this.components[i+1];
if(point1.x<point2.x){segments[i]={x1:point1.x,y1:point1.y,x2:point2.x,y2:point2.y}
}else{segments[i]={x1:point2.x,y1:point2.y,x2:point1.x,y2:point1.y}
}}function byX1(seg1,seg2){return seg1.x1-seg2.x1
}return segments.sort(byX1)
},CLASS_NAME:"OpenLayers.Geometry.LineString"});OpenLayers.Geometry.LinearRing=OpenLayers.Class(OpenLayers.Geometry.LineString,{componentTypes:["OpenLayers.Geometry.Point"],initialize:function(points){OpenLayers.Geometry.LineString.prototype.initialize.apply(this,arguments)
},addComponent:function(point,index){var added=false;
var lastPoint=this.components.pop();
if(index!=null||!point.equals(lastPoint)){added=OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,arguments)
}var firstPoint=this.components[0];
OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[firstPoint]);
return added
},removeComponent:function(point){if(this.components.length>4){this.components.pop();
OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments);
var firstPoint=this.components[0];
OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[firstPoint])
}},move:function(x,y){for(var i=0,len=this.components.length;
i<len-1;
i++){this.components[i].move(x,y)
}},rotate:function(angle,origin){for(var i=0,len=this.components.length;
i<len-1;
++i){this.components[i].rotate(angle,origin)
}},resize:function(scale,origin,ratio){for(var i=0,len=this.components.length;
i<len-1;
++i){this.components[i].resize(scale,origin,ratio)
}},transform:function(source,dest){if(source&&dest){for(var i=0,len=this.components.length;
i<len-1;
i++){var component=this.components[i];
component.transform(source,dest)
}this.bounds=null
}return this
},getArea:function(){var area=0;
if(this.components&&(this.components.length>2)){var sum=0;
for(var i=0,len=this.components.length;
i<len-1;
i++){var b=this.components[i];
var c=this.components[i+1];
sum+=(b.x+c.x)*(c.y-b.y)
}area=-sum/2
}return area
},containsPoint:function(point){var approx=OpenLayers.Number.limitSigDigs;
var digs=14;
var px=approx(point.x,digs);
var py=approx(point.y,digs);
function getX(y,x1,y1,x2,y2){return(((x1-x2)*y)+((x2*y1)-(x1*y2)))/(y1-y2)
}var numSeg=this.components.length-1;
var start,end,x1,y1,x2,y2,cx,cy;
var crosses=0;
for(var i=0;
i<numSeg;
++i){start=this.components[i];
x1=approx(start.x,digs);
y1=approx(start.y,digs);
end=this.components[i+1];
x2=approx(end.x,digs);
y2=approx(end.y,digs);
if(y1==y2){if(py==y1){if(x1<=x2&&(px>=x1&&px<=x2)||x1>=x2&&(px<=x1&&px>=x2)){crosses=-1;
break
}}continue
}cx=approx(getX(py,x1,y1,x2,y2),digs);
if(cx==px){if(y1<y2&&(py>=y1&&py<=y2)||y1>y2&&(py<=y1&&py>=y2)){crosses=-1;
break
}}if(cx<=px){continue
}if(x1!=x2&&(cx<Math.min(x1,x2)||cx>Math.max(x1,x2))){continue
}if(y1<y2&&(py>=y1&&py<y2)||y1>y2&&(py<y1&&py>=y2)){++crosses
}}var contained=(crosses==-1)?1:!!(crosses&1);
return contained
},intersects:function(geometry){var intersect=false;
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.containsPoint(geometry)
}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"){intersect=geometry.intersects(this)
}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){intersect=OpenLayers.Geometry.LineString.prototype.intersects.apply(this,[geometry])
}else{for(var i=0,len=geometry.components.length;
i<len;
++i){intersect=geometry.components[i].intersects(this);
if(intersect){break
}}}}}return intersect
},CLASS_NAME:"OpenLayers.Geometry.LinearRing"});OpenLayers.Geometry.Polygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LinearRing"],initialize:function(components){OpenLayers.Geometry.Collection.prototype.initialize.apply(this,arguments)
},getArea:function(){var area=0;
if(this.components&&(this.components.length>0)){area+=Math.abs(this.components[0].getArea());
for(var i=1,len=this.components.length;
i<len;
i++){area-=Math.abs(this.components[i].getArea())
}}return area
},containsPoint:function(point){var numRings=this.components.length;
var contained=false;
if(numRings>0){contained=this.components[0].containsPoint(point);
if(contained!==1){if(contained&&numRings>1){var hole;
for(var i=1;
i<numRings;
++i){hole=this.components[i].containsPoint(point);
if(hole){if(hole===1){contained=1
}else{contained=false
}break
}}}}}return contained
},intersects:function(geometry){var intersect=false;
var i,len;
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.containsPoint(geometry)
}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"||geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){for(i=0,len=this.components.length;
i<len;
++i){intersect=geometry.intersects(this.components[i]);
if(intersect){break
}}if(!intersect){for(i=0,len=geometry.components.length;
i<len;
++i){intersect=this.containsPoint(geometry.components[i]);
if(intersect){break
}}}}else{for(i=0,len=geometry.components.length;
i<len;
++i){intersect=this.intersects(geometry.components[i]);
if(intersect){break
}}}}if(!intersect&&geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var ring=this.components[0];
for(i=0,len=ring.components.length;
i<len;
++i){intersect=geometry.containsPoint(ring.components[i]);
if(intersect){break
}}}return intersect
},CLASS_NAME:"OpenLayers.Geometry.Polygon"});
OpenLayers.Geometry.Polygon.createRegularPolygon=function(origin,radius,sides,rotation){var angle=Math.PI*((1/sides)-(1/2));
if(rotation){angle+=(rotation/180)*Math.PI
}var rotatedAngle,x,y;
var points=[];
for(var i=0;
i<sides;
++i){rotatedAngle=angle+(i*2*Math.PI/sides);
x=origin.x+(radius*Math.cos(rotatedAngle));
y=origin.y+(radius*Math.sin(rotatedAngle));
points.push(new OpenLayers.Geometry.Point(x,y))
}var ring=new OpenLayers.Geometry.LinearRing(points);
return new OpenLayers.Geometry.Polygon([ring])
};OpenLayers.Geometry.MultiLineString=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LineString"],initialize:function(components){OpenLayers.Geometry.Collection.prototype.initialize.apply(this,arguments)
},CLASS_NAME:"OpenLayers.Geometry.MultiLineString"});OpenLayers.Geometry.MultiPolygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Polygon"],initialize:function(components){OpenLayers.Geometry.Collection.prototype.initialize.apply(this,arguments)
},CLASS_NAME:"OpenLayers.Geometry.MultiPolygon"});OpenLayers.Geometry.Surface=OpenLayers.Class(OpenLayers.Geometry,{initialize:function(){OpenLayers.Geometry.prototype.initialize.apply(this,arguments)
},CLASS_NAME:"OpenLayers.Geometry.Surface"});OpenLayers.Renderer=OpenLayers.Class({container:null,extent:null,locked:false,size:null,resolution:null,map:null,initialize:function(containerID,options){this.container=OpenLayers.Util.getElement(containerID)
},destroy:function(){this.container=null;
this.extent=null;
this.size=null;
this.resolution=null;
this.map=null
},supported:function(){return false
},setExtent:function(extent,resolutionChanged){this.extent=extent.clone();
if(resolutionChanged){this.resolution=null
}},setSize:function(size){this.size=size.clone();
this.resolution=null
},getResolution:function(){this.resolution=this.resolution||this.map.getResolution();
return this.resolution
},drawFeature:function(feature,style){if(style==null){style=feature.style
}if(feature.geometry){var bounds=feature.geometry.getBounds();
if(bounds){if(!bounds.intersectsBounds(this.extent)){style={display:"none"}
}return this.drawGeometry(feature.geometry,style,feature.id)
}}},drawGeometry:function(geometry,style,featureId){},clear:function(){},getFeatureIdFromEvent:function(evt){},eraseFeatures:function(features){if(!(features instanceof Array)){features=[features]
}for(var i=0,len=features.length;
i<len;
++i){this.eraseGeometry(features[i].geometry)
}},eraseGeometry:function(geometry){},CLASS_NAME:"OpenLayers.Renderer"});OpenLayers.ElementsIndexer=OpenLayers.Class({maxZIndex:null,order:null,indices:null,compare:null,initialize:function(yOrdering){this.compare=yOrdering?OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_Y_ORDER:OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_DRAWING_ORDER;
this.order=[];
this.indices={};
this.maxZIndex=0
},insert:function(newNode){if(this.exists(newNode)){this.remove(newNode)
}var nodeId=newNode.id;
this.determineZIndex(newNode);
var leftIndex=-1;
var rightIndex=this.order.length;
var middle;
while(rightIndex-leftIndex>1){middle=parseInt((leftIndex+rightIndex)/2);
var placement=this.compare(this,newNode,OpenLayers.Util.getElement(this.order[middle]));
if(placement>0){leftIndex=middle
}else{rightIndex=middle
}}this.order.splice(rightIndex,0,nodeId);
this.indices[nodeId]=this.getZIndex(newNode);
var nextIndex=rightIndex+1;
return nextIndex<this.order.length?OpenLayers.Util.getElement(this.order[nextIndex]):null
},remove:function(node){var nodeId=node.id;
var arrayIndex=OpenLayers.Util.indexOf(this.order,nodeId);
if(arrayIndex>=0){this.order.splice(arrayIndex,1);
delete this.indices[nodeId];
if(this.order.length>0){var lastId=this.order[this.order.length-1];
this.maxZIndex=this.indices[lastId]
}else{this.maxZIndex=0
}}},clear:function(){this.order=[];
this.indices={};
this.maxZIndex=0
},exists:function(node){return(this.indices[node.id]!=null)
},getZIndex:function(node){return node._style.graphicZIndex
},determineZIndex:function(node){var zIndex=node._style.graphicZIndex;
if(zIndex==null){zIndex=this.maxZIndex;
node._style.graphicZIndex=zIndex
}else{if(zIndex>this.maxZIndex){this.maxZIndex=zIndex
}}},CLASS_NAME:"OpenLayers.ElementsIndexer"});
OpenLayers.ElementsIndexer.IndexingMethods={Z_ORDER:function(indexer,newNode,nextNode){var newZIndex=indexer.getZIndex(newNode);
var returnVal=0;
if(nextNode){var nextZIndex=indexer.getZIndex(nextNode);
returnVal=newZIndex-nextZIndex
}return returnVal
},Z_ORDER_DRAWING_ORDER:function(indexer,newNode,nextNode){var returnVal=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(indexer,newNode,nextNode);
if(nextNode&&returnVal==0){returnVal=1
}return returnVal
},Z_ORDER_Y_ORDER:function(indexer,newNode,nextNode){var returnVal=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(indexer,newNode,nextNode);
if(nextNode&&returnVal==0){var newLat=newNode._geometry.getBounds().bottom;
var nextLat=nextNode._geometry.getBounds().bottom;
var result=nextLat-newLat;
returnVal=(result==0)?1:result
}return returnVal
}};
OpenLayers.Renderer.Elements=OpenLayers.Class(OpenLayers.Renderer,{rendererRoot:null,root:null,xmlns:null,indexer:null,BACKGROUND_ID_SUFFIX:"_background",minimumSymbolizer:{strokeLinecap:"round",strokeOpacity:1,strokeDashstyle:"solid",fillOpacity:1,pointRadius:0},initialize:function(containerID,options){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);
this.rendererRoot=this.createRenderRoot();
this.root=this.createRoot();
this.rendererRoot.appendChild(this.root);
this.container.appendChild(this.rendererRoot);
if(options&&(options.zIndexing||options.yOrdering)){this.indexer=new OpenLayers.ElementsIndexer(options.yOrdering)
}},destroy:function(){this.clear();
this.rendererRoot=null;
this.root=null;
this.xmlns=null;
OpenLayers.Renderer.prototype.destroy.apply(this,arguments)
},clear:function(){if(this.root){while(this.root.childNodes.length>0){this.root.removeChild(this.root.firstChild)
}}if(this.indexer){this.indexer.clear()
}},getNodeType:function(geometry,style){},drawGeometry:function(geometry,style,featureId){var className=geometry.CLASS_NAME;
var rendered=true;
if((className=="OpenLayers.Geometry.Collection")||(className=="OpenLayers.Geometry.MultiPoint")||(className=="OpenLayers.Geometry.MultiLineString")||(className=="OpenLayers.Geometry.MultiPolygon")){for(var i=0,len=geometry.components.length;
i<len;
i++){rendered=rendered&&this.drawGeometry(geometry.components[i],style,featureId)
}return rendered
}rendered=false;
if(style.display!="none"){if(style.backgroundGraphic){this.redrawBackgroundNode(geometry.id,geometry,style,featureId)
}rendered=this.redrawNode(geometry.id,geometry,style,featureId)
}if(rendered==false){var node=document.getElementById(geometry.id);
if(node){if(node._style.backgroundGraphic){node.parentNode.removeChild(document.getElementById(geometry.id+this.BACKGROUND_ID_SUFFIX))
}node.parentNode.removeChild(node)
}}return rendered
},redrawNode:function(id,geometry,style,featureId){var node=this.nodeFactory(id,this.getNodeType(geometry,style));
node._featureId=featureId;
node._geometry=geometry;
node._geometryClass=geometry.CLASS_NAME;
node._style=style;
var drawResult=this.drawGeometryNode(node,geometry,style);
if(drawResult===false){return false
}node=drawResult.node;
var insert=this.indexer?this.indexer.insert(node):null;
if(insert){this.root.insertBefore(node,insert)
}else{this.root.appendChild(node)
}this.postDraw(node);
return drawResult.complete
},redrawBackgroundNode:function(id,geometry,style,featureId){var backgroundStyle=OpenLayers.Util.extend({},style);
backgroundStyle.externalGraphic=backgroundStyle.backgroundGraphic;
backgroundStyle.graphicXOffset=backgroundStyle.backgroundXOffset;
backgroundStyle.graphicYOffset=backgroundStyle.backgroundYOffset;
backgroundStyle.graphicZIndex=backgroundStyle.backgroundGraphicZIndex;
backgroundStyle.backgroundGraphic=null;
backgroundStyle.backgroundXOffset=null;
backgroundStyle.backgroundYOffset=null;
backgroundStyle.backgroundGraphicZIndex=null;
return this.redrawNode(id+this.BACKGROUND_ID_SUFFIX,geometry,backgroundStyle,null)
},drawGeometryNode:function(node,geometry,style){style=style||node._style;
OpenLayers.Util.applyDefaults(style,this.minimumSymbolizer);
var options={isFilled:true,isStroked:!!style.strokeWidth};
var drawn;
switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":drawn=this.drawPoint(node,geometry);
break;
case"OpenLayers.Geometry.LineString":options.isFilled=false;
drawn=this.drawLineString(node,geometry);
break;
case"OpenLayers.Geometry.LinearRing":drawn=this.drawLinearRing(node,geometry);
break;
case"OpenLayers.Geometry.Polygon":drawn=this.drawPolygon(node,geometry);
break;
case"OpenLayers.Geometry.Surface":drawn=this.drawSurface(node,geometry);
break;
case"OpenLayers.Geometry.Rectangle":drawn=this.drawRectangle(node,geometry);
break;
default:break
}node._style=style;
node._options=options;
if(drawn!=false){return{node:this.setStyle(node,style,options,geometry),complete:drawn}
}else{return false
}},postDraw:function(node){},drawPoint:function(node,geometry){},drawLineString:function(node,geometry){},drawLinearRing:function(node,geometry){},drawPolygon:function(node,geometry){},drawRectangle:function(node,geometry){},drawCircle:function(node,geometry){},drawSurface:function(node,geometry){},getFeatureIdFromEvent:function(evt){var target=evt.target;
var useElement=target&&target.correspondingUseElement;
var node=useElement?useElement:(target||evt.srcElement);
var featureId=node._featureId;
return featureId
},eraseGeometry:function(geometry){if((geometry.CLASS_NAME=="OpenLayers.Geometry.MultiPoint")||(geometry.CLASS_NAME=="OpenLayers.Geometry.MultiLineString")||(geometry.CLASS_NAME=="OpenLayers.Geometry.MultiPolygon")||(geometry.CLASS_NAME=="OpenLayers.Geometry.Collection")){for(var i=0,len=geometry.components.length;
i<len;
i++){this.eraseGeometry(geometry.components[i])
}}else{var element=OpenLayers.Util.getElement(geometry.id);
if(element&&element.parentNode){if(element.geometry){element.geometry.destroy();
element.geometry=null
}element.parentNode.removeChild(element);
if(this.indexer){this.indexer.remove(element)
}if(element._style.backgroundGraphic){var backgroundId=geometry.id+this.BACKGROUND_ID_SUFFIX;
var bElem=OpenLayers.Util.getElement(backgroundId);
if(bElem&&bElem.parentNode){bElem.parentNode.removeChild(bElem)
}}}}},nodeFactory:function(id,type){var node=OpenLayers.Util.getElement(id);
if(node){if(!this.nodeTypeCompare(node,type)){node.parentNode.removeChild(node);
node=this.nodeFactory(id,type)
}}else{node=this.createNode(type,id)
}return node
},nodeTypeCompare:function(node,type){},createNode:function(type,id){},isComplexSymbol:function(graphicName){return(graphicName!="circle")&&!!graphicName
},CLASS_NAME:"OpenLayers.Renderer.Elements"});
OpenLayers.Renderer.symbol={star:[350,75,379,161,469,161,397,215,423,301,350,250,277,301,303,215,231,161,321,161,350,75],cross:[4,0,6,0,6,4,10,4,10,6,6,6,6,10,4,10,4,6,0,6,0,4,4,4,4,0],x:[0,0,25,0,50,35,75,0,100,0,65,50,100,100,75,100,50,65,25,100,0,100,35,50,0,0],square:[0,0,0,1,1,1,1,0,0,0],triangle:[0,10,10,10,5,0,0,10]};OpenLayers.Renderer.SVG=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"http://www.w3.org/2000/svg",xlinkns:"http://www.w3.org/1999/xlink",MAX_PIXEL:15000,translationParameters:null,symbolSize:{},initialize:function(containerID){if(!this.supported()){return 
}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments);
this.translationParameters={x:0,y:0}
},destroy:function(){OpenLayers.Renderer.Elements.prototype.destroy.apply(this,arguments)
},supported:function(){var svgFeature="http://www.w3.org/TR/SVG11/feature#";
return(document.implementation&&(document.implementation.hasFeature("org.w3c.svg","1.0")||document.implementation.hasFeature(svgFeature+"SVG","1.1")||document.implementation.hasFeature(svgFeature+"BasicStructure","1.1")))
},inValidRange:function(x,y,xyOnly){var left=x+(xyOnly?0:this.translationParameters.x);
var top=y+(xyOnly?0:this.translationParameters.y);
return(left>=-this.MAX_PIXEL&&left<=this.MAX_PIXEL&&top>=-this.MAX_PIXEL&&top<=this.MAX_PIXEL)
},setExtent:function(extent,resolutionChanged){OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);
var resolution=this.getResolution();
var left=-extent.left/resolution;
var top=extent.top/resolution;
if(resolutionChanged){this.left=left;
this.top=top;
var extentString="0 0 "+this.size.w+" "+this.size.h;
this.rendererRoot.setAttributeNS(null,"viewBox",extentString);
this.translate(0,0);
return true
}else{var inRange=this.translate(left-this.left,top-this.top);
if(!inRange){this.setExtent(extent,true)
}return inRange
}},translate:function(x,y){if(!this.inValidRange(x,y,true)){return false
}else{var transformString="";
if(x||y){transformString="translate("+x+","+y+")"
}this.root.setAttributeNS(null,"transform",transformString);
this.translationParameters={x:x,y:y};
return true
}},setSize:function(size){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);
this.rendererRoot.setAttributeNS(null,"width",this.size.w);
this.rendererRoot.setAttributeNS(null,"height",this.size.h)
},getNodeType:function(geometry,style){var nodeType=null;
switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":if(style.externalGraphic){nodeType="image"
}else{if(this.isComplexSymbol(style.graphicName)){nodeType="use"
}else{nodeType="circle"
}}break;
case"OpenLayers.Geometry.Rectangle":nodeType="rect";
break;
case"OpenLayers.Geometry.LineString":nodeType="polyline";
break;
case"OpenLayers.Geometry.LinearRing":nodeType="polygon";
break;
case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":case"OpenLayers.Geometry.Surface":nodeType="path";
break;
default:break
}return nodeType
},setStyle:function(node,style,options){style=style||node._style;
options=options||node._options;
var r=parseFloat(node.getAttributeNS(null,"r"));
var widthFactor=1;
var pos;
if(node._geometryClass=="OpenLayers.Geometry.Point"&&r){if(style.externalGraphic){pos=this.getPosition(node);
if(style.graphicWidth&&style.graphicHeight){node.setAttributeNS(null,"preserveAspectRatio","none")
}var width=style.graphicWidth||style.graphicHeight;
var height=style.graphicHeight||style.graphicWidth;
width=width?width:style.pointRadius*2;
height=height?height:style.pointRadius*2;
var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);
var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);
var opacity=style.graphicOpacity||style.fillOpacity;
node.setAttributeNS(null,"x",(pos.x+xOffset).toFixed());
node.setAttributeNS(null,"y",(pos.y+yOffset).toFixed());
node.setAttributeNS(null,"width",width);
node.setAttributeNS(null,"height",height);
node.setAttributeNS(this.xlinkns,"href",style.externalGraphic);
node.setAttributeNS(null,"style","opacity: "+opacity)
}else{if(this.isComplexSymbol(style.graphicName)){var offset=style.pointRadius*3;
var size=offset*2;
var id=this.importSymbol(style.graphicName);
var href="#"+id;
pos=this.getPosition(node);
widthFactor=this.symbolSize[id]/size;
if(node.getAttributeNS(this.xlinkns,"href")!=href){node.setAttributeNS(this.xlinkns,"href",href)
}else{if(size!=parseFloat(node.getAttributeNS(null,"width"))){node.style.visibility="hidden";
this.container.scrollLeft=this.container.scrollLeft
}}node.setAttributeNS(null,"width",size);
node.setAttributeNS(null,"height",size);
node.setAttributeNS(null,"x",pos.x-offset);
node.setAttributeNS(null,"y",pos.y-offset);
node.style.visibility=""
}else{node.setAttributeNS(null,"r",style.pointRadius)
}}if(typeof style.rotation!="undefined"&&pos){var rotation=OpenLayers.String.format("rotate(${0} ${1} ${2})",[style.rotation,pos.x,pos.y]);
node.setAttributeNS(null,"transform",rotation)
}}if(options.isFilled){node.setAttributeNS(null,"fill",style.fillColor);
node.setAttributeNS(null,"fill-opacity",style.fillOpacity)
}else{node.setAttributeNS(null,"fill","none")
}if(options.isStroked){node.setAttributeNS(null,"stroke",style.strokeColor);
node.setAttributeNS(null,"stroke-opacity",style.strokeOpacity);
node.setAttributeNS(null,"stroke-width",style.strokeWidth*widthFactor);
node.setAttributeNS(null,"stroke-linecap",style.strokeLinecap);
node.setAttributeNS(null,"stroke-linejoin","round");
node.setAttributeNS(null,"stroke-dasharray",this.dashStyle(style,widthFactor))
}else{node.setAttributeNS(null,"stroke","none")
}if(style.pointerEvents){node.setAttributeNS(null,"pointer-events",style.pointerEvents)
}if(style.cursor!=null){node.setAttributeNS(null,"cursor",style.cursor)
}return node
},dashStyle:function(style,widthFactor){var w=style.strokeWidth*widthFactor;
switch(style.strokeDashstyle){case"solid":return"none";
case"dot":return[1,4*w].join();
case"dash":return[4*w,4*w].join();
case"dashdot":return[4*w,4*w,1,4*w].join();
case"longdash":return[8*w,4*w].join();
case"longdashdot":return[8*w,4*w,1,4*w].join();
default:return style.strokeDashstyle.replace(/ /g,",")
}},createNode:function(type,id){var node=document.createElementNS(this.xmlns,type);
if(id){node.setAttributeNS(null,"id",id)
}return node
},nodeTypeCompare:function(node,type){return(type==node.nodeName)
},createRenderRoot:function(){return this.nodeFactory(this.container.id+"_svgRoot","svg")
},createRoot:function(){return this.nodeFactory(this.container.id+"_root","g")
},createDefs:function(){var defs=this.nodeFactory("ol-renderer-defs","defs");
this.rendererRoot.appendChild(defs);
return defs
},drawPoint:function(node,geometry){return this.drawCircle(node,geometry,1)
},drawCircle:function(node,geometry,radius){var resolution=this.getResolution();
var x=(geometry.x/resolution+this.left);
var y=(this.top-geometry.y/resolution);
if(this.inValidRange(x,y)){node.setAttributeNS(null,"cx",x);
node.setAttributeNS(null,"cy",y);
node.setAttributeNS(null,"r",radius);
return node
}else{return false
}},drawLineString:function(node,geometry){var componentsResult=this.getComponentsString(geometry.components);
if(componentsResult.path){node.setAttributeNS(null,"points",componentsResult.path);
return(componentsResult.complete?node:null)
}else{return false
}},drawLinearRing:function(node,geometry){var componentsResult=this.getComponentsString(geometry.components);
if(componentsResult.path){node.setAttributeNS(null,"points",componentsResult.path);
return(componentsResult.complete?node:null)
}else{return false
}},drawPolygon:function(node,geometry){var d="";
var draw=true;
var complete=true;
var linearRingResult,path;
for(var j=0,len=geometry.components.length;
j<len;
j++){d+=" M";
linearRingResult=this.getComponentsString(geometry.components[j].components," ");
path=linearRingResult.path;
if(path){d+=" "+path;
complete=linearRingResult.complete&&complete
}else{draw=false
}}d+=" z";
if(draw){node.setAttributeNS(null,"d",d);
node.setAttributeNS(null,"fill-rule","evenodd");
return complete?node:null
}else{return false
}},drawRectangle:function(node,geometry){var resolution=this.getResolution();
var x=(geometry.x/resolution+this.left);
var y=(this.top-geometry.y/resolution);
if(this.inValidRange(x,y)){node.setAttributeNS(null,"x",x);
node.setAttributeNS(null,"y",y);
node.setAttributeNS(null,"width",geometry.width/resolution);
node.setAttributeNS(null,"height",geometry.height/resolution);
return node
}else{return false
}},drawSurface:function(node,geometry){var d=null;
var draw=true;
for(var i=0,len=geometry.components.length;
i<len;
i++){if((i%3)==0&&(i/3)==0){var component=this.getShortString(geometry.components[i]);
if(!component){draw=false
}d="M "+component
}else{if((i%3)==1){var component=this.getShortString(geometry.components[i]);
if(!component){draw=false
}d+=" C "+component
}else{var component=this.getShortString(geometry.components[i]);
if(!component){draw=false
}d+=" "+component
}}}d+=" Z";
if(draw){node.setAttributeNS(null,"d",d);
return node
}else{return false
}},getComponentsString:function(components,separator){var renderCmp=[];
var complete=true;
var len=components.length;
var strings=[];
var str,component,j;
for(var i=0;
i<len;
i++){component=components[i];
renderCmp.push(component);
str=this.getShortString(component);
if(str){strings.push(str)
}else{if(i>0){if(this.getShortString(components[i-1])){strings.push(this.clipLine(components[i],components[i-1]))
}}if(i<len-1){if(this.getShortString(components[i+1])){strings.push(this.clipLine(components[i],components[i+1]))
}}complete=false
}}return{path:strings.join(separator||","),complete:complete}
},clipLine:function(badComponent,goodComponent){if(goodComponent.equals(badComponent)){return""
}var resolution=this.getResolution();
var maxX=this.MAX_PIXEL-this.translationParameters.x;
var maxY=this.MAX_PIXEL-this.translationParameters.y;
var x1=goodComponent.x/resolution+this.left;
var y1=this.top-goodComponent.y/resolution;
var x2=badComponent.x/resolution+this.left;
var y2=this.top-badComponent.y/resolution;
var k;
if(x2<-maxX||x2>maxX){k=(y2-y1)/(x2-x1);
x2=x2<0?-maxX:maxX;
y2=y1+(x2-x1)*k
}if(y2<-maxY||y2>maxY){k=(x2-x1)/(y2-y1);
y2=y2<0?-maxY:maxY;
x2=x1+(y2-y1)*k
}return x2+","+y2
},getShortString:function(point){var resolution=this.getResolution();
var x=(point.x/resolution+this.left);
var y=(this.top-point.y/resolution);
if(this.inValidRange(x,y)){return x+","+y
}else{return false
}},getPosition:function(node){return({x:parseFloat(node.getAttributeNS(null,"cx")),y:parseFloat(node.getAttributeNS(null,"cy"))})
},importSymbol:function(graphicName){if(!this.defs){this.defs=this.createDefs()
}var id=this.container.id+"-"+graphicName;
if(document.getElementById(id)!=null){return id
}var symbol=OpenLayers.Renderer.symbol[graphicName];
if(!symbol){throw new Error(graphicName+" is not a valid symbol name");
return 
}var symbolNode=this.nodeFactory(id,"symbol");
var node=this.nodeFactory(null,"polygon");
symbolNode.appendChild(node);
var symbolExtent=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);
var points="";
var x,y;
for(var i=0;
i<symbol.length;
i=i+2){x=symbol[i];
y=symbol[i+1];
symbolExtent.left=Math.min(symbolExtent.left,x);
symbolExtent.bottom=Math.min(symbolExtent.bottom,y);
symbolExtent.right=Math.max(symbolExtent.right,x);
symbolExtent.top=Math.max(symbolExtent.top,y);
points+=" "+x+","+y
}node.setAttributeNS(null,"points",points);
var width=symbolExtent.getWidth();
var height=symbolExtent.getHeight();
var viewBox=[symbolExtent.left-width,symbolExtent.bottom-height,width*3,height*3];
symbolNode.setAttributeNS(null,"viewBox",viewBox.join(" "));
this.symbolSize[id]=Math.max(width,height)*3;
this.defs.appendChild(symbolNode);
return symbolNode.id
},CLASS_NAME:"OpenLayers.Renderer.SVG"});OpenLayers.Renderer.Canvas=OpenLayers.Class(OpenLayers.Renderer,{root:null,canvas:null,features:null,geometryMap:null,initialize:function(containerID){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);
this.root=document.createElement("canvas");
this.container.appendChild(this.root);
this.canvas=this.root.getContext("2d");
this.features={};
this.geometryMap={}
},eraseGeometry:function(geometry){this.eraseFeatures(this.features[this.geometryMap[geometry.id]][0])
},supported:function(){var canvas=document.createElement("canvas");
return !!canvas.getContext
},setExtent:function(extent){this.extent=extent.clone();
this.resolution=null;
this.redraw()
},setSize:function(size){this.size=size.clone();
this.root.style.width=size.w+"px";
this.root.style.height=size.h+"px";
this.root.width=size.w;
this.root.height=size.h;
this.resolution=null
},drawFeature:function(feature,style){if(style==null){style=feature.style
}style=OpenLayers.Util.extend({fillColor:"#000000",strokeColor:"#000000",strokeWidth:2,fillOpacity:1,strokeOpacity:1},style);
this.features[feature.id]=[feature,style];
this.geometryMap[feature.geometry.id]=feature.id;
this.redraw()
},drawGeometry:function(geometry,style){var className=geometry.CLASS_NAME;
if((className=="OpenLayers.Geometry.Collection")||(className=="OpenLayers.Geometry.MultiPoint")||(className=="OpenLayers.Geometry.MultiLineString")||(className=="OpenLayers.Geometry.MultiPolygon")){for(var i=0;
i<geometry.components.length;
i++){this.drawGeometry(geometry.components[i],style)
}return 
}switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":this.drawPoint(geometry,style);
break;
case"OpenLayers.Geometry.LineString":this.drawLineString(geometry,style);
break;
case"OpenLayers.Geometry.LinearRing":this.drawLinearRing(geometry,style);
break;
case"OpenLayers.Geometry.Polygon":this.drawPolygon(geometry,style);
break;
default:break
}},drawExternalGraphic:function(pt,style){var img=new Image();
img.src=style.externalGraphic;
var width=style.graphicWidth||style.graphicHeight;
var height=style.graphicHeight||style.graphicWidth;
width=width?width:style.pointRadius*2;
height=height?height:style.pointRadius*2;
var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);
var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);
var opacity=style.graphicOpacity||style.fillOpacity;
var context={img:img,x:(pt[0]+xOffset),y:(pt[1]+yOffset),width:width,height:height,canvas:this.canvas};
img.onload=OpenLayers.Function.bind(function(){this.canvas.drawImage(this.img,this.x,this.y,this.width,this.height)
},context)
},setCanvasStyle:function(type,style){if(type=="fill"){this.canvas.globalAlpha=style.fillOpacity;
this.canvas.fillStyle=style.fillColor
}else{if(type=="stroke"){this.canvas.globalAlpha=style.strokeOpacity;
this.canvas.strokeStyle=style.strokeColor;
this.canvas.lineWidth=style.strokeWidth
}else{this.canvas.globalAlpha=0;
this.canvas.lineWidth=1
}}},drawPoint:function(geometry,style){var pt=this.getLocalXY(geometry);
if(style.externalGraphic){this.drawExternalGraphic(pt,style)
}else{this.setCanvasStyle("fill",style);
this.canvas.beginPath();
this.canvas.arc(pt[0],pt[1],6,0,Math.PI*2,true);
this.canvas.fill();
this.setCanvasStyle("stroke",style);
this.canvas.beginPath();
this.canvas.arc(pt[0],pt[1],6,0,Math.PI*2,true);
this.canvas.stroke();
this.setCanvasStyle("reset")
}},drawLineString:function(geometry,style){this.setCanvasStyle("stroke",style);
this.canvas.beginPath();
var start=this.getLocalXY(geometry.components[0]);
this.canvas.moveTo(start[0],start[1]);
for(var i=1;
i<geometry.components.length;
i++){var pt=this.getLocalXY(geometry.components[i]);
this.canvas.lineTo(pt[0],pt[1])
}this.canvas.stroke();
this.setCanvasStyle("reset")
},drawLinearRing:function(geometry,style){this.setCanvasStyle("fill",style);
this.canvas.beginPath();
var start=this.getLocalXY(geometry.components[0]);
this.canvas.moveTo(start[0],start[1]);
for(var i=1;
i<geometry.components.length-1;
i++){var pt=this.getLocalXY(geometry.components[i]);
this.canvas.lineTo(pt[0],pt[1])
}this.canvas.fill();
var oldWidth=this.canvas.lineWidth;
this.setCanvasStyle("stroke",style);
this.canvas.beginPath();
var start=this.getLocalXY(geometry.components[0]);
this.canvas.moveTo(start[0],start[1]);
for(var i=1;
i<geometry.components.length;
i++){var pt=this.getLocalXY(geometry.components[i]);
this.canvas.lineTo(pt[0],pt[1])
}this.canvas.stroke();
this.setCanvasStyle("reset")
},drawPolygon:function(geometry,style){this.drawLinearRing(geometry.components[0],style);
for(var i=1;
i<geometry.components.length;
i++){this.drawLinearRing(geometry.components[i],{fillOpacity:0,strokeWidth:0,strokeOpacity:0,strokeColor:"#000000",fillColor:"#000000"})
}},getLocalXY:function(point){var resolution=this.getResolution();
var extent=this.extent;
var x=(point.x/resolution+(-extent.left/resolution));
var y=((extent.top/resolution)-point.y/resolution);
return[x,y]
},clear:function(){this.canvas.clearRect(0,0,this.root.width,this.root.height)
},getFeatureIdFromEvent:function(evt){var loc=this.map.getLonLatFromPixel(evt.xy);
var resolution=this.getResolution();
var bounds=new OpenLayers.Bounds(loc.lon-resolution*5,loc.lat-resolution*5,loc.lon+resolution*5,loc.lat+resolution*5);
var geom=bounds.toGeometry();
for(var feat in this.features){if(!this.features.hasOwnProperty(feat)){continue
}if(this.features[feat][0].geometry.intersects(geom)){return feat
}}return null
},eraseFeatures:function(features){if(!(features instanceof Array)){features=[features]
}for(var i=0;
i<features.length;
++i){delete this.features[features[i].id]
}this.redraw()
},redraw:function(){if(!this.locked){this.clear();
for(var id in this.features){if(!this.features.hasOwnProperty(id)){continue
}if(!this.features[id][0].geometry){continue
}this.drawGeometry(this.features[id][0].geometry,this.features[id][1])
}}},CLASS_NAME:"OpenLayers.Renderer.Canvas"});OpenLayers.Renderer.VML=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"urn:schemas-microsoft-com:vml",symbolCache:{},offset:null,initialize:function(containerID){if(!this.supported()){return 
}if(!document.namespaces.olv){document.namespaces.add("olv",this.xmlns);
var style=document.createStyleSheet();
style.addRule("olv\\:*","behavior: url(#default#VML); position: absolute; display: inline-block;")
}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments);
this.offset={x:0,y:0}
},destroy:function(){OpenLayers.Renderer.Elements.prototype.destroy.apply(this,arguments)
},supported:function(){return !!(document.namespaces)
},setExtent:function(extent,resolutionChanged){OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);
var resolution=this.getResolution();
var left=extent.left/resolution;
var top=extent.top/resolution-this.size.h;
if(resolutionChanged){this.offset={x:left,y:top};
left=0;
top=0
}else{left=left-this.offset.x;
top=top-this.offset.y
}var org=left+" "+top;
this.root.setAttribute("coordorigin",org);
var size=this.size.w+" "+this.size.h;
this.root.setAttribute("coordsize",size);
this.root.style.flip="y";
return true
},setSize:function(size){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);
this.rendererRoot.style.width=this.size.w+"px";
this.rendererRoot.style.height=this.size.h+"px";
this.root.style.width=this.size.w+"px";
this.root.style.height=this.size.h+"px"
},getNodeType:function(geometry,style){var nodeType=null;
switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":if(style.externalGraphic){nodeType="olv:rect"
}else{if(this.isComplexSymbol(style.graphicName)){nodeType="olv:shape"
}else{nodeType="olv:oval"
}}break;
case"OpenLayers.Geometry.Rectangle":nodeType="olv:rect";
break;
case"OpenLayers.Geometry.LineString":case"OpenLayers.Geometry.LinearRing":case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":case"OpenLayers.Geometry.Surface":nodeType="olv:shape";
break;
default:break
}return nodeType
},setStyle:function(node,style,options,geometry){style=style||node._style;
options=options||node._options;
var widthFactor=1;
if(node._geometryClass=="OpenLayers.Geometry.Point"){if(style.externalGraphic){var width=style.graphicWidth||style.graphicHeight;
var height=style.graphicHeight||style.graphicWidth;
width=width?width:style.pointRadius*2;
height=height?height:style.pointRadius*2;
var resolution=this.getResolution();
var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);
var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);
node.style.left=((geometry.x/resolution-this.offset.x)+xOffset).toFixed();
node.style.top=((geometry.y/resolution-this.offset.y)-(yOffset+height)).toFixed();
node.style.width=width+"px";
node.style.height=height+"px";
node.style.flip="y";
style.fillColor="none";
options.isStroked=false
}else{if(this.isComplexSymbol(style.graphicName)){var cache=this.importSymbol(style.graphicName);
var symbolExtent=cache.extent;
var width=symbolExtent.getWidth();
var height=symbolExtent.getHeight();
node.setAttribute("path",cache.path);
node.setAttribute("coordorigin",symbolExtent.left+","+symbolExtent.bottom);
node.setAttribute("coordsize",width+","+height);
node.style.left=symbolExtent.left+"px";
node.style.top=symbolExtent.bottom+"px";
node.style.width=width+"px";
node.style.height=height+"px";
this.drawCircle(node,geometry,style.pointRadius);
node.style.flip="y"
}else{this.drawCircle(node,geometry,style.pointRadius)
}}}if(options.isFilled){node.setAttribute("fillcolor",style.fillColor)
}else{node.setAttribute("filled","false")
}var fills=node.getElementsByTagName("fill");
var fill=(fills.length==0)?null:fills[0];
if(!options.isFilled){if(fill){node.removeChild(fill)
}}else{if(!fill){fill=this.createNode("olv:fill",node.id+"_fill")
}fill.setAttribute("opacity",style.fillOpacity);
if(node._geometryClass=="OpenLayers.Geometry.Point"&&style.externalGraphic){if(style.graphicOpacity){fill.setAttribute("opacity",style.graphicOpacity)
}fill.setAttribute("src",style.externalGraphic);
fill.setAttribute("type","frame");
if(!(style.graphicWidth&&style.graphicHeight)){fill.aspect="atmost"
}}if(fill.parentNode!=node){node.appendChild(fill)
}}if(typeof style.rotation!="undefined"){if(style.externalGraphic){this.graphicRotate(node,xOffset,yOffset);
fill.setAttribute("opacity",0)
}else{node.style.rotation=style.rotation
}}if(options.isStroked){node.setAttribute("strokecolor",style.strokeColor);
node.setAttribute("strokeweight",style.strokeWidth+"px")
}else{node.setAttribute("stroked","false")
}var strokes=node.getElementsByTagName("stroke");
var stroke=(strokes.length==0)?null:strokes[0];
if(!options.isStroked){if(stroke){node.removeChild(stroke)
}}else{if(!stroke){stroke=this.createNode("olv:stroke",node.id+"_stroke");
node.appendChild(stroke)
}stroke.setAttribute("opacity",style.strokeOpacity);
stroke.setAttribute("endcap",!style.strokeLinecap||style.strokeLinecap=="butt"?"flat":style.strokeLinecap);
stroke.setAttribute("dashstyle",this.dashStyle(style))
}if(style.cursor!="inherit"&&style.cursor!=null){node.style.cursor=style.cursor
}return node
},graphicRotate:function(node,xOffset,yOffset){var style=style||node._style;
var options=node._options;
var aspectRatio,size;
if(!(style.graphicWidth&&style.graphicHeight)){var img=new Image();
img.onreadystatechange=OpenLayers.Function.bind(function(){if(img.readyState=="complete"||img.readyState=="interactive"){aspectRatio=img.width/img.height;
size=Math.max(style.pointRadius*2,style.graphicWidth||0,style.graphicHeight||0);
xOffset=xOffset*aspectRatio;
style.graphicWidth=size*aspectRatio;
style.graphicHeight=size;
this.graphicRotate(node,xOffset,yOffset)
}},this);
img.src=style.externalGraphic;
return 
}else{size=Math.max(style.graphicWidth,style.graphicHeight);
aspectRatio=style.graphicWidth/style.graphicHeight
}var width=Math.round(style.graphicWidth||size*aspectRatio);
var height=Math.round(style.graphicHeight||size);
node.style.width=width+"px";
node.style.height=height+"px";
var image=document.getElementById(node.id+"_image");
if(!image){image=this.createNode("olv:imagedata",node.id+"_image");
node.appendChild(image)
}image.style.width=width+"px";
image.style.height=height+"px";
image.src=style.externalGraphic;
image.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='', sizingMethod='scale')";
var rotation=style.rotation*Math.PI/180;
var sintheta=Math.sin(rotation);
var costheta=Math.cos(rotation);
var filter="progid:DXImageTransform.Microsoft.Matrix(M11="+costheta+",M12="+(-sintheta)+",M21="+sintheta+",M22="+costheta+",SizingMethod='auto expand')\n";
var opacity=style.graphicOpacity||style.fillOpacity;
if(opacity&&opacity!=1){filter+="progid:DXImageTransform.Microsoft.BasicImage(opacity="+opacity+")\n"
}node.style.filter=filter;
var centerPoint=new OpenLayers.Geometry.Point(-xOffset,-yOffset);
var imgBox=new OpenLayers.Bounds(0,0,width,height).toGeometry();
imgBox.rotate(style.rotation,centerPoint);
var imgBounds=imgBox.getBounds();
node.style.left=Math.round(parseInt(node.style.left)+imgBounds.left)+"px";
node.style.top=Math.round(parseInt(node.style.top)-imgBounds.bottom)+"px"
},postDraw:function(node){var fillColor=node._style.fillColor;
var strokeColor=node._style.strokeColor;
if(fillColor=="none"&&node.getAttribute("fillcolor")!=fillColor){node.setAttribute("fillcolor",fillColor)
}if(strokeColor=="none"&&node.getAttribute("strokecolor")!=strokeColor){node.setAttribute("strokecolor",strokeColor)
}},setNodeDimension:function(node,geometry){var bbox=geometry.getBounds();
if(bbox){var resolution=this.getResolution();
var scaledBox=new OpenLayers.Bounds((bbox.left/resolution-this.offset.x).toFixed(),(bbox.bottom/resolution-this.offset.y).toFixed(),(bbox.right/resolution-this.offset.x).toFixed(),(bbox.top/resolution-this.offset.y).toFixed());
node.style.left=scaledBox.left+"px";
node.style.top=scaledBox.top+"px";
node.style.width=scaledBox.getWidth()+"px";
node.style.height=scaledBox.getHeight()+"px";
node.coordorigin=scaledBox.left+" "+scaledBox.top;
node.coordsize=scaledBox.getWidth()+" "+scaledBox.getHeight()
}},dashStyle:function(style){var dash=style.strokeDashstyle;
switch(dash){case"solid":case"dot":case"dash":case"dashdot":case"longdash":case"longdashdot":return dash;
default:var parts=dash.split(/[ ,]/);
if(parts.length==2){if(1*parts[0]>=2*parts[1]){return"longdash"
}return(parts[0]==1||parts[1]==1)?"dot":"dash"
}else{if(parts.length==4){return(1*parts[0]>=2*parts[1])?"longdashdot":"dashdot"
}}return"solid"
}},createNode:function(type,id){var node=document.createElement(type);
if(id){node.setAttribute("id",id)
}node.setAttribute("unselectable","on",0);
node.onselectstart=function(){return(false)
};
return node
},nodeTypeCompare:function(node,type){var subType=type;
var splitIndex=subType.indexOf(":");
if(splitIndex!=-1){subType=subType.substr(splitIndex+1)
}var nodeName=node.nodeName;
splitIndex=nodeName.indexOf(":");
if(splitIndex!=-1){nodeName=nodeName.substr(splitIndex+1)
}return(subType==nodeName)
},createRenderRoot:function(){return this.nodeFactory(this.container.id+"_vmlRoot","div")
},createRoot:function(){return this.nodeFactory(this.container.id+"_root","olv:group")
},drawPoint:function(node,geometry){return this.drawCircle(node,geometry,1)
},drawCircle:function(node,geometry,radius){if(!isNaN(geometry.x)&&!isNaN(geometry.y)){var resolution=this.getResolution();
node.style.left=((geometry.x/resolution-this.offset.x).toFixed()-radius)+"px";
node.style.top=((geometry.y/resolution-this.offset.y).toFixed()-radius)+"px";
var diameter=radius*2;
node.style.width=diameter+"px";
node.style.height=diameter+"px";
return node
}return false
},drawLineString:function(node,geometry){return this.drawLine(node,geometry,false)
},drawLinearRing:function(node,geometry){return this.drawLine(node,geometry,true)
},drawLine:function(node,geometry,closeLine){this.setNodeDimension(node,geometry);
var resolution=this.getResolution();
var numComponents=geometry.components.length;
var parts=new Array(numComponents);
var comp,x,y;
for(var i=0;
i<numComponents;
i++){comp=geometry.components[i];
x=(comp.x/resolution-this.offset.x);
y=(comp.y/resolution-this.offset.y);
parts[i]=" "+x.toFixed()+","+y.toFixed()+" l "
}var end=(closeLine)?" x e":" e";
node.path="m"+parts.join("")+end;
return node
},drawPolygon:function(node,geometry){this.setNodeDimension(node,geometry);
var resolution=this.getResolution();
var path=[];
var linearRing,i,j,len,ilen,comp,x,y;
for(j=0,len=geometry.components.length;
j<len;
j++){linearRing=geometry.components[j];
path.push("m");
for(i=0,ilen=linearRing.components.length;
i<ilen;
i++){comp=linearRing.components[i];
x=comp.x/resolution-this.offset.x;
y=comp.y/resolution-this.offset.y;
path.push(" "+x.toFixed()+","+y.toFixed());
if(i==0){path.push(" l")
}}path.push(" x ")
}path.push("e");
node.path=path.join("");
return node
},drawRectangle:function(node,geometry){var resolution=this.getResolution();
node.style.left=(geometry.x/resolution-this.offset.x)+"px";
node.style.top=(geometry.y/resolution-this.offset.y)+"px";
node.style.width=geometry.width/resolution+"px";
node.style.height=geometry.height/resolution+"px";
return node
},drawSurface:function(node,geometry){this.setNodeDimension(node,geometry);
var resolution=this.getResolution();
var path=[];
var comp,x,y;
for(var i=0,len=geometry.components.length;
i<len;
i++){comp=geometry.components[i];
x=comp.x/resolution-this.offset.x;
y=comp.y/resolution-this.offset.y;
if((i%3)==0&&(i/3)==0){path.push("m")
}else{if((i%3)==1){path.push(" c")
}}path.push(" "+x+","+y)
}path.push(" x e");
node.path=path.join("");
return node
},importSymbol:function(graphicName){var id=this.container.id+"-"+graphicName;
var cache=this.symbolCache[id];
if(cache){return cache
}var symbol=OpenLayers.Renderer.symbol[graphicName];
if(!symbol){throw new Error(graphicName+" is not a valid symbol name");
return 
}var symbolExtent=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);
var pathitems=["m"];
for(var i=0;
i<symbol.length;
i=i+2){x=symbol[i];
y=symbol[i+1];
symbolExtent.left=Math.min(symbolExtent.left,x);
symbolExtent.bottom=Math.min(symbolExtent.bottom,y);
symbolExtent.right=Math.max(symbolExtent.right,x);
symbolExtent.top=Math.max(symbolExtent.top,y);
pathitems.push(x);
pathitems.push(y);
if(i==0){pathitems.push("l")
}}pathitems.push("x e");
var path=pathitems.join(" ");
cache={path:path,extent:symbolExtent};
this.symbolCache[id]=cache;
return cache
},CLASS_NAME:"OpenLayers.Renderer.VML"});OpenLayers.Layer.Vector=OpenLayers.Class(OpenLayers.Layer,{EVENT_TYPES:["beforefeatureadded","beforefeaturesadded","featureadded","featuresadded","beforefeatureremoved","featureremoved","featuresremoved","beforefeatureselected","featureselected","featureunselected","beforefeaturemodified","featuremodified","afterfeaturemodified","refresh"],isBaseLayer:false,isFixed:false,isVector:true,features:null,selectedFeatures:null,unrenderedFeatures:null,reportError:true,style:null,styleMap:null,strategies:null,protocol:null,renderers:["SVG","VML","Canvas"],renderer:null,rendererOptions:null,geometryType:null,drawn:false,initialize:function(name,options){this.EVENT_TYPES=OpenLayers.Layer.Vector.prototype.EVENT_TYPES.concat(OpenLayers.Layer.prototype.EVENT_TYPES);
OpenLayers.Layer.prototype.initialize.apply(this,arguments);
if(!this.renderer||!this.renderer.supported()){this.assignRenderer()
}if(!this.renderer||!this.renderer.supported()){this.renderer=null;
this.displayError()
}if(!this.styleMap){this.styleMap=new OpenLayers.StyleMap()
}this.features=[];
this.selectedFeatures=[];
this.unrenderedFeatures={};
if(this.strategies){for(var i=0,len=this.strategies.length;
i<len;
i++){this.strategies[i].setLayer(this)
}}},destroy:function(){if(this.strategies){var strategy,i,len;
for(i=0,len=this.strategies.length;
i<len;
i++){strategy=this.strategies[i];
if(strategy.autoDestroy){strategy.destroy()
}}this.strategies=null
}if(this.protocol){if(this.protocol.autoDestroy){this.protocol.destroy()
}this.protocol=null
}this.destroyFeatures();
this.features=null;
this.selectedFeatures=null;
this.unrenderedFeatures=null;
if(this.renderer){this.renderer.destroy()
}this.renderer=null;
this.geometryType=null;
this.drawn=null;
OpenLayers.Layer.prototype.destroy.apply(this,arguments)
},refresh:function(obj){if(this.inRange&&this.visibility){this.events.triggerEvent("refresh",obj)
}},assignRenderer:function(){for(var i=0,len=this.renderers.length;
i<this.renderers.length;
i++){var rendererClass=OpenLayers.Renderer[this.renderers[i]];
if(rendererClass&&rendererClass.prototype.supported()){this.renderer=new rendererClass(this.div,this.rendererOptions);
break
}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{renderers:this.renderers.join("\n")}))
}},setMap:function(map){OpenLayers.Layer.prototype.setMap.apply(this,arguments);
if(!this.renderer){this.map.removeLayer(this)
}else{this.renderer.map=this.map;
this.renderer.setSize(this.map.getSize())
}if(this.strategies){var strategy,i,len;
for(i=0,len=this.strategies.length;
i<len;
i++){strategy=this.strategies[i];
if(strategy.autoActivate){strategy.activate()
}}}},removeMap:function(map){if(this.strategies){var strategy,i,len;
for(i=0,len=this.strategies.length;
i<len;
i++){strategy=this.strategies[i];
if(strategy.autoActivate){strategy.deactivate()
}}}},onMapResize:function(){OpenLayers.Layer.prototype.onMapResize.apply(this,arguments);
this.renderer.setSize(this.map.getSize())
},moveTo:function(bounds,zoomChanged,dragging){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);
var coordSysUnchanged=true;
if(!dragging){this.renderer.root.style.visibility="hidden";
this.div.style.left=-parseInt(this.map.layerContainerDiv.style.left)+"px";
this.div.style.top=-parseInt(this.map.layerContainerDiv.style.top)+"px";
var extent=this.map.getExtent();
coordSysUnchanged=this.renderer.setExtent(extent,zoomChanged);
this.renderer.root.style.visibility="visible";
if(navigator.userAgent.toLowerCase().indexOf("gecko")!=-1){this.div.scrollLeft=this.div.scrollLeft
}if(!zoomChanged&&coordSysUnchanged){for(var i in this.unrenderedFeatures){var feature=this.unrenderedFeatures[i];
this.drawFeature(feature)
}}}if(!this.drawn||zoomChanged||!coordSysUnchanged){this.drawn=true;
var feature;
for(var i=0,len=this.features.length;
i<len;
i++){if(i!=(this.features.length-1)){this.renderer.locked=true
}else{this.renderer.locked=false
}feature=this.features[i];
this.drawFeature(feature)
}}},addFeatures:function(features,options){if(!(features instanceof Array)){features=[features]
}var notify=!options||!options.silent;
if(notify){var event={features:features};
var ret=this.events.triggerEvent("beforefeaturesadded",event);
if(ret===false){return 
}features=event.features
}for(var i=0,len=features.length;
i<len;
i++){if(i!=(features.length-1)){this.renderer.locked=true
}else{this.renderer.locked=false
}var feature=features[i];
if(this.geometryType&&!(feature.geometry instanceof this.geometryType)){var throwStr=OpenLayers.i18n("componentShouldBe",{geomType:this.geometryType.prototype.CLASS_NAME});
throw throwStr
}this.features.push(feature);
feature.layer=this;
if(!feature.style&&this.style){feature.style=OpenLayers.Util.extend({},this.style)
}if(notify){if(this.events.triggerEvent("beforefeatureadded",{feature:feature})===false){continue
}this.preFeatureInsert(feature)
}if(this.drawn){this.drawFeature(feature)
}if(notify){this.events.triggerEvent("featureadded",{feature:feature});
this.onFeatureInsert(feature)
}}if(notify){this.events.triggerEvent("featuresadded",{features:features})
}},removeFeatures:function(features,options){if(!features||features.length===0){return 
}if(!(features instanceof Array)){features=[features]
}var notify=!options||!options.silent;
for(var i=features.length-1;
i>=0;
i--){if(i!=0&&features[i-1].geometry){this.renderer.locked=true
}else{this.renderer.locked=false
}var feature=features[i];
delete this.unrenderedFeatures[feature.id];
if(notify){this.events.triggerEvent("beforefeatureremoved",{feature:feature})
}this.features=OpenLayers.Util.removeItem(this.features,feature);
feature.layer=null;
if(feature.geometry){this.renderer.eraseGeometry(feature.geometry)
}if(OpenLayers.Util.indexOf(this.selectedFeatures,feature)!=-1){OpenLayers.Util.removeItem(this.selectedFeatures,feature)
}if(notify){this.events.triggerEvent("featureremoved",{feature:feature})
}}if(notify){this.events.triggerEvent("featuresremoved",{features:features})
}},destroyFeatures:function(features,options){var all=(features==undefined);
if(all){features=this.features
}if(features){this.removeFeatures(features,options);
for(var i=features.length-1;
i>=0;
i--){features[i].destroy()
}}},drawFeature:function(feature,style){if(typeof style!="object"){var renderIntent=typeof style=="string"?style:feature.renderIntent;
style=feature.style||this.style;
if(!style){style=this.styleMap.createSymbolizer(feature,renderIntent)
}}if(!this.renderer.drawFeature(feature,style)){this.unrenderedFeatures[feature.id]=feature
}else{delete this.unrenderedFeatures[feature.id]
}},eraseFeatures:function(features){this.renderer.eraseFeatures(features)
},getFeatureFromEvent:function(evt){if(!this.renderer){OpenLayers.Console.error(OpenLayers.i18n("getFeatureError"));
return null
}var featureId=this.renderer.getFeatureIdFromEvent(evt);
return this.getFeatureById(featureId)
},getFeatureById:function(featureId){var feature=null;
for(var i=0,len=this.features.length;
i<len;
++i){if(this.features[i].id==featureId){feature=this.features[i];
break
}}return feature
},onFeatureInsert:function(feature){},preFeatureInsert:function(feature){},getDataExtent:function(){var maxExtent=null;
if(this.features&&(this.features.length>0)){var maxExtent=this.features[0].geometry.getBounds();
for(var i=0,len=this.features.length;
i<len;
i++){maxExtent.extend(this.features[i].geometry.getBounds())
}}return maxExtent
},CLASS_NAME:"OpenLayers.Layer.Vector"});OpenLayers.Protocol=OpenLayers.Class({format:null,options:null,autoDestroy:true,initialize:function(options){options=options||{};
OpenLayers.Util.extend(this,options);
this.options=options
},destroy:function(){this.options=null;
this.format=null
},read:function(){},create:function(){},update:function(){},"delete":function(){},commit:function(){},CLASS_NAME:"OpenLayers.Protocol"});
OpenLayers.Protocol.Response=OpenLayers.Class({code:null,requestType:null,last:true,features:null,reqFeatures:null,priv:null,initialize:function(options){OpenLayers.Util.extend(this,options)
},success:function(){return this.code>0
},CLASS_NAME:"OpenLayers.Protocol.Response"});
OpenLayers.Protocol.Response.SUCCESS=1;
OpenLayers.Protocol.Response.FAILURE=0;OpenLayers.Protocol.HTTP=OpenLayers.Class(OpenLayers.Protocol,{url:null,headers:null,params:null,callback:null,scope:null,initialize:function(options){this.params={};
this.headers={};
OpenLayers.Protocol.prototype.initialize.apply(this,arguments)
},destroy:function(){this.params=null;
this.headers=null;
OpenLayers.Protocol.prototype.destroy.apply(this)
},createCallback:function(method,response,options){return OpenLayers.Function.bind(function(){method.apply(this,[response,options])
},this)
},read:function(options){options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=new OpenLayers.Protocol.Response({requestType:"read"});
if(options.filter&&options.filter instanceof OpenLayers.Filter.Spatial){if(options.filter.type==OpenLayers.Filter.Spatial.BBOX){options.params=OpenLayers.Util.extend(options.params,{bbox:options.filter.value.toArray()})
}}resp.priv=OpenLayers.Request.GET({url:options.url,callback:this.createCallback(this.handleRead,resp,options),params:options.params,headers:options.headers});
return resp
},handleRead:function(resp,options){this.handleResponse(resp,options)
},create:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=new OpenLayers.Protocol.Response({reqFeatures:features,requestType:"create"});
resp.priv=OpenLayers.Request.POST({url:options.url,callback:this.createCallback(this.handleCreate,resp,options),headers:options.headers,data:this.format.write(features)});
return resp
},handleCreate:function(resp,options){this.handleResponse(resp,options)
},update:function(feature,options){var url=options.url||feature.url||this.options.url;
options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=new OpenLayers.Protocol.Response({reqFeatures:feature,requestType:"update"});
resp.priv=OpenLayers.Request.PUT({url:url,callback:this.createCallback(this.handleUpdate,resp,options),headers:options.headers,data:this.format.write(feature)});
return resp
},handleUpdate:function(resp,options){this.handleResponse(resp,options)
},"delete":function(feature,options){var url=options.url||feature.url||this.options.url;
options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=new OpenLayers.Protocol.Response({reqFeatures:feature,requestType:"delete"});
resp.priv=OpenLayers.Request.DELETE({url:url,callback:this.createCallback(this.handleDelete,resp,options),headers:options.headers});
return resp
},handleDelete:function(resp,options){this.handleResponse(resp,options)
},handleResponse:function(resp,options){var request=resp.priv;
if(options.callback){if(request.status>=200&&request.status<300){if(resp.requestType!="delete"){resp.features=this.parseFeatures(request)
}resp.code=OpenLayers.Protocol.Response.SUCCESS
}else{resp.code=OpenLayers.Protocol.Response.FAILURE
}options.callback.call(options.scope,resp)
}},parseFeatures:function(request){var doc=request.responseXML;
if(!doc||!doc.documentElement){doc=request.responseText
}if(!doc||doc.length<=0){return null
}return this.format.read(doc)
},commit:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=[],nResponses=0;
var types={};
types[OpenLayers.State.INSERT]=[];
types[OpenLayers.State.UPDATE]=[];
types[OpenLayers.State.DELETE]=[];
var feature,list;
for(var i=0,len=features.length;
i<len;
++i){feature=features[i];
list=types[feature.state];
if(list){list.push(feature)
}}var nRequests=(types[OpenLayers.State.INSERT].length>0?1:0)+types[OpenLayers.State.UPDATE].length+types[OpenLayers.State.DELETE].length;
function callback(response){nResponses++;
response.last=(nResponses>=nRequests);
this.callUserCallback(response,options)
}var queue=types[OpenLayers.State.INSERT];
if(queue.length>0){resp.push(this.create(queue,OpenLayers.Util.applyDefaults({callback:callback,scope:this},options.create||{})))
}queue=types[OpenLayers.State.UPDATE];
for(var i=queue.length-1;
i>=0;
--i){resp.push(this.update(queue[i],OpenLayers.Util.applyDefaults({callback:callback,scope:this},options.update||{})))
}queue=types[OpenLayers.State.DELETE];
for(var i=queue.length-1;
i>=0;
--i){resp.push(this["delete"](queue[i],OpenLayers.Util.applyDefaults({callback:callback,scope:this},options["delete"]||{})))
}return resp
},callUserCallback:function(resp,options){var opt=options[resp.requestType];
if(opt&&opt.callback){opt.callback.call(opt.scope,resp)
}if(resp.last&&options.callback){options.callback.call(options.scope)
}},CLASS_NAME:"OpenLayers.Protocol.HTTP"});OpenLayers.Protocol.SQL=OpenLayers.Class(OpenLayers.Protocol,{databaseName:"ol",tableName:"ol_vector_features",postReadFiltering:true,initialize:function(options){OpenLayers.Protocol.prototype.initialize.apply(this,[options])
},destroy:function(){OpenLayers.Protocol.prototype.destroy.apply(this)
},supported:function(){return false
},evaluateFilter:function(feature,filter){return filter&&this.postReadFiltering?filter.evaluate(feature):true
},CLASS_NAME:"OpenLayers.Protocol.SQL"});OpenLayers.Protocol.SQL.Gears=OpenLayers.Class(OpenLayers.Protocol.SQL,{FID_PREFIX:"__gears_fid__",NULL_GEOMETRY:"__gears_null_geometry__",NULL_FEATURE_STATE:"__gears_null_feature_state__",jsonParser:null,wktParser:null,fidRegExp:null,saveFeatureState:true,typeOfFid:"string",db:null,initialize:function(options){if(!this.supported()){return 
}OpenLayers.Protocol.SQL.prototype.initialize.apply(this,[options]);
this.jsonParser=new OpenLayers.Format.JSON();
this.wktParser=new OpenLayers.Format.WKT();
this.fidRegExp=new RegExp("^"+this.FID_PREFIX);
this.initializeDatabase()
},initializeDatabase:function(){this.db=google.gears.factory.create("beta.database");
this.db.open(this.databaseName);
this.db.execute("CREATE TABLE IF NOT EXISTS "+this.tableName+" (fid TEXT UNIQUE, geometry TEXT, properties TEXT,  state TEXT)")
},destroy:function(){this.db.close();
this.db=null;
this.jsonParser=null;
this.wktParser=null;
OpenLayers.Protocol.SQL.prototype.destroy.apply(this)
},supported:function(){return !!(window.google&&google.gears)
},read:function(options){options=OpenLayers.Util.applyDefaults(options,this.options);
var feature,features=[];
var rs=this.db.execute("SELECT * FROM "+this.tableName);
while(rs.isValidRow()){feature=this.unfreezeFeature(rs);
if(this.evaluateFilter(feature,options.filter)){if(!options.noFeatureStateReset){feature.state=null
}features.push(feature)
}rs.next()
}rs.close();
var resp=new OpenLayers.Protocol.Response({code:OpenLayers.Protocol.Response.SUCCESS,requestType:"read",features:features});
if(options&&options.callback){options.callback.call(options.scope,resp)
}return resp
},unfreezeFeature:function(row){var feature;
var wkt=row.fieldByName("geometry");
if(wkt==this.NULL_GEOMETRY){feature=new OpenLayers.Feature.Vector()
}else{feature=this.wktParser.read(wkt)
}feature.attributes=this.jsonParser.read(row.fieldByName("properties"));
feature.fid=this.extractFidFromField(row.fieldByName("fid"));
var state=row.fieldByName("state");
if(state==this.NULL_FEATURE_STATE){state=null
}feature.state=state;
return feature
},extractFidFromField:function(field){if(!field.match(this.fidRegExp)&&this.typeOfFid=="number"){field=parseFloat(field)
}return field
},create:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=this.createOrUpdate(features);
resp.requestType="create";
if(options&&options.callback){options.callback.call(options.scope,resp)
}return resp
},update:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);
var resp=this.createOrUpdate(features);
resp.requestType="update";
if(options&&options.callback){options.callback.call(options.scope,resp)
}return resp
},createOrUpdate:function(features){if(!(features instanceof Array)){features=[features]
}var i,len=features.length,feature;
var insertedFeatures=new Array(len);
for(i=0;
i<len;
i++){feature=features[i];
var params=this.freezeFeature(feature);
this.db.execute("REPLACE INTO "+this.tableName+" (fid, geometry, properties, state) VALUES (?, ?, ?, ?)",params);
var clone=feature.clone();
clone.fid=this.extractFidFromField(params[0]);
insertedFeatures[i]=clone
}return new OpenLayers.Protocol.Response({code:OpenLayers.Protocol.Response.SUCCESS,features:insertedFeatures,reqFeatures:features})
},freezeFeature:function(feature){feature.fid=feature.fid!=null?""+feature.fid:OpenLayers.Util.createUniqueID(this.FID_PREFIX);
var geometry=feature.geometry!=null?feature.geometry.toString():this.NULL_GEOMETRY;
var properties=this.jsonParser.write(feature.attributes);
var state=this.getFeatureStateForFreeze(feature);
return[feature.fid,geometry,properties,state]
},getFeatureStateForFreeze:function(feature){var state;
if(!this.saveFeatureState){state=this.NULL_FEATURE_STATE
}else{if(this.createdOffline(feature)){state=OpenLayers.State.INSERT
}else{state=feature.state
}}return state
},"delete":function(features,options){if(!(features instanceof Array)){features=[features]
}options=OpenLayers.Util.applyDefaults(options,this.options);
var i,len,feature;
for(i=0,len=features.length;
i<len;
i++){feature=features[i];
if(this.saveFeatureState&&!this.createdOffline(feature)){var toDelete=feature.clone();
toDelete.fid=feature.fid;
if(toDelete.geometry){toDelete.geometry.destroy();
toDelete.geometry=null
}toDelete.state=feature.state;
this.createOrUpdate(toDelete)
}else{this.db.execute("DELETE FROM "+this.tableName+" WHERE fid = ?",[feature.fid])
}}var resp=new OpenLayers.Protocol.Response({code:OpenLayers.Protocol.Response.SUCCESS,requestType:"delete",reqFeatures:features});
if(options&&options.callback){options.callback.call(options.scope,resp)
}return resp
},createdOffline:function(feature){return(typeof feature.fid=="string"&&!!(feature.fid.match(this.fidRegExp)))
},commit:function(features,options){var opt,resp=[],nRequests=0,nResponses=0;
function callback(resp){if(++nResponses<nRequests){resp.last=false
}this.callUserCallback(options,resp)
}var feature,toCreate=[],toUpdate=[],toDelete=[];
for(var i=features.length-1;
i>=0;
i--){feature=features[i];
switch(feature.state){case OpenLayers.State.INSERT:toCreate.push(feature);
break;
case OpenLayers.State.UPDATE:toUpdate.push(feature);
break;
case OpenLayers.State.DELETE:toDelete.push(feature);
break
}}if(toCreate.length>0){nRequests++;
opt=OpenLayers.Util.applyDefaults({callback:callback,scope:this},options.create);
resp.push(this.create(toCreate,opt))
}if(toUpdate.length>0){nRequests++;
opt=OpenLayers.Util.applyDefaults({callback:callback,scope:this},options.update);
resp.push(this.update(toUpdate,opt))
}if(toDelete.length>0){nRequests++;
opt=OpenLayers.Util.applyDefaults({callback:callback,scope:this},options["delete"]);
resp.push(this["delete"](toDelete,opt))
}return resp
},clear:function(){this.db.execute("DELETE FROM "+this.tableName)
},callUserCallback:function(options,resp){var opt=options[resp.requestType];
if(opt&&opt.callback){opt.callback.call(opt.scope,resp)
}if(resp.last&&options.callback){options.callback.call(options.scope)
}},CLASS_NAME:"OpenLayers.Protocol.SQL.Gears"});OpenLayers.Layer.PointTrack=OpenLayers.Class(OpenLayers.Layer.Vector,{dataFrom:null,initialize:function(name,options){OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments)
},addNodes:function(pointFeatures){if(pointFeatures.length<2){OpenLayers.Console.error("At least two point features have to be added to createa line from");
return 
}var lines=new Array(pointFeatures.length-1);
var pointFeature,startPoint,endPoint;
for(var i=0,len=pointFeatures.length;
i<len;
i++){pointFeature=pointFeatures[i];
endPoint=pointFeature.geometry;
if(!endPoint){var lonlat=pointFeature.lonlat;
endPoint=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat)
}else{if(endPoint.CLASS_NAME!="OpenLayers.Geometry.Point"){OpenLayers.Console.error("Only features with point geometries are supported.");
return 
}}if(i>0){var attributes=(this.dataFrom!=null)?(pointFeatures[i+this.dataFrom].data||pointFeatures[i+this.dataFrom].attributes):null;
var line=new OpenLayers.Geometry.LineString([startPoint,endPoint]);
lines[i-1]=new OpenLayers.Feature.Vector(line,attributes)
}startPoint=endPoint
}this.addFeatures(lines)
},CLASS_NAME:"OpenLayers.Layer.PointTrack"});
OpenLayers.Layer.PointTrack.dataFrom={SOURCE_NODE:-1,TARGET_NODE:0};OpenLayers.Layer.GML=OpenLayers.Class(OpenLayers.Layer.Vector,{loaded:false,format:null,formatOptions:null,initialize:function(name,url,options){var newArguments=[];
newArguments.push(name,options);
OpenLayers.Layer.Vector.prototype.initialize.apply(this,newArguments);
this.url=url
},setVisibility:function(visibility,noEvent){OpenLayers.Layer.Vector.prototype.setVisibility.apply(this,arguments);
if(this.visibility&&!this.loaded){this.loadGML()
}},moveTo:function(bounds,zoomChanged,minor){OpenLayers.Layer.Vector.prototype.moveTo.apply(this,arguments);
if(this.visibility&&!this.loaded){this.events.triggerEvent("loadstart");
this.loadGML()
}},loadGML:function(){if(!this.loaded){OpenLayers.Request.GET({url:this.url,success:this.requestSuccess,failure:this.requestFailure,scope:this});
this.loaded=true
}},setUrl:function(url){this.url=url;
this.destroyFeatures();
this.loaded=false;
this.events.triggerEvent("loadstart");
this.loadGML()
},requestSuccess:function(request){var doc=request.responseXML;
if(!doc||!doc.documentElement){doc=request.responseText
}var options={};
OpenLayers.Util.extend(options,this.formatOptions);
if(this.map&&!this.projection.equals(this.map.getProjectionObject())){options.externalProjection=this.projection;
options.internalProjection=this.map.getProjectionObject()
}var gml=this.format?new this.format(options):new OpenLayers.Format.GML(options);
this.addFeatures(gml.read(doc));
this.events.triggerEvent("loadend")
},requestFailure:function(request){OpenLayers.Console.userError(OpenLayers.i18n("errorLoadingGML",{url:this.url}));
this.events.triggerEvent("loadend")
},CLASS_NAME:"OpenLayers.Layer.GML"});OpenLayers.Style=OpenLayers.Class({name:null,title:null,description:null,layerName:null,isDefault:false,rules:null,context:null,defaultStyle:null,propertyStyles:null,initialize:function(style,options){this.rules=[];
this.setDefaultStyle(style||OpenLayers.Feature.Vector.style["default"]);
OpenLayers.Util.extend(this,options)
},destroy:function(){for(var i=0,len=this.rules.length;
i<len;
i++){this.rules[i].destroy();
this.rules[i]=null
}this.rules=null;
this.defaultStyle=null
},createSymbolizer:function(feature){var style=this.createLiterals(OpenLayers.Util.extend({},this.defaultStyle),feature);
var rules=this.rules;
var rule,context;
var elseRules=[];
var appliedRules=false;
for(var i=0,len=rules.length;
i<len;
i++){rule=rules[i];
var applies=rule.evaluate(feature);
if(applies){if(rule instanceof OpenLayers.Rule&&rule.elseFilter){elseRules.push(rule)
}else{appliedRules=true;
this.applySymbolizer(rule,style,feature)
}}}if(appliedRules==false&&elseRules.length>0){appliedRules=true;
for(var i=0,len=elseRules.length;
i<len;
i++){this.applySymbolizer(elseRules[i],style,feature)
}}if(rules.length>0&&appliedRules==false){style.display="none"
}else{style.display=""
}return style
},applySymbolizer:function(rule,style,feature){var symbolizerPrefix=feature.geometry?this.getSymbolizerPrefix(feature.geometry):OpenLayers.Style.SYMBOLIZER_PREFIXES[0];
var symbolizer=rule.symbolizer[symbolizerPrefix]||rule.symbolizer;
return this.createLiterals(OpenLayers.Util.extend(style,symbolizer),feature)
},createLiterals:function(style,feature){var context=this.context||feature.attributes||feature.data;
for(var i in this.propertyStyles){style[i]=OpenLayers.Style.createLiteral(style[i],context,feature)
}return style
},findPropertyStyles:function(){var propertyStyles={};
var style=this.defaultStyle;
this.addPropertyStyles(propertyStyles,style);
var rules=this.rules;
var symbolizer,value;
for(var i=0,len=rules.length;
i<len;
i++){var symbolizer=rules[i].symbolizer;
for(var key in symbolizer){value=symbolizer[key];
if(typeof value=="object"){this.addPropertyStyles(propertyStyles,value)
}else{this.addPropertyStyles(propertyStyles,symbolizer);
break
}}}return propertyStyles
},addPropertyStyles:function(propertyStyles,symbolizer){var property;
for(var key in symbolizer){property=symbolizer[key];
if(typeof property=="string"&&property.match(/\$\{\w+\}/)){propertyStyles[key]=true
}}return propertyStyles
},addRules:function(rules){this.rules=this.rules.concat(rules);
this.propertyStyles=this.findPropertyStyles()
},setDefaultStyle:function(style){this.defaultStyle=style;
this.propertyStyles=this.findPropertyStyles()
},getSymbolizerPrefix:function(geometry){var prefixes=OpenLayers.Style.SYMBOLIZER_PREFIXES;
for(var i=0,len=prefixes.length;
i<len;
i++){if(geometry.CLASS_NAME.indexOf(prefixes[i])!=-1){return prefixes[i]
}}},CLASS_NAME:"OpenLayers.Style"});
OpenLayers.Style.createLiteral=function(value,context,feature){if(typeof value=="string"&&value.indexOf("${")!=-1){value=OpenLayers.String.format(value,context,[feature]);
value=(isNaN(value)||!value)?value:parseFloat(value)
}return value
};
OpenLayers.Style.SYMBOLIZER_PREFIXES=["Point","Line","Polygon","Text"];OpenLayers.StyleMap=OpenLayers.Class({styles:null,extendDefault:true,initialize:function(style,options){this.styles={"default":new OpenLayers.Style(OpenLayers.Feature.Vector.style["default"]),select:new OpenLayers.Style(OpenLayers.Feature.Vector.style.select),temporary:new OpenLayers.Style(OpenLayers.Feature.Vector.style.temporary)};
if(style instanceof OpenLayers.Style){this.styles["default"]=style;
this.styles.select=style;
this.styles.temporary=style
}else{if(typeof style=="object"){for(var key in style){if(style[key] instanceof OpenLayers.Style){this.styles[key]=style[key]
}else{if(typeof style[key]=="object"){this.styles[key]=new OpenLayers.Style(style[key])
}else{this.styles["default"]=new OpenLayers.Style(style);
this.styles.select=new OpenLayers.Style(style);
this.styles.temporary=new OpenLayers.Style(style);
break
}}}}}OpenLayers.Util.extend(this,options)
},destroy:function(){for(var key in this.styles){this.styles[key].destroy()
}this.styles=null
},createSymbolizer:function(feature,intent){if(!feature){feature=new OpenLayers.Feature.Vector()
}if(!this.styles[intent]){intent="default"
}feature.renderIntent=intent;
var defaultSymbolizer={};
if(this.extendDefault&&intent!="default"){defaultSymbolizer=this.styles["default"].createSymbolizer(feature)
}return OpenLayers.Util.extend(defaultSymbolizer,this.styles[intent].createSymbolizer(feature))
},addUniqueValueRules:function(renderIntent,property,symbolizers,context){var rules=[];
for(var value in symbolizers){rules.push(new OpenLayers.Rule({symbolizer:symbolizers[value],context:context,filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:property,value:value})}))
}this.styles[renderIntent].addRules(rules)
},CLASS_NAME:"OpenLayers.StyleMap"});OpenLayers.Format=OpenLayers.Class({options:null,externalProjection:null,internalProjection:null,initialize:function(options){OpenLayers.Util.extend(this,options);
this.options=options
},destroy:function(){},read:function(data){OpenLayers.Console.userError(OpenLayers.i18n("readNotImplemented"))
},write:function(object){OpenLayers.Console.userError(OpenLayers.i18n("writeNotImplemented"))
},CLASS_NAME:"OpenLayers.Format"});OpenLayers.Format.JSON=OpenLayers.Class(OpenLayers.Format,{indent:"    ",space:" ",newline:"\n",level:0,pretty:false,initialize:function(options){OpenLayers.Format.prototype.initialize.apply(this,[options])
},read:function(json,filter){try{if(/^[\],:{}\s]*$/.test(json.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){var object=eval("("+json+")");
if(typeof filter==="function"){function walk(k,v){if(v&&typeof v==="object"){for(var i in v){if(v.hasOwnProperty(i)){v[i]=walk(i,v[i])
}}}return filter(k,v)
}object=walk("",object)
}return object
}}catch(e){}return null
},write:function(value,pretty){this.pretty=!!pretty;
var json=null;
var type=typeof value;
if(this.serialize[type]){json=this.serialize[type].apply(this,[value])
}return json
},writeIndent:function(){var pieces=[];
if(this.pretty){for(var i=0;
i<this.level;
++i){pieces.push(this.indent)
}}return pieces.join("")
},writeNewline:function(){return(this.pretty)?this.newline:""
},writeSpace:function(){return(this.pretty)?this.space:""
},serialize:{object:function(object){if(object==null){return"null"
}if(object.constructor==Date){return this.serialize.date.apply(this,[object])
}if(object.constructor==Array){return this.serialize.array.apply(this,[object])
}var pieces=["{"];
this.level+=1;
var key,keyJSON,valueJSON;
var addComma=false;
for(key in object){if(object.hasOwnProperty(key)){keyJSON=OpenLayers.Format.JSON.prototype.write.apply(this,[key,this.pretty]);
valueJSON=OpenLayers.Format.JSON.prototype.write.apply(this,[object[key],this.pretty]);
if(keyJSON!=null&&valueJSON!=null){if(addComma){pieces.push(",")
}pieces.push(this.writeNewline(),this.writeIndent(),keyJSON,":",this.writeSpace(),valueJSON);
addComma=true
}}}this.level-=1;
pieces.push(this.writeNewline(),this.writeIndent(),"}");
return pieces.join("")
},array:function(array){var json;
var pieces=["["];
this.level+=1;
for(var i=0,len=array.length;
i<len;
++i){json=OpenLayers.Format.JSON.prototype.write.apply(this,[array[i],this.pretty]);
if(json!=null){if(i>0){pieces.push(",")
}pieces.push(this.writeNewline(),this.writeIndent(),json)
}}this.level-=1;
pieces.push(this.writeNewline(),this.writeIndent(),"]");
return pieces.join("")
},string:function(string){var m={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};
if(/["\\\x00-\x1f]/.test(string)){return'"'+string.replace(/([\x00-\x1f\\"])/g,function(a,b){var c=m[b];
if(c){return c
}c=b.charCodeAt();
return"\\u00"+Math.floor(c/16).toString(16)+(c%16).toString(16)
})+'"'
}return'"'+string+'"'
},number:function(number){return isFinite(number)?String(number):"null"
},"boolean":function(bool){return String(bool)
},date:function(date){function format(number){return(number<10)?"0"+number:number
}return'"'+date.getFullYear()+"-"+format(date.getMonth()+1)+"-"+format(date.getDate())+"T"+format(date.getHours())+":"+format(date.getMinutes())+":"+format(date.getSeconds())+'"'
}},CLASS_NAME:"OpenLayers.Format.JSON"});OpenLayers.Control.MouseToolbar=OpenLayers.Class(OpenLayers.Control.MouseDefaults,{mode:null,buttons:null,direction:"vertical",buttonClicked:null,initialize:function(position,direction){OpenLayers.Control.prototype.initialize.apply(this,arguments);
this.position=new OpenLayers.Pixel(OpenLayers.Control.MouseToolbar.X,OpenLayers.Control.MouseToolbar.Y);
if(position){this.position=position
}if(direction){this.direction=direction
}this.measureDivs=[]
},destroy:function(){for(var btnId in this.buttons){var btn=this.buttons[btnId];
btn.map=null;
btn.events.destroy()
}OpenLayers.Control.MouseDefaults.prototype.destroy.apply(this,arguments)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
OpenLayers.Control.MouseDefaults.prototype.draw.apply(this,arguments);
this.buttons={};
var sz=new OpenLayers.Size(28,28);
var centered=new OpenLayers.Pixel(OpenLayers.Control.MouseToolbar.X,0);
this._addButton("zoombox","drag-rectangle-off.png","drag-rectangle-on.png",centered,sz,"Shift->Drag to zoom to area");
centered=centered.add((this.direction=="vertical"?0:sz.w),(this.direction=="vertical"?sz.h:0));
this._addButton("pan","panning-hand-off.png","panning-hand-on.png",centered,sz,"Drag the map to pan.");
centered=centered.add((this.direction=="vertical"?0:sz.w),(this.direction=="vertical"?sz.h:0));
this.switchModeTo("pan");
return this.div
},_addButton:function(id,img,activeImg,xy,sz,title){var imgLocation=OpenLayers.Util.getImagesLocation()+img;
var activeImgLocation=OpenLayers.Util.getImagesLocation()+activeImg;
var btn=OpenLayers.Util.createAlphaImageDiv("OpenLayers_Control_MouseToolbar_"+id,xy,sz,imgLocation,"absolute");
this.div.appendChild(btn);
btn.imgLocation=imgLocation;
btn.activeImgLocation=activeImgLocation;
btn.events=new OpenLayers.Events(this,btn,null,true);
btn.events.on({mousedown:this.buttonDown,mouseup:this.buttonUp,dblclick:OpenLayers.Event.stop,scope:this});
btn.action=id;
btn.title=title;
btn.alt=title;
btn.map=this.map;
this.buttons[id]=btn;
return btn
},buttonDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}this.buttonClicked=evt.element.action;
OpenLayers.Event.stop(evt)
},buttonUp:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}if(this.buttonClicked!=null){if(this.buttonClicked==evt.element.action){this.switchModeTo(evt.element.action)
}OpenLayers.Event.stop(evt);
this.buttonClicked=null
}},defaultDblClick:function(evt){this.switchModeTo("pan");
this.performedDrag=false;
var newCenter=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(newCenter,this.map.zoom+1);
OpenLayers.Event.stop(evt);
return false
},defaultMouseDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}this.mouseDragStart=evt.xy.clone();
this.performedDrag=false;
this.startViaKeyboard=false;
if(evt.shiftKey&&this.mode!="zoombox"){this.switchModeTo("zoombox");
this.startViaKeyboard=true
}else{if(evt.altKey&&this.mode!="measure"){this.switchModeTo("measure")
}else{if(!this.mode){this.switchModeTo("pan")
}}}switch(this.mode){case"zoombox":this.map.div.style.cursor="crosshair";
this.zoomBox=OpenLayers.Util.createDiv("zoomBox",this.mouseDragStart,null,null,"absolute","2px solid red");
this.zoomBox.style.backgroundColor="white";
this.zoomBox.style.filter="alpha(opacity=50)";
this.zoomBox.style.opacity="0.50";
this.zoomBox.style.fontSize="1px";
this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.viewPortDiv.appendChild(this.zoomBox);
this.performedDrag=true;
break;
case"measure":var distance="";
if(this.measureStart){var measureEnd=this.map.getLonLatFromViewPortPx(this.mouseDragStart);
distance=OpenLayers.Util.distVincenty(this.measureStart,measureEnd);
distance=Math.round(distance*100)/100;
distance=distance+"km";
this.measureStartBox=this.measureBox
}this.measureStart=this.map.getLonLatFromViewPortPx(this.mouseDragStart);
this.measureBox=OpenLayers.Util.createDiv(null,this.mouseDragStart.add(-2-parseInt(this.map.layerContainerDiv.style.left),-2-parseInt(this.map.layerContainerDiv.style.top)),null,null,"absolute");
this.measureBox.style.width="4px";
this.measureBox.style.height="4px";
this.measureBox.style.fontSize="1px";
this.measureBox.style.backgroundColor="red";
this.measureBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.layerContainerDiv.appendChild(this.measureBox);
if(distance){this.measureBoxDistance=OpenLayers.Util.createDiv(null,this.mouseDragStart.add(-2-parseInt(this.map.layerContainerDiv.style.left),2-parseInt(this.map.layerContainerDiv.style.top)),null,null,"absolute");
this.measureBoxDistance.innerHTML=distance;
this.measureBoxDistance.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.layerContainerDiv.appendChild(this.measureBoxDistance);
this.measureDivs.push(this.measureBoxDistance)
}this.measureBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;
this.map.layerContainerDiv.appendChild(this.measureBox);
this.measureDivs.push(this.measureBox);
break;
default:this.map.div.style.cursor="move";
break
}document.onselectstart=function(){return false
};
OpenLayers.Event.stop(evt)
},switchModeTo:function(mode){if(mode!=this.mode){if(this.mode&&this.buttons[this.mode]){OpenLayers.Util.modifyAlphaImageDiv(this.buttons[this.mode],null,null,null,this.buttons[this.mode].imgLocation)
}if(this.mode=="measure"&&mode!="measure"){for(var i=0,len=this.measureDivs.length;
i<len;
i++){if(this.measureDivs[i]){this.map.layerContainerDiv.removeChild(this.measureDivs[i])
}}this.measureDivs=[];
this.measureStart=null
}this.mode=mode;
if(this.buttons[mode]){OpenLayers.Util.modifyAlphaImageDiv(this.buttons[mode],null,null,null,this.buttons[mode].activeImgLocation)
}switch(this.mode){case"zoombox":this.map.div.style.cursor="crosshair";
break;
default:this.map.div.style.cursor="";
break
}}},leaveMode:function(){this.switchModeTo("pan")
},defaultMouseMove:function(evt){if(this.mouseDragStart!=null){switch(this.mode){case"zoombox":var deltaX=Math.abs(this.mouseDragStart.x-evt.xy.x);
var deltaY=Math.abs(this.mouseDragStart.y-evt.xy.y);
this.zoomBox.style.width=Math.max(1,deltaX)+"px";
this.zoomBox.style.height=Math.max(1,deltaY)+"px";
if(evt.xy.x<this.mouseDragStart.x){this.zoomBox.style.left=evt.xy.x+"px"
}if(evt.xy.y<this.mouseDragStart.y){this.zoomBox.style.top=evt.xy.y+"px"
}break;
default:var deltaX=this.mouseDragStart.x-evt.xy.x;
var deltaY=this.mouseDragStart.y-evt.xy.y;
var size=this.map.getSize();
var newXY=new OpenLayers.Pixel(size.w/2+deltaX,size.h/2+deltaY);
var newCenter=this.map.getLonLatFromViewPortPx(newXY);
this.map.setCenter(newCenter,null,true);
this.mouseDragStart=evt.xy.clone()
}this.performedDrag=true
}},defaultMouseUp:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return 
}switch(this.mode){case"zoombox":this.zoomBoxEnd(evt);
if(this.startViaKeyboard){this.leaveMode()
}break;
case"pan":if(this.performedDrag){this.map.setCenter(this.map.center)
}}document.onselectstart=null;
this.mouseDragStart=null;
this.map.div.style.cursor="default"
},defaultMouseOut:function(evt){if(this.mouseDragStart!=null&&OpenLayers.Util.mouseLeft(evt,this.map.div)){if(this.zoomBox){this.removeZoomBox();
if(this.startViaKeyboard){this.leaveMode()
}}this.mouseDragStart=null;
this.map.div.style.cursor="default"
}},defaultClick:function(evt){if(this.performedDrag){this.performedDrag=false;
return false
}},CLASS_NAME:"OpenLayers.Control.MouseToolbar"});
OpenLayers.Control.MouseToolbar.X=6;
OpenLayers.Control.MouseToolbar.Y=300;OpenLayers.Control.NavToolbar=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);
this.addControls([new OpenLayers.Control.Navigation(),new OpenLayers.Control.ZoomBox()])
},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);
this.activateControl(this.controls[0]);
return div
},CLASS_NAME:"OpenLayers.Control.NavToolbar"});OpenLayers.Control.ZoomIn=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){this.map.zoomIn()
},CLASS_NAME:"OpenLayers.Control.ZoomIn"});OpenLayers.Control.ZoomOut=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){this.map.zoomOut()
},CLASS_NAME:"OpenLayers.Control.ZoomOut"});OpenLayers.Control.EditingToolbar=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(layer,options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);
this.addControls([new OpenLayers.Control.Navigation()]);
var controls=[new OpenLayers.Control.DrawFeature(layer,OpenLayers.Handler.Point,{displayClass:"olControlDrawFeaturePoint"}),new OpenLayers.Control.DrawFeature(layer,OpenLayers.Handler.Path,{displayClass:"olControlDrawFeaturePath"}),new OpenLayers.Control.DrawFeature(layer,OpenLayers.Handler.Polygon,{displayClass:"olControlDrawFeaturePolygon"})];
for(var i=0,len=controls.length;
i<len;
i++){controls[i].featureAdded=function(feature){feature.state=OpenLayers.State.INSERT
}
}this.addControls(controls)
},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);
this.activateControl(this.controls[0]);
return div
},CLASS_NAME:"OpenLayers.Control.EditingToolbar"});OpenLayers.Lang={code:null,defaultCode:"en",getCode:function(){if(!OpenLayers.Lang.code){OpenLayers.Lang.setCode()
}return OpenLayers.Lang.code
},setCode:function(code){var lang;
if(!code){code=(OpenLayers.Util.getBrowserName()=="msie")?navigator.userLanguage:navigator.language
}var parts=code.split("-");
parts[0]=parts[0].toLowerCase();
if(typeof OpenLayers.Lang[parts[0]]=="object"){lang=parts[0]
}if(parts[1]){var testLang=parts[0]+"-"+parts[1].toUpperCase();
if(typeof OpenLayers.Lang[testLang]=="object"){lang=testLang
}}if(!lang){OpenLayers.Console.warn("Failed to find OpenLayers.Lang."+parts.join("-")+" dictionary, falling back to default language");
lang=OpenLayers.Lang.defaultCode
}OpenLayers.Lang.code=lang
},translate:function(key,context){var dictionary=OpenLayers.Lang[OpenLayers.Lang.getCode()];
var message=dictionary[key];
if(!message){message=key
}if(context){message=OpenLayers.String.format(message,context)
}return message
}};
OpenLayers.i18n=OpenLayers.Lang.translate;OpenLayers.Lang.en={unhandledRequest:"Unhandled request return ${statusText}",permalink:"Permalink",overlays:"Overlays",baseLayer:"Base Layer",sameProjection:"The overview map only works when it is in the same projection as the main map",readNotImplemented:"Read not implemented.",writeNotImplemented:"Write not implemented.",noFID:"Can't update a feature for which there is no FID.",errorLoadingGML:"Error in loading GML file ${url}",browserNotSupported:"Your browser does not support vector rendering. Currently supported renderers are:\n${renderers}",componentShouldBe:"addFeatures : component should be an ${geomType}",getFeatureError:"getFeatureFromEvent called on layer with no renderer. This usually means you destroyed a layer, but not some handler which is associated with it.",minZoomLevelError:"The minZoomLevel property is only intended for use with the FixedZoomLevels-descendent layers. That this wfs layer checks for minZoomLevel is a relic of thepast. We cannot, however, remove it without possibly breaking OL based applications that may depend on it. Therefore we are deprecating it -- the minZoomLevel check below will be removed at 3.0. Please instead use min/max resolution setting as described here: http://trac.openlayers.org/wiki/SettingZoomLevels",commitSuccess:"WFS Transaction: SUCCESS ${response}",commitFailed:"WFS Transaction: FAILED ${response}",googleWarning:"The Google Layer was unable to load correctly.<br><br>To get rid of this message, select a new BaseLayer in the layer switcher in the upper-right corner.<br><br>Most likely, this is because the Google Maps library script was either not included, or does not contain the correct API key for your site.<br><br>Developers: For help getting this working correctly, <a href='http://trac.openlayers.org/wiki/Google' target='_blank'>click here</a>",getLayerWarning:"The ${layerType} Layer was unable to load correctly.<br><br>To get rid of this message, select a new BaseLayer in the layer switcher in the upper-right corner.<br><br>Most likely, this is because the ${layerLib} library script was not correctly included.<br><br>Developers: For help getting this working correctly, <a href='http://trac.openlayers.org/wiki/${layerLib}' target='_blank'>click here</a>",scale:"Scale = 1 : ${scaleDenom}",layerAlreadyAdded:"You tried to add the layer: ${layerName} to the map, but it has already been added",reprojectDeprecated:"You are using the 'reproject' option on the ${layerName} layer. This option is deprecated: its use was designed to support displaying data over commercial basemaps, but that functionality should now be achieved by using Spherical Mercator support. More information is available from http://trac.openlayers.org/wiki/SphericalMercator.",methodDeprecated:"This method has been deprecated and will be removed in 3.0. Please use ${newMethod} instead.",boundsAddError:"You must pass both x and y values to the add function.",lonlatAddError:"You must pass both lon and lat values to the add function.",pixelAddError:"You must pass both x and y values to the add function.",unsupportedGeometryType:"Unsupported geometry type: ${geomType}",pagePositionFailed:"OpenLayers.Util.pagePosition failed: element with id ${elemId} may be misplaced.",end:"",filterEvaluateNotImplemented:"evaluate is not implemented for this filter type."};var initZoom=function(){if(window.maps){for(var map in window.maps){if(map&&window.maps[map]){window.maps[map].zoomToExtent(window.maps[map].currentExtent)
}}}};
OpenLayers.Event.observe(window,"load",initZoom);
OpenLayers.Map=OpenLayers.Class({Z_INDEX_BASE:{BaseLayer:100,Overlay:325,Feature:725,Popup:750,Control:1000},EVENT_TYPES:["preaddlayer","addlayer","removelayer","changelayer","movestart","move","moveend","zoomend","popupopen","popupclose","addmarker","removemarker","clearmarkers","mouseover","mouseout","mousemove","dragstart","drag","dragend","changebaselayer"],id:null,fractionalZoom:true,events:null,div:null,dragging:false,size:null,viewPortDiv:null,layerContainerOrigin:null,layerContainerDiv:null,layers:null,controls:null,popups:null,baseLayer:null,center:null,resolution:null,zoom:0,panRatio:1.5,viewRequestID:0,tileSize:null,projection:"EPSG:4326",units:"degrees",resolutions:null,maxResolution:1.40625,minResolution:null,maxScale:null,minScale:null,maxExtent:null,minExtent:null,restrictedExtent:null,numZoomLevels:16,theme:null,displayProjection:null,fallThrough:true,panTween:null,eventListeners:null,panMethod:OpenLayers.Easing.Expo.easeOut,paddingForPopups:null,currentExtent:null,mfAjaxCompId:null,initialize:function(div,options){this.tileSize=new OpenLayers.Size(OpenLayers.Map.TILE_WIDTH,OpenLayers.Map.TILE_HEIGHT);
this.maxExtent=new OpenLayers.Bounds(-180,-90,180,90);
this.center=new OpenLayers.LonLat(0,0);
this.paddingForPopups=new OpenLayers.Bounds(15,15,15,15);
OpenLayers.Util.extend(this,options);
this.div=OpenLayers.Util.getElement(div);
if(typeof div=="string"){div=div.split(":")[1]
}else{div=div.id
}if(div.indexOf(":")!=-1){div=div.split(":")[1]
}this.viewPortDiv=OpenLayers.Util.getElement(div+"_MapFaces_Viewport");
this.layerContainerDiv=OpenLayers.Util.getElement(div+"_MapFaces_Container");
this.events=new OpenLayers.Events(this,this.div,this.EVENT_TYPES,this.fallThrough,{includeXY:true});
this.popups=[];
this.layers=[];
this.initResolutions();
var size=this.getSize();
this.center=this.getLonLatFromViewPortPx(new OpenLayers.Pixel(size.w/2,size.h/2));
this.updateSize();
if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)
}this.events.register("movestart",this,this.updateSize);
if(OpenLayers.String.contains(navigator.appName,"Microsoft")){this.events.register("resize",this,this.updateSize)
}else{this.updateSizeDestroy=OpenLayers.Function.bind(this.updateSize,this);
OpenLayers.Event.observe(window,"resize",this.updateSizeDestroy)
}if(this.controls==null){this.controls=[];
if(OpenLayers.Control!=null){this.controls.push(new OpenLayers.Control.Navigation());
this.controls.push(new OpenLayers.Control.PanZoom())
}else{}}this.controls.push(new OpenLayers.Control.MouseWheelDefaults());
this.controls.push(new OpenLayers.Control.ArgParser());
this.controls.push(new OpenLayers.Control.Attribution());
for(var i=0;
i<this.controls.length;
i++){this.addControlToMap(this.controls[i])
}this.unloadDestroy=OpenLayers.Function.bind(this.destroy,this);
OpenLayers.Event.observe(window,"unload",this.unloadDestroy);
this.events.register("moveend",null,this.sendAjaxRequest);
this.events.register("moveend",null,this.setCurrentExtent)
},sendAjaxRequest:function(parameters){var window=this.getSize();
var badextent=false;
if(window.w==100&&window.h==100){badextent=true
}var bbox=this.getExtent().toBBOX();
var goodParameters=true;
if(parameters.type=="moveend"){var parameters={"synchronized":"true",refresh:this.layersName,bbox:bbox,window:window.w+","+window.h,render:"true","org.mapfaces.ajax.LAYER_CONTAINER_STYLE":"top:"+(-parseInt(this.layerContainerDiv.style.top))+"px;left:"+(-parseInt(this.layerContainerDiv.style.left)+"px;")};
if(!this.layersName||badextent){goodParameters=false
}}parameters[this.mfAjaxCompId]=this.mfAjaxCompId;
if(goodParameters){A4J.AJAX.Submit(this.mfRequestId,this.mfFormId,null,{control:this,single:true,parameters:parameters,actionUrl:window.location})
}},getCurrentExtent:function(){return this.currentExtent
},setCurrentExtent:function(){this.currentExtent=this.getExtent()
},initResolutions:function(){var props=new Array("projection","units","scales","resolutions","maxScale","minScale","maxResolution","minResolution","minExtent","maxExtent","numZoomLevels","maxZoomLevel");
if(this.options==null){this.options={}
}var confProps={};
for(var i=0;
i<props.length;
i++){var property=props[i];
confProps[property]=this.options[property]||this[property]
}if(this.options.minScale!=null&&this.options.maxScale!=null&&this.options.scales==null){confProps.scales=null
}if(this.options.minResolution!=null&&this.options.maxResolution!=null&&this.options.resolutions==null){confProps.resolutions=null
}if((!confProps.numZoomLevels)&&(confProps.maxZoomLevel)){confProps.numZoomLevels=confProps.maxZoomLevel+1
}if((confProps.scales!=null)||(confProps.resolutions!=null)){if(confProps.scales!=null){confProps.resolutions=[];
for(var i=0;
i<confProps.scales.length;
i++){var scale=confProps.scales[i];
confProps.resolutions[i]=OpenLayers.Util.getResolutionFromScale(scale,confProps.units)
}}confProps.numZoomLevels=confProps.resolutions.length
}else{if(confProps.minScale){confProps.maxResolution=OpenLayers.Util.getResolutionFromScale(confProps.minScale,confProps.units)
}else{if(confProps.maxResolution=="auto"){var viewSize=this.getSize();
var wRes=confProps.maxExtent.getWidth()/viewSize.w;
var hRes=confProps.maxExtent.getHeight()/viewSize.h;
confProps.maxResolution=Math.max(wRes,hRes)
}}if(confProps.maxScale!=null){confProps.minResolution=OpenLayers.Util.getResolutionFromScale(confProps.maxScale,confProps.units)
}else{if((confProps.minResolution=="auto")&&(confProps.minExtent!=null)){var viewSize=this.getSize();
var wRes=confProps.minExtent.getWidth()/viewSize.w;
var hRes=confProps.minExtent.getHeight()/viewSize.h;
confProps.minResolution=Math.max(wRes,hRes)
}}if(confProps.minResolution!=null&&this.options.numZoomLevels==undefined){var ratio=confProps.maxResolution/confProps.minResolution;
confProps.numZoomLevels=Math.floor(Math.log(ratio)/Math.log(2))+1
}confProps.resolutions=new Array(confProps.numZoomLevels);
var base=2;
if(typeof confProps.minResolution=="number"&&confProps.numZoomLevels>1){base=Math.pow((confProps.maxResolution/confProps.minResolution),(1/(confProps.numZoomLevels-1)))
}for(var i=0;
i<confProps.numZoomLevels;
i++){var res=confProps.maxResolution/Math.pow(base,i);
confProps.resolutions[i]=res
}}confProps.resolutions.sort(function(a,b){return(b-a)
});
this.resolutions=confProps.resolutions;
this.maxResolution=confProps.resolutions[0];
var lastIndex=confProps.resolutions.length-1;
this.minResolution=confProps.resolutions[lastIndex];
this.scales=[];
for(var i=0;
i<confProps.resolutions.length;
i++){this.scales[i]=OpenLayers.Util.getScaleFromResolution(confProps.resolutions[i],confProps.units)
}this.minScale=this.scales[0];
this.maxScale=this.scales[this.scales.length-1];
this.numZoomLevels=confProps.numZoomLevels
},unloadDestroy:null,updateSizeDestroy:null,destroy:function(){if(!this.unloadDestroy){return false
}OpenLayers.Event.stopObserving(window,"unload",this.unloadDestroy);
this.unloadDestroy=null;
if(this.updateSizeDestroy){OpenLayers.Event.stopObserving(window,"resize",this.updateSizeDestroy)
}else{this.events.unregister("resize",this,this.updateSize)
}this.paddingForPopups=null;
if(this.controls!=null){for(var i=this.controls.length-1;
i>=0;
--i){this.controls[i].destroy()
}this.controls=null
}if(this.layers!=null){for(var i=this.layers.length-1;
i>=0;
--i){this.layers[i].destroy(false)
}this.layers=null
}if(this.viewPortDiv){this.div.removeChild(this.viewPortDiv)
}this.viewPortDiv=null;
if(this.eventListeners){this.events.un(this.eventListeners);
this.eventListeners=null
}this.events.destroy();
this.events=null
},setOptions:function(options){OpenLayers.Util.extend(this,options)
},getTileSize:function(){return this.tileSize
},getBy:function(array,property,match){var test=(typeof match.test=="function");
var found=OpenLayers.Array.filter(this[array],function(item){return item[property]==match||(test&&match.test(item[property]))
});
return found
},getLayersBy:function(property,match){return this.getBy("layers",property,match)
},getLayersByName:function(match){return this.getLayersBy("name",match)
},getLayersByClass:function(match){return this.getLayersBy("CLASS_NAME",match)
},getControlsBy:function(property,match){return this.getBy("controls",property,match)
},getControlsByClass:function(match){return this.getControlsBy("CLASS_NAME",match)
},getLayer:function(id){var foundLayer=null;
for(var i=0;
i<this.layers.length;
i++){var layer=this.layers[i];
if(layer.id==id){foundLayer=layer;
break
}}return foundLayer
},setLayerZIndex:function(layer,zIdx){layer.setZIndex(this.Z_INDEX_BASE[layer.isBaseLayer?"BaseLayer":"Overlay"]+zIdx*5)
},resetLayersZIndex:function(){for(var i=0;
i<this.layers.length;
i++){var layer=this.layers[i];
this.setLayerZIndex(layer,i)
}},addLayer:function(layer){for(var i=0;
i<this.layers.length;
i++){if(this.layers[i]==layer){var msg=OpenLayers.i18n("layerAlreadyAdded",{layerName:layer.name});
OpenLayers.Console.warn(msg);
return false
}}this.events.triggerEvent("preaddlayer",{layer:layer});
layer.div.className="olLayerDiv";
layer.div.style.overflow="";
this.setLayerZIndex(layer,this.layers.length);
if(layer.isFixed){this.viewPortDiv.appendChild(layer.div)
}else{this.layerContainerDiv.appendChild(layer.div)
}this.layers.push(layer);
layer.setMap(this);
if(layer.isBaseLayer){if(this.baseLayer==null){this.setBaseLayer(layer)
}else{layer.setVisibility(false)
}}else{layer.redraw()
}this.events.triggerEvent("addlayer",{layer:layer})
},addLayers:function(layers){for(var i=0;
i<layers.length;
i++){this.addLayer(layers[i])
}},removeLayer:function(layer,setNewBaseLayer){if(setNewBaseLayer==null){setNewBaseLayer=true
}if(layer.isFixed){this.viewPortDiv.removeChild(layer.div)
}else{this.layerContainerDiv.removeChild(layer.div)
}OpenLayers.Util.removeItem(this.layers,layer);
layer.removeMap(this);
layer.map=null;
if(this.baseLayer==layer){this.baseLayer=null;
if(setNewBaseLayer){for(var i=0;
i<this.layers.length;
i++){var iLayer=this.layers[i];
if(iLayer.isBaseLayer){this.setBaseLayer(iLayer);
break
}}}}this.resetLayersZIndex();
this.events.triggerEvent("removelayer",{layer:layer})
},getNumLayers:function(){return this.layers.length
},getLayerIndex:function(layer){return OpenLayers.Util.indexOf(this.layers,layer)
},setLayerIndex:function(layer,idx){var base=this.getLayerIndex(layer);
if(idx<0){idx=0
}else{if(idx>this.layers.length){idx=this.layers.length
}}if(base!=idx){this.layers.splice(base,1);
this.layers.splice(idx,0,layer);
for(var i=0;
i<this.layers.length;
i++){this.setLayerZIndex(this.layers[i],i)
}this.events.triggerEvent("changelayer",{layer:layer,property:"order"})
}},raiseLayer:function(layer,delta){var idx=this.getLayerIndex(layer)+delta;
this.setLayerIndex(layer,idx)
},setBaseLayer:function(newBaseLayer){var oldExtent=null;
if(this.baseLayer){oldExtent=this.baseLayer.getExtent()
}if(newBaseLayer!=this.baseLayer){if(OpenLayers.Util.indexOf(this.layers,newBaseLayer)!=-1){if(this.baseLayer!=null){this.baseLayer.setVisibility(false)
}this.baseLayer=newBaseLayer;
this.viewRequestID++;
this.baseLayer.visibility=true;
var center=this.getCenter();
if(center!=null){var newCenter=(oldExtent)?oldExtent.getCenterLonLat():center;
var newZoom=(oldExtent)?this.getZoomForExtent(oldExtent,true):this.getZoomForResolution(this.resolution,true);
this.setCenter(newCenter,newZoom,false,true)
}this.events.triggerEvent("changebaselayer",{layer:this.baseLayer})
}}},addControl:function(control,px){this.controls.push(control);
this.addControlToMap(control,px)
},addControlToMap:function(control,px){control.outsideViewport=(control.div!=null);
if(this.displayProjection&&!control.displayProjection){control.displayProjection=this.displayProjection
}control.setMap(this);
var div=control.draw(px);
if(div){if(!control.outsideViewport){div.style.zIndex=this.Z_INDEX_BASE.Control+this.controls.length;
this.viewPortDiv.appendChild(div)
}}},getControl:function(id){var returnControl=null;
for(var i=0;
i<this.controls.length;
i++){var control=this.controls[i];
if(control.id==id){returnControl=control;
break
}}return returnControl
},removeControl:function(control){if((control)&&(control==this.getControl(control.id))){if(control.div&&(control.div.parentNode==this.viewPortDiv)){this.viewPortDiv.removeChild(control.div)
}OpenLayers.Util.removeItem(this.controls,control)
}},addPopup:function(popup,exclusive){if(exclusive){for(var i=this.popups.length-1;
i>=0;
--i){this.removePopup(this.popups[i])
}}popup.map=this;
this.popups.push(popup);
var popupDiv=popup.draw();
if(popupDiv){popupDiv.style.zIndex=this.Z_INDEX_BASE.Popup+this.popups.length;
this.layerContainerDiv.appendChild(popupDiv)
}},removePopup:function(popup){OpenLayers.Util.removeItem(this.popups,popup);
if(popup.div){try{this.layerContainerDiv.removeChild(popup.div)
}catch(e){}}popup.map=null
},getSize:function(){var size=null;
if(this.size!=null){size=this.size.clone()
}return size
},updateSize:function(){this.events.element.offsets=null;
var newSize=this.getCurrentSize();
var oldSize=this.getSize();
if(oldSize==null){this.size=oldSize=newSize
}if(!newSize.equals(oldSize)){this.size=newSize;
if(this!=null){var center=new OpenLayers.Pixel(newSize.w/2,newSize.h/2);
var centerLL=this.getLonLatFromViewPortPx(center);
var zoom=this.getZoom();
this.zoom=null;
if(this.getCurrentExtent()!=null){this.zoomToExtent(this.getCurrentExtent())
}else{this.setCenter(this.getCenter(),zoom)
}}}},getCurrentSize:function(){var size=new OpenLayers.Size(this.div.clientWidth,this.div.clientHeight);
if(size.w==0&&size.h==0||isNaN(size.w)&&isNaN(size.h)){var dim=OpenLayers.Element.getDimensions(this.div);
size.w=dim.width;
size.h=dim.height
}if(size.w==0&&size.h==0||isNaN(size.w)&&isNaN(size.h)){size.w=parseInt(this.div.style.width);
size.h=parseInt(this.div.style.height)
}return size
},calculateBounds:function(center,resolution){var extent=null;
if(center==null){center=this.getCenter()
}if(resolution==null){resolution=this.getResolution()
}if((center!=null)&&(resolution!=null)){var size=this.getSize();
var w_deg=size.w*resolution;
var h_deg=size.h*resolution;
extent=new OpenLayers.Bounds(center.lon-w_deg/2,center.lat-h_deg/2,center.lon+w_deg/2,center.lat+h_deg/2)
}return extent
},getCenter:function(){return this.center
},getZoom:function(){return this.zoom
},pan:function(dx,dy,options){options=OpenLayers.Util.applyDefaults(options,{animate:true,dragging:false});
var centerPx=this.getViewPortPxFromLonLat(this.getCenter());
var newCenterPx=centerPx.add(dx,dy);
if(!options.dragging||!newCenterPx.equals(centerPx)){var newCenterLonLat=this.getLonLatFromViewPortPx(newCenterPx);
if(options.animate){this.panTo(newCenterLonLat)
}else{this.setCenter(newCenterLonLat,null,options.dragging)
}}},panTo:function(lonlat){if(this.panMethod&&this.getExtent().containsLonLat(lonlat)){if(!this.panTween){this.panTween=new OpenLayers.Tween(this.panMethod)
}var center=this.getCenter();
if(lonlat.lon==center.lon&&lonlat.lat==center.lat){return 
}var from={lon:center.lon,lat:center.lat};
var to={lon:lonlat.lon,lat:lonlat.lat};
this.panTween.start(from,to,50,{callbacks:{start:OpenLayers.Function.bind(function(lonlat){this.events.triggerEvent("movestart")
},this),eachStep:OpenLayers.Function.bind(function(lonlat){lonlat=new OpenLayers.LonLat(lonlat.lon,lonlat.lat);
this.moveTo(lonlat,this.zoom,{dragging:true,noEvent:true})
},this),done:OpenLayers.Function.bind(function(lonlat){lonlat=new OpenLayers.LonLat(lonlat.lon,lonlat.lat);
this.moveTo(lonlat,this.zoom,{noEvent:true});
this.events.triggerEvent("moveend")
},this)}})
}else{this.setCenter(lonlat)
}},setCenter:function(lonlat,zoom,dragging,forceZoomChange){this.moveTo(lonlat,zoom,{dragging:dragging,forceZoomChange:forceZoomChange,caller:"setCenter"})
},moveTo:function(lonlat,zoom,options){if(!options){options={}
}var dragging=options.dragging;
var forceZoomChange=options.forceZoomChange;
var noEvent=options.noEvent;
if(this.panTween&&options.caller=="setCenter"){this.panTween.stop()
}if(!this.center&&!this.isValidLonLat(lonlat)){lonlat=this.maxExtent.getCenterLonLat()
}if(this.restrictedExtent!=null){if(lonlat==null){lonlat=this.getCenter()
}if(zoom==null){zoom=this.getZoom()
}var resolution=this.getResolutionForZoom(zoom);
var extent=this.calculateBounds(lonlat,resolution);
if(!this.restrictedExtent.containsBounds(extent)){var maxCenter=this.restrictedExtent.getCenterLonLat();
if(extent.getWidth()>this.restrictedExtent.getWidth()){lonlat=new OpenLayers.LonLat(maxCenter.lon,lonlat.lat)
}else{if(extent.left<this.restrictedExtent.left){lonlat=lonlat.add(this.restrictedExtent.left-extent.left,0)
}else{if(extent.right>this.restrictedExtent.right){lonlat=lonlat.add(this.restrictedExtent.right-extent.right,0)
}}}if(extent.getHeight()>this.restrictedExtent.getHeight()){lonlat=new OpenLayers.LonLat(lonlat.lon,maxCenter.lat)
}else{if(extent.bottom<this.restrictedExtent.bottom){lonlat=lonlat.add(0,this.restrictedExtent.bottom-extent.bottom)
}else{if(extent.top>this.restrictedExtent.top){lonlat=lonlat.add(0,this.restrictedExtent.top-extent.top)
}}}}}var zoomChanged=forceZoomChange||((this.isValidZoomLevel(zoom))&&(zoom!=this.getZoom()));
var centerChanged=(this.isValidLonLat(lonlat))&&(!lonlat.equals(this.center));
if(zoomChanged||centerChanged||!dragging){if(!this.dragging&&!noEvent){this.events.triggerEvent("movestart")
}if(centerChanged){if((!zoomChanged)&&(this.center)){this.centerLayerContainer(lonlat)
}this.center=lonlat.clone()
}if((zoomChanged)||(this.layerContainerOrigin==null)){this.layerContainerOrigin=this.center.clone();
this.layerContainerDiv.style.left="0px";
this.layerContainerDiv.style.top="0px"
}if(zoomChanged){this.zoom=zoom;
this.resolution=this.getResolutionForZoom(zoom);
this.viewRequestID++
}var bounds=this.getExtent();
bounds=this.getExtent();
for(var i=0;
i<this.layers.length;
i++){var layer=this.layers[i];
if(!layer.isBaseLayer){var inRange=layer.calculateInRange();
if(layer.inRange!=inRange){layer.inRange=inRange;
if(!inRange){layer.display(false)
}this.events.triggerEvent("changelayer",{layer:layer,property:"visibility"})
}if(inRange&&layer.visibility){layer.moveTo(bounds,zoomChanged,dragging)
}}}if(zoomChanged){for(var i=0;
i<this.popups.length;
i++){this.popups[i].updatePosition()
}}this.events.triggerEvent("move");
if(zoomChanged){this.events.triggerEvent("zoomend")
}}if(!dragging&&!noEvent){this.events.triggerEvent("moveend")
}this.dragging=!!dragging
},centerLayerContainer:function(lonlat){var originPx=this.getViewPortPxFromLonLat(this.layerContainerOrigin);
var newPx=this.getViewPortPxFromLonLat(lonlat);
if((originPx!=null)&&(newPx!=null)){this.layerContainerDiv.style.left=Math.round(originPx.x-newPx.x)+"px";
this.layerContainerDiv.style.top=Math.round(originPx.y-newPx.y)+"px"
}},isValidZoomLevel:function(zoomLevel){return((zoomLevel!=null)&&(zoomLevel>=0)&&(zoomLevel<this.getNumZoomLevels()))
},isValidLonLat:function(lonlat){var valid=false;
if(lonlat!=null){var maxExtent=this.getMaxExtent();
valid=maxExtent.containsLonLat(lonlat)
}return valid
},getProjection:function(){var projection=this.getProjectionObject();
return projection?projection.getCode():null
},getProjectionObject:function(){var projection=null;
if(this.baseLayer!=null){projection=this.baseLayer.projection
}else{projection=this.projection
}return projection
},getMaxResolution:function(){var maxResolution=null;
if(this.baseLayer!=null){maxResolution=this.baseLayer.maxResolution
}else{maxResolution=this.maxResolution
}return maxResolution
},getMaxExtent:function(){var maxExtent=null;
if(this.baseLayer!=null){maxExtent=this.baseLayer.maxExtent
}else{maxExtent=this.maxExtent
}return maxExtent
},getNumZoomLevels:function(){var numZoomLevels=null;
if(this.baseLayer!=null){numZoomLevels=this.baseLayer.numZoomLevels
}else{numZoomLevels=this.numZoomLevels
}return numZoomLevels
},getExtent:function(){var extent=null;
if(this.baseLayer!=null){extent=this.baseLayer.getExtent()
}else{extent=this.calculateBounds()
}return extent
},getResolution:function(){var resolution=null;
if(this.baseLayer!=null){resolution=this.baseLayer.getResolution()
}else{var zoom=this.getZoom();
resolution=this.getResolutionForZoom(zoom)
}return resolution
},getUnits:function(){var units=null;
if(this.baseLayer!=null){units=this.baseLayer.units
}else{units=this.units
}return units
},getScale:function(){var scale=null;
if(this.baseLayer!=null){var res=this.getResolution();
var units=this.baseLayer.units;
scale=OpenLayers.Util.getScaleFromResolution(res,units)
}else{var res1=this.getResolution();
var units1=this.units;
scale=OpenLayers.Util.getScaleFromResolution(res1,units1)
}return scale
},getZoomForExtent:function(extent,closest){var viewSize=this.getSize();
var idealResolution=Math.max(extent.getWidth()/viewSize.w,extent.getHeight()/viewSize.h);
return this.getZoomForResolution(idealResolution,closest)
},getResolutionForZoom:function(zoom){zoom=Math.max(0,Math.min(zoom,this.resolutions.length-1));
var resolution;
if(this.fractionalZoom){var low=Math.floor(zoom);
var high=Math.ceil(zoom);
resolution=this.resolutions[high]+((zoom-low)*(this.resolutions[low]-this.resolutions[high]))
}else{resolution=this.resolutions[Math.round(zoom)]
}return resolution
},getZoomForResolution:function(resolution,closest){var zoom;
if(this.fractionalZoom){var lowZoom=0;
var highZoom=this.resolutions.length-1;
var highRes=this.resolutions[lowZoom];
var lowRes=this.resolutions[highZoom];
var res;
for(var i=0;
i<this.resolutions.length;
++i){res=this.resolutions[i];
if(res>=resolution){highRes=res;
lowZoom=i
}if(res<=resolution){lowRes=res;
highZoom=i;
break
}}var dRes=highRes-lowRes;
if(dRes>0){zoom=lowZoom+((resolution-lowRes)/dRes)
}else{zoom=lowZoom
}}else{var diff;
var minDiff=Number.POSITIVE_INFINITY;
for(var i=0;
i<this.resolutions.length;
i++){if(closest){diff=Math.abs(this.resolutions[i]-resolution);
if(diff>minDiff){break
}minDiff=diff
}else{if(this.resolutions[i]<resolution){break
}}}zoom=Math.max(0,i-1)
}return zoom
},zoomTo:function(zoom){if(this.isValidZoomLevel(zoom)){this.setCenter(null,zoom)
}},zoomIn:function(){this.zoomTo(this.getZoom()+1)
},zoomOut:function(){this.zoomTo(this.getZoom()-1)
},zoomToExtent:function(bounds){var center=bounds.getCenterLonLat();
if(this.wrapDateLine){var maxExtent=this.getMaxExtent();
bounds=bounds.clone();
while(bounds.right<bounds.left){bounds.right+=maxExtent.getWidth()
}center=bounds.getCenterLonLat().wrapDateLine(maxExtent)
}this.setCenter(center,this.getZoomForExtent(bounds))
},zoomToMaxExtent:function(){this.zoomToExtent(this.getMaxExtent())
},zoomToScale:function(scale){var res=OpenLayers.Util.getResolutionFromScale(scale,this.units);
var size=this.getSize();
var w_deg=size.w*res;
var h_deg=size.h*res;
var center=this.getCenter();
var extent=new OpenLayers.Bounds(center.lon-w_deg/2,center.lat-h_deg/2,center.lon+w_deg/2,center.lat+h_deg/2);
this.zoomToExtent(extent)
},getLonLatFromViewPortPx:function(viewPortPx){var lonlat=null;
if(viewPortPx!=null){var size=this.getSize();
var center=this.getCenter();
if(center){var res=this.getResolution();
var delta_x=viewPortPx.x-(size.w/2);
var delta_y=viewPortPx.y-(size.h/2);
lonlat=new OpenLayers.LonLat(center.lon+delta_x*res,center.lat-delta_y*res)
}}return lonlat
},getViewPortPxFromLonLat:function(lonlat){var px=null;
if(lonlat!=null){var resolution=this.getResolution();
var extent=this.getExtent();
px=new OpenLayers.Pixel((1/resolution*(lonlat.lon-extent.left)),(1/resolution*(extent.top-lonlat.lat)))
}return px
},getLonLatFromPixel:function(px){return this.getLonLatFromViewPortPx(px)
},getPixelFromLonLat:function(lonlat){var px=this.getViewPortPxFromLonLat(lonlat);
px.x=Math.round(px.x);
px.y=Math.round(px.y);
return px
},getViewPortPxFromLayerPx:function(layerPx){var viewPortPx=null;
if(layerPx!=null){var dX=parseInt(this.layerContainerDiv.style.left);
var dY=parseInt(this.layerContainerDiv.style.top);
viewPortPx=layerPx.add(dX,dY)
}return viewPortPx
},getLayerPxFromViewPortPx:function(viewPortPx){var layerPx=null;
if(viewPortPx!=null){var dX=-parseInt(this.layerContainerDiv.style.left);
var dY=-parseInt(this.layerContainerDiv.style.top);
layerPx=viewPortPx.add(dX,dY);
if(isNaN(layerPx.x)||isNaN(layerPx.y)){layerPx=null
}}return layerPx
},getLonLatFromLayerPx:function(px){px=this.getViewPortPxFromLayerPx(px);
return this.getLonLatFromViewPortPx(px)
},getLayerPxFromLonLat:function(lonlat){var px=this.getPixelFromLonLat(lonlat);
return this.getLayerPxFromViewPortPx(px)
},CLASS_NAME:"OpenLayers.Map"});
OpenLayers.Map.TILE_WIDTH=256;
OpenLayers.Map.TILE_HEIGHT=256;OpenLayers.Handler.MouseWheel=OpenLayers.Class(OpenLayers.Handler,{wheelListener:null,mousePosition:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);
this.wheelListener=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this)
},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);
this.wheelListener=null
},onWheelEvent:function(e){if(!this.map||!this.checkModifiers(e)){return 
}var overScrollableDiv=false;
var overLayerDiv=false;
var overMapDiv=false;
var elem=OpenLayers.Event.element(e);
while((elem!=null)&&!overMapDiv&&!overScrollableDiv){if(!overScrollableDiv){try{if(elem.currentStyle){overflow=elem.currentStyle.overflow
}else{var style=document.defaultView.getComputedStyle(elem,null);
var overflow=style.getPropertyValue("overflow")
}overScrollableDiv=(overflow&&(overflow=="auto")||(overflow=="scroll"))
}catch(err){}}if(!overLayerDiv){var layerImgs=this.map.div.getElementsByTagName("img");
if(layerImgs){for(var i=0;
i<layerImgs.length;
i++){if(layerImgs[i].className=="layerImg"&&elem==layerImgs[i]){overLayerDiv=true;
break
}}}}overMapDiv=(elem==this.map.div);
elem=elem.parentNode
}if(!overScrollableDiv&&overMapDiv){if(overLayerDiv){this.wheelZoom(e)
}OpenLayers.Event.stop(e)
}},wheelZoom:function(e){var delta=0;
if(!e){e=window.event
}if(e.wheelDelta){delta=e.wheelDelta/120;
if(window.opera&&window.opera.version()<9.2){delta=-delta
}}else{if(e.detail){delta=-e.detail/3
}}if(delta){if(this.mousePosition){e.xy=this.mousePosition
}if(!e.xy){e.xy=this.map.getPixelFromLonLat(this.map.getCenter())
}if(delta<0){this.callback("down",[e,delta])
}else{this.callback("up",[e,delta])
}}},mousemove:function(evt){this.mousePosition=evt.xy
},activate:function(evt){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){var wheelListener=this.wheelListener;
OpenLayers.Event.observe(window,"DOMMouseScroll",wheelListener);
OpenLayers.Event.observe(window,"mousewheel",wheelListener);
OpenLayers.Event.observe(document,"mousewheel",wheelListener);
return true
}else{return false
}},deactivate:function(evt){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){var wheelListener=this.wheelListener;
OpenLayers.Event.stopObserving(window,"DOMMouseScroll",wheelListener);
OpenLayers.Event.stopObserving(window,"mousewheel",wheelListener);
OpenLayers.Event.stopObserving(document,"mousewheel",wheelListener);
return true
}else{return false
}},CLASS_NAME:"OpenLayers.Handler.MouseWheel"});OpenLayers.Control.ZoomBoxOut=OpenLayers.Class(OpenLayers.Control.ZoomBox,{out:true,CLASS_NAME:"OpenLayers.Control.ZoomBoxOut"});OpenLayers.Control.Graticule=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOGGLE,destroy:function(){OpenLayers.Control.prototype.destroy.apply(this,arguments);
if(this.divs){for(i=this.divs.length;
i>0;
--i){this.divs[i]=null
}}this.div=null;
this.mapContainer=null
},removeGraticules:function(){try{var i=0;
var div=this.mapContainer;
if(this.divs){for(i=0;
i<this.divs.length;
i++){div.removeChild(this.divs[i])
}}}catch(e){}},getBbox:function(){var bbox=new Object();
bbox.ll=new Object();
bbox.ur=new Object();
var ll=new OpenLayers.Geometry.Point(this.bbox[0],this.bbox[1]);
var ur=new OpenLayers.Geometry.Point(this.bbox[2],this.bbox[3]);
var wgs84=new OpenLayers.Projection("EPSG:4326");
ll.transform(this.proj,wgs84);
ur.transform(this.proj,wgs84);
bbox.ll.lon=ll.x;
bbox.ll.lat=ll.y;
bbox.ur.lon=ur.x;
bbox.ur.lat=ur.y;
return bbox
},gridIntervalMins:function(dDeg){var dDeg=dDeg/10;
dDeg*=6000;
dDeg=Math.ceil(dDeg)/100;
if(dDeg<=0.06){dDeg=0.06
}else{if(dDeg<=0.12){dDeg=0.12
}else{if(dDeg<=0.3){dDeg=0.3
}else{if(dDeg<=0.6){dDeg=0.6
}else{if(dDeg<=1.2){dDeg=1.2
}else{if(dDeg<=3){dDeg=3
}else{if(dDeg<=6){dDeg=6
}else{if(dDeg<=12){dDeg=12
}else{if(dDeg<=30){dDeg=30
}else{if(dDeg<=60){dDeg=30
}else{if(dDeg<=(60*2)){dDeg=60*2
}else{if(dDeg<=(60*5)){dDeg=60*5
}else{if(dDeg<=(60*10)){dDeg=60*10
}else{if(dDeg<=(60*20)){dDeg=60*20
}else{if(dDeg<=(60*30)){dDeg=60*30
}else{dDeg=60*45
}}}}}}}}}}}}}}}return dDeg
},gridPrecision:function(dDeg){if(dDeg<0.01){return 3
}else{if(dDeg<0.1){return 2
}else{if(dDeg<1){return 1
}else{return 0
}}}},addGraticules:function(){this.removeGraticules();
var bbox=this.getBbox();
var l=bbox.ll.lon;
var b=bbox.ll.lat;
var r=bbox.ur.lon;
var t=bbox.ur.lat;
if(b<-90){b=-90
}if(t>90){t=90
}if(l<-180){l=-180
}if(r>180){r=180
}if(l==r){l=-180;
r=180
}if(t==b){b=-90;
t=90
}var dLat=this.gridIntervalMins(t-b);
var dLng;
if(r>l){dLng=this.gridIntervalMins(r-l)
}else{dLng=this.gridIntervalMins((180-l)+(r+180))
}l=Math.floor(l*60/dLng)*dLng/60;
b=Math.floor(b*60/dLat)*dLat/60;
t=Math.ceil(t*60/dLat)*dLat/60;
r=Math.ceil(r*60/dLng)*dLng/60;
if(b<=-90){b=-90
}if(t>=90){t=90
}if(l<-180){l=-180
}if(r>180){r=180
}dLat/=60;
dLng/=60;
this.dLat=dLat;
this.dLon=dLng;
var latDecs=this.gridPrecision(dLat);
var lonDecs=this.gridPrecision(dLng);
this.divs=new Array();
var i=0;
var pbl=this.fromLatLngToDivPixel(b,l);
var ptr=this.fromLatLngToDivPixel(t,r);
this.maxX=ptr.x;
this.maxY=pbl.y;
this.minX=pbl.x;
this.minY=ptr.y;
var x;
var y=this.fromLatLngToDivPixel(b+dLat+dLat,l).y+2;
var mapDiv=this.mapContainer;
var lo=l;
if(r<lo){r+=360
}while(lo<=r){var p=this.fromLatLngToDivPixel(b,lo);
this.divs[i]=this.createVLine(p.x);
this.divs[i].style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(this.divs[i],null);
i++;
var d=document.createElement("DIV");
x=p.x+3;
d.style.position="absolute";
d.style.left=(parseInt(x)-parseInt(this.mapContainer.style.left)).toString()+"px";
d.style.top=(parseInt(y)-parseInt(this.mapContainer.style.top)).toString()+"px";
d.style.color=this.color;
d.style.fontFamily="Arial";
d.style.fontSize="x-small";
if(lo==0){d.innerHTML=(Math.abs(lo)).toFixed(lonDecs)
}else{if(lo<0){d.title=" W";
d.innerHTML=(Math.abs(lo)).toFixed(lonDecs)+" W"
}else{d.title="E";
d.innerHTML=(Math.abs(lo)).toFixed(lonDecs)+" E"
}}d.style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(d,null);
this.divs[i]=d;
i++;
lo+=dLng;
if(lo>180){r-=360;
lo-=360
}}var j=0;
x=this.fromLatLngToDivPixel(b,l+dLng+dLng).x+3;
while(b<=t){var p=this.fromLatLngToDivPixel(b,l);
if(r<l){this.divs[i]=this.createHLine3(b);
this.divs[i].style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(this.divs[i],null);
i++
}else{if(r==l){this.divs[i]=this.createHLine3(b);
this.divs[i].style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(this.divs[i],null);
i++
}else{this.divs[i]=this.createHLine(p.y);
this.divs[i].style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(this.divs[i],null);
i++
}}var d=document.createElement("DIV");
y=p.y+2;
d.style.position="absolute";
d.style.left=(parseInt(x)-parseInt(this.mapContainer.style.left)).toString()+"px";
d.style.top=(parseInt(y)-parseInt(this.mapContainer.style.top)).toString()+"px";
d.style.color=this.color;
d.style.fontFamily="Arial";
d.style.fontSize="x-small";
if(b==0){d.innerHTML=(Math.abs(b)).toFixed(lonDecs)
}else{if(b<0){d.title=" S";
d.innerHTML=(Math.abs(b)).toFixed(latDecs)+" S"
}else{d.title="N ";
d.innerHTML=(Math.abs(b)).toFixed(latDecs)+" N"
}}if(j!=2){d.style.zIndex=this.div.style.zIndex;
mapDiv.insertBefore(d,null);
this.divs[i]=d;
i++
}j++;
b+=dLat
}},fromLatLngToDivPixel:function(lat,lon){var pt=new OpenLayers.Geometry.Point(lon,lat);
pt.transform(new OpenLayers.Projection("EPSG:4326"),this.proj);
var platlon=this.map.getPixelFromLonLat(new OpenLayers.LonLat(pt.x,pt.y));
return platlon
},createVLine:function(x){var div=document.createElement("DIV");
div.style.position="absolute";
div.style.overflow="hidden";
div.style.backgroundColor=this.color;
div.style.left=(parseInt(x)-parseInt(this.mapContainer.style.left))+"px";
div.style.top=(parseInt(this.minY)-parseInt(this.mapContainer.style.top))+"px";
div.style.width="1px";
div.style.height=(this.maxY-this.minY)+"px";
return div
},createHLine:function(y){var div=document.createElement("DIV");
div.style.position="absolute";
div.style.overflow="hidden";
div.style.backgroundColor=this.color;
div.style.left=(parseInt(this.minX)-parseInt(this.mapContainer.style.left))+"px";
div.style.top=(parseInt(y)-parseInt(this.mapContainer.style.top))+"px";
div.style.width=(this.maxX-this.minX)+"px";
div.style.height="1px";
return div
},createHLine3:function(lat){var f=this.fromLatLngToDivPixel(lat,0);
var t=this.fromLatLngToDivPixel(lat,180);
var div=document.createElement("DIV");
div.style.position="absolute";
div.style.overflow="hidden";
div.style.backgroundColor=this.color;
var x1=f.x;
var x2=t.x;
if(x2<x1){x2=f.x;
x1=t.x
}div.style.left=(parseInt((x1-(x2-x1)))-parseInt(this.mapContainer.style.left))+"px";
div.style.top=(parseInt(f.y)-parseInt(this.mapContainer.style.top))+"px";
div.style.width=((x2-x1)*2)+"px";
div.style.height="1px";
return div
},update:function(){this.bbox=this.map.getExtent().toArray();
this.proj=this.map.getProjectionObject();
if(this.bbox[1]<0){if(this.bbox[3]<0){this.diffLat=this.bbox[1]-this.bbox[3]
}else{this.diffLat=this.bbox[3]-this.bbox[1]
}}else{this.diffLat=this.bbox[3]+this.bbox[1]
}if(this.bbox[0]<0){if(this.bbox[2]<0){this.diffLon=this.bbox[0]-this.bbox[2]
}else{this.diffLon=this.bbox[2]-this.bbox[0]
}}else{this.diffLon=this.bbox[2]+this.bbox[0]
}this.addGraticules()
},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.map.events.register("moveend",this,this.update);
this.mapContainer=this.map.layerContainerDiv;
this.color="black";
this.update();
return true
}else{return false
}},deactivate:function(){if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.map.events.unregister("moveend",this,this.update);
this.removeGraticules();
return true
}else{return false
}},CLASS_NAME:"OpenLayers.Control.Graticule"});OpenLayers.Control.Save=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,name:"saveContext.xml",dir:"tmp",trigger:function(){if(this.map){var parameters={"org.mapfaces.ajax.NO_RERENDER":true,"org.mapfaces.ajax.ACTION":"save","org.mapfaces.ajax.ACTION_SAVE_DIR":this.dir,"org.mapfaces.ajax.ACTION_SAVE_FILENAME":this.name};
this.map.sendAjaxRequest(parameters);
window.Timer=function(){window.open("tmp/saveContext.xml")
};
setTimeout("Timer()",2000)
}},CLASS_NAME:"OpenLayers.Control.Save"});OpenLayers.Control.GetFeatureInfo=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,active:false,defaultHandlerOptions:{single:true,"double":false,pixelTolerance:0,stopSingle:false,stopDouble:false},initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);
OpenLayers.Control.prototype.initialize.apply(this,arguments);
this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)
},onClick:function(evt){if(this.map&&evt!=null){var parameters={refresh:"form:getFeatureInfo","synchronized":"true","org.mapfaces.ajax.ACTION":"getFeatureInfo","org.mapfaces.ajax.ACTION_GETFEATUREINFO_X":evt.xy.x,"org.mapfaces.ajax.ACTION_GETFEATUREINFO_Y":evt.xy.y};
this.map.sendAjaxRequest(parameters)
}},CLASS_NAME:"OpenLayers.Control.GetFeatureInfo"});OpenLayers.Control.GetCoverageMatrix=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,out:false,draw:function(){this.handler=new OpenLayers.Handler.Box(this,{done:this.zoomBox},{keyMask:this.keyMask})
},zoomBox:function(position){if(position instanceof OpenLayers.Bounds){if(!this.out){var minXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.left,position.bottom));
var maxXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.right,position.top));
var bounds=new OpenLayers.Bounds(minXY.lon,minXY.lat,maxXY.lon,maxXY.lat);
if(this.map){var parameters={refresh:"form:getCoverage","synchronized":"true","org.mapfaces.ajax.ACTION":"getCoverage","org.mapfaces.ajax.ACTION_GETCOVERAGE_AOI":minXY.lon+","+minXY.lat+","+maxXY.lon+","+maxXY.lat,"org.mapfaces.ajax.ACTION_GETCOVERAGE_PIXEL":(position.right-position.left)+","+(position.bottom-position.top),"org.mapfaces.ajax.ACTION_GETCOVERAGE_FORMAT":"matrix"};
this.map.sendAjaxRequest(parameters)
}}}else{if(!this.out){this.map.setCenter(this.map.getLonLatFromPixel(position),this.map.getZoom()+1)
}else{this.map.setCenter(this.map.getLonLatFromPixel(position),this.map.getZoom()-1)
}}},CLASS_NAME:"OpenLayers.Control.GetCoverageMatrix"});OpenLayers.Control.Navigation=OpenLayers.Class(OpenLayers.Control,{dragPan:null,zoomBox:null,zoomWheelEnabled:false,animatedPanEnabled:false,initialize:function(options){this.handlers={};
OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){this.deactivate();
if(this.dragPan){this.dragPan.destroy()
}this.dragPan=null;
if(this.zoomBox){this.zoomBox.destroy()
}this.zoomBox=null;
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},activate:function(){this.dragPan.activate();
if(this.zoomWheelEnabled){this.handlers.wheel.activate()
}this.handlers.click.activate();
this.zoomBox.activate();
return OpenLayers.Control.prototype.activate.apply(this,arguments)
},deactivate:function(){this.zoomBox.deactivate();
this.dragPan.deactivate();
this.handlers.click.deactivate();
this.handlers.wheel.deactivate();
return OpenLayers.Control.prototype.deactivate.apply(this,arguments)
},draw:function(){var eventClick={dblclick:this.defaultDblClick};
var eventClickOptions={"double":true,stopDouble:true};
if(this.animatedPanEnabled){eventClick.click=this.onClick;
eventClickOptions.single=true;
eventClickOptions.delay=200
}this.handlers.click=new OpenLayers.Handler.Click(this,eventClick,eventClickOptions);
this.dragPan=new OpenLayers.Control.DragPan({map:this.map});
this.zoomBox=new OpenLayers.Control.ZoomBox({map:this.map,keyMask:OpenLayers.Handler.MOD_SHIFT});
this.dragPan.draw();
this.zoomBox.draw();
this.handlers.wheel=new OpenLayers.Handler.MouseWheel(this,{up:this.wheelUp,down:this.wheelDown});
this.activate()
},defaultDblClick:function(evt){var newCenter=this.map.getLonLatFromViewPortPx(evt.xy);
this.map.setCenter(newCenter,this.map.zoom+1)
},onClick:function(evt){this.map.panTo(this.map.getLonLatFromPixel(evt.xy))
},wheelChange:function(evt,deltaZ){var newZoom=this.map.getZoom()+deltaZ;
if(!this.map.isValidZoomLevel(newZoom)){return 
}var size=this.map.getSize();
var deltaX=size.w/2-evt.xy.x;
var deltaY=evt.xy.y-size.h/2;
var newRes=this.map.getResolutionForZoom(newZoom);
var zoomPoint=this.map.getLonLatFromPixel(evt.xy);
var newCenter=new OpenLayers.LonLat(zoomPoint.lon+deltaX*newRes,zoomPoint.lat+deltaY*newRes);
this.map.setCenter(newCenter,newZoom)
},wheelUp:function(evt){this.wheelChange(evt,1)
},wheelDown:function(evt){this.wheelChange(evt,-1)
},disableZoomWheel:function(){this.zoomWheelEnabled=false;
this.handlers.wheel.deactivate()
},enableZoomWheel:function(){this.zoomWheelEnabled=true;
if(this.active){this.handlers.wheel.activate()
}},CLASS_NAME:"OpenLayers.Control.Navigation"});OpenLayers.Control.MousePosition=OpenLayers.Class(OpenLayers.Control,{element:null,prefix:"<div><span>",prefixX:" X : ",prefixY:" Y : ",prefixPixelX:" pixel X : ",prefixPixelY:" pixel Y : ",prefixLat:" ",prefixLon:" Coord (deg) : ",separator:"</span><span>",separatorDM:"&#176 ",separatorMS:"' ",separatorSHemi:'" ',suffix:"</span></div>",suffixDMS:'" ',numDigits:3,granularity:10,lastXy:null,displayProjection:null,PX:false,XY:false,LatLon:false,DMS:false,DM:false,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){if(this.map){this.map.events.unregister("mousemove",this,this.redraw)
}OpenLayers.Control.prototype.destroy.apply(this,arguments)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!this.element){this.div.left="";
this.div.top="";
this.element=this.div
}this.redraw();
return this.div
},redraw:function(evt){var lonLat;
var newHtml="";
if(evt==null){lonLat=new OpenLayers.LonLat(0,0);
if(this.PX){newHtml+=this.formatPX(null)
}}else{if(this.lastXy==null||Math.abs(evt.xy.x-this.lastXy.x)>this.granularity||Math.abs(evt.xy.y-this.lastXy.y)>this.granularity){this.lastXy=evt.xy;
return 
}this.lastXy=evt.xy;
if(this.PX){newHtml+=this.formatPX(evt.xy)
}lonLat=this.map.getLonLatFromPixel(evt.xy)
}if(!lonLat){return 
}if(this.XY||(!this.PX&&!this.LatLon&&!this.DM&&!this.DMS)){newHtml+=this.formatXY(lonLat)
}if((this.LatLon||this.DMS||this.DM)&&this.displayProjection==null){this.displayProjection=new OpenLayers.Projection("EPSG:4326")
}if(this.displayProjection){lonLat.transform(this.map.getProjectionObject(),this.displayProjection)
}if(this.displayProjection!=null&&(this.displayProjection.proj.units==null||this.displayProjection.proj.units=="degrees")){if(this.LatLon){newHtml+=this.formatLatLon(lonLat)
}if(this.DM){newHtml+=this.formatDM(lonLat)
}if(this.DMS){newHtml+=this.formatDMS(lonLat)
}}if(newHtml!=this.element.innerHTML){this.element.innerHTML=newHtml
}},formatOutput:function(lonLat){var digits=parseInt(this.numDigits);
var newHtml=this.prefix+lonLat.lon.toFixed(digits)+this.separator+lonLat.lat.toFixed(digits)+this.suffix;
return newHtml
},setMap:function(){OpenLayers.Control.prototype.setMap.apply(this,arguments);
this.map.events.register("mousemove",this,this.redraw)
},formatPX:function(px){var digits=parseInt(this.numDigits);
if(px==null){px={x:0,y:0}
}var newHtml=this.prefix+"<span class='mfCursorTrackPrefix'>"+this.prefixPixelX+"</span>"+px.x+this.separator+"<span class='mfCursorTrackPrefix'>"+this.prefixPixelY+"</span>"+px.y+this.suffix;
return newHtml
},formatXY:function(lonLat){var digits=parseInt(this.numDigits);
var newHtml=this.prefix+"<span class='mfCursorTrackPrefix'>"+this.prefixX+"</span>"+lonLat.lon.toFixed(digits)+this.separator+"<span class='mfCursorTrackPrefix'>"+this.prefixY+"</span>"+lonLat.lat.toFixed(digits)+this.suffix;
return newHtml
},formatLatLon:function(lonLat){var digits=parseInt(this.numDigits);
var newHtml=this.prefix+"<span class='mfCursorTrackPrefix'>"+this.prefixLon+"</span>"+lonLat.lon.toFixed(digits)+this.separator+"<span class='mfCursorTrackPrefix'>"+this.prefixLat+"</span>"+lonLat.lat.toFixed(digits)+this.suffix;
return newHtml
},formatDMS:function(lonLat){var digits=parseInt(this.numDigits);
var lon=this.convertDMS(lonLat.lon.toFixed(digits),"LON");
var lat=this.convertDMS(lonLat.lat.toFixed(digits),"LAT");
var newHtml=this.prefix+"<span class='mfCursorTrackPrefix'>"+this.prefixLon+"</span>"+lon[0]+this.separatorDM+lon[1]+this.separatorMS+lon[2]+this.separatorSHemi+lon[3]+this.separator+"<span class='mfCursorTrackPrefix'>"+this.prefixLat+"</span>"+lat[0]+this.separatorDM+lat[1]+this.separatorMS+lat[2]+this.separatorSHemi+lat[3]+this.suffix;
return newHtml
},formatDM:function(lonLat){var digits=parseInt(this.numDigits);
var lon=this.convertDM(lonLat.lon.toFixed(digits),"LON");
var lat=this.convertDM(lonLat.lat.toFixed(digits),"LAT");
var newHtml=this.prefix+"<span class='mfCursorTrackPrefix'>"+this.prefixLon+"</span>"+lon[0]+this.separatorDM+lon[1]+this.separatorMS+lon[2]+this.separator+"<span class='mfCursorTrackPrefix'>"+this.prefixLat+"</span>"+lat[0]+this.separatorDM+lat[1]+this.separatorMS+lat[2]+this.suffix;
return newHtml
},convertDMS:function(coord,type){var coords=[];
abscoord=Math.abs(coord);
coordDeg=Math.floor(abscoord);
coordMin=(abscoord-coordDeg)/(1/60);
tempcoordMin=coordMin;
coordMin=Math.floor(coordMin);
coordSec=(tempcoordMin-coordMin)/(1/60);
coordSec=Math.round(coordSec*10);
coordSec/=10;
if(coordDeg<10){coordDeg="0"+coordDeg
}if(coordMin<10){coordMin="0"+coordMin
}if(coordSec<10){coordSec="0"+coordSec
}coords[0]=coordDeg;
coords[1]=coordMin;
coords[2]=coordSec;
coords[3]=this.getHemi(coord,type);
return coords
},convertDM:function(coord,type){var coords=[];
abscoord=Math.abs(coord);
coordDeg=Math.floor(abscoord);
coordMin=(abscoord-coordDeg)*60;
coordMin=Math.round(coordMin*1000);
coordMin/=1000;
if(coordDeg<10){coordDeg="0"+coordDeg
}if(coordMin<10){coordMin="0"+coordMin
}coords[0]=coordDeg;
coords[1]=coordMin;
coords[2]=this.getHemi(coord,type);
return coords
},getHemi:function(coord,type){var coordhemi="";
if(type=="LAT"){if(coord>=0){coordhemi="N"
}else{coordhemi="S"
}}else{if(type=="LON"){if(coord>=0){coordhemi="E"
}else{coordhemi="W"
}}}return coordhemi
},CLASS_NAME:"OpenLayers.Control.MousePosition"});OpenLayers.Control.OverviewMap=OpenLayers.Class(OpenLayers.Control.OverviewMap,{draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
if(!(this.layers.length>0)){if(this.map.baseLayer){var layer=this.map.baseLayer.clone();
this.layers=[layer]
}else{}}this.extentRectangle=document.createElement("div");
this.extentRectangle.style.position="absolute";
this.extentRectangle.style.zIndex=1000;
this.extentRectangle.className=this.displayClass+"ExtentRectangle";
this.mapDiv=this.div;
this.element=this.div;
this.mapDiv.appendChild(this.extentRectangle);
if(!this.outsideViewport){this.div.className+=" "+this.displayClass+"Container";
var imgLocation=OpenLayers.Util.getImagesLocation();
var img=imgLocation+"layer-switcher-maximize.png";
this.maximizeDiv=OpenLayers.Util.createAlphaImageDiv(this.displayClass+"MaximizeButton",null,new OpenLayers.Size(18,18),img,"absolute");
this.maximizeDiv.style.display="none";
this.maximizeDiv.className=this.displayClass+"MaximizeButton";
OpenLayers.Event.observe(this.maximizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.maximizeControl,this));
this.div.appendChild(this.maximizeDiv);
var img=imgLocation+"layer-switcher-minimize.png";
this.minimizeDiv=OpenLayers.Util.createAlphaImageDiv("OpenLayers_Control_minimizeDiv",null,new OpenLayers.Size(18,18),img,"absolute");
this.minimizeDiv.style.display="none";
this.minimizeDiv.className=this.displayClass+"MinimizeButton";
OpenLayers.Event.observe(this.minimizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.minimizeControl,this));
this.div.appendChild(this.minimizeDiv);
var eventsToStop=["dblclick","mousedown"];
for(var i=0;
i<eventsToStop.length;
i++){OpenLayers.Event.observe(this.maximizeDiv,eventsToStop[i],OpenLayers.Event.stop);
OpenLayers.Event.observe(this.minimizeDiv,eventsToStop[i],OpenLayers.Event.stop)
}this.minimizeControl()
}else{this.element.style.display=""
}if(this.map.getExtent()){this.update()
}this.map.events.register("moveend",this,this.update);
return this.div
},update:function(){if(this.ovmap==null){this.createMap()
}this.updateRectToMap()
},createMap:function(){var options=OpenLayers.Util.extend({controls:[],maxResolution:"auto",fallThrough:false},this.mapOptions);
this.ovmap=new OpenLayers.Map(this.mapDiv,options);
OpenLayers.Event.stopObserving(window,"unload",this.ovmap.unloadDestroy);
this.wComp=parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-left-width"))+parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-right-width"));
this.wComp=(this.wComp)?this.wComp:2;
this.hComp=parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-top-width"))+parseInt(OpenLayers.Element.getStyle(this.extentRectangle,"border-bottom-width"));
this.hComp=(this.hComp)?this.hComp:2;
this.handlers.drag=new OpenLayers.Handler.Drag(this,{move:this.rectDrag,done:this.updateMapToRect},{map:this.ovmap});
this.handlers.click=new OpenLayers.Handler.Click(this,{click:this.mapDivClick},{single:true,"double":false,stopSingle:true,stopDouble:true,pixelTolerance:1,map:this.ovmap});
this.handlers.click.activate();
this.rectEvents=new OpenLayers.Events(this,this.extentRectangle,null,true);
this.rectEvents.register("mouseover",this,function(e){if(!this.handlers.drag.active&&!this.map.dragging){this.handlers.drag.activate()
}});
this.rectEvents.register("mouseout",this,function(e){if(!this.handlers.drag.dragging){this.handlers.drag.deactivate()
}})
},CLASS_NAME:"OpenLayers.Control.OverviewMap"});OpenLayers.Control.MouseWheelDefaults=OpenLayers.Class(OpenLayers.Control,{initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments)
},destroy:function(){if(this.handler){this.handler.destroy()
}this.handler=null;
OpenLayers.Control.prototype.destroy.apply(this,arguments)
},activate:function(){this.handler.activate();
return OpenLayers.Control.prototype.activate.apply(this,arguments)
},deactivate:function(){this.handlers.deactivate();
return OpenLayers.Control.prototype.deactivate.apply(this,arguments)
},draw:function(){this.handler=new OpenLayers.Handler.MouseWheel(this,{up:this.wheelUp,down:this.wheelDown});
this.activate()
},wheelChange:function(evt,deltaZ){var newZoom=this.map.getZoom()+deltaZ;
if(!this.map.isValidZoomLevel(newZoom)){return 
}var size=this.map.getSize();
var deltaX=size.w/2-evt.xy.x;
var deltaY=evt.xy.y-size.h/2;
var newRes=this.map.getResolutionForZoom(newZoom);
var zoomPoint=this.map.getLonLatFromPixel(evt.xy);
var newCenter=new OpenLayers.LonLat(zoomPoint.lon+deltaX*newRes,zoomPoint.lat+deltaY*newRes);
this.map.setCenter(newCenter,newZoom)
},wheelUp:function(evt){this.wheelChange(evt,1)
},wheelDown:function(evt){this.wheelChange(evt,-1)
},disableZoomWheel:function(){this.zoomWheelEnabled=false;
this.handler.deactivate()
},enableZoomWheel:function(){this.zoomWheelEnabled=true;
if(this.active){this.handler.activate()
}},CLASS_NAME:"OpenLayers.Control.MouseWheelDefaults"});OpenLayers.Control.Scale=OpenLayers.Class(OpenLayers.Control.Scale,{updateScale:function(){var scale=this.map.getScale();
if(!scale){return 
}scale=Math.round(scale);
var scaleStr=""+scale+"";
if(scale>=1000&&scale<1000000){scaleStr=scaleStr.substring(0,scaleStr.length-3)+"."+scaleStr.substring(scaleStr.length-3,scaleStr.length)
}else{if(scaleStr>=1000000&&scaleStr<1000000000){scaleStr=scaleStr.substring(0,scaleStr.length-6)+"."+scaleStr.substring(scaleStr.length-6,scaleStr.length-3)+"."+scaleStr.substring(scaleStr.length-3,scaleStr.length)
}else{scaleStr=scale
}}this.element.innerHTML=OpenLayers.i18n("scale",{scaleDenom:scaleStr})
},CLASS_NAME:"OpenLayers.Control.Scale"});OpenLayers.Control.ScaleBar=OpenLayers.Class(OpenLayers.Control,{element:null,scale:1,displaySystem:"metric",minWidth:100,maxWidth:200,divisions:2,subdivisions:2,showMinorMeasures:false,abbreviateLabel:false,singleLine:false,align:"left",div:null,scaleText:"scale 1:",thousandsSeparator:"",measurementProperties:{english:{units:["miles","feet","inches"],abbr:["mi","ft","in"],inches:[63360,12,1]},metric:{units:["kilometers","meters","centimeters"],abbr:["km","m","cm"],inches:[39370.07874,39.370079,0.393701]}},limitedStyle:false,customStyles:null,defaultStyles:{Bar:{height:11,top:12,borderLeftWidth:0,borderRightWidth:0},BarAlt:{height:11,top:12,borderLeftWidth:0,borderRightWidth:0},MarkerMajor:{height:13,width:13,top:12,borderLeftWidth:0,borderRightWidth:0},MarkerMinor:{height:13,width:13,top:12,borderLeftWidth:0,borderRightWidth:0},NumbersBox:{height:13,width:40,top:24},LabelBox:{height:15,top:-2},LabelBoxSingleLine:{height:15,width:35,top:5,left:10}},appliedStyles:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);
if(!document.styleSheets){this.limitedStyle=true
}if(this.limitedStyle){this.appliedStyles=OpenLayers.Util.extend({},this.defaultStyles);
OpenLayers.Util.extend(this.appliedStyles,this.customStyles)
}this.element=document.createElement("div");
this.element.style.position="relative";
this.element.className=this.displayClass+"Wrapper";
this.labelContainer=document.createElement("div");
this.labelContainer.className=this.displayClass+"Units";
this.labelContainer.style.position="absolute";
this.graphicsContainer=document.createElement("div");
this.graphicsContainer.style.position="absolute";
this.graphicsContainer.className=this.displayClass+"Graphics";
this.numbersContainer=document.createElement("div");
this.numbersContainer.style.position="absolute";
this.numbersContainer.className=this.displayClass+"Numbers";
this.element.appendChild(this.graphicsContainer);
this.element.appendChild(this.labelContainer);
this.element.appendChild(this.numbersContainer)
},destroy:function(){this.map.events.unregister("moveend",this,this.onMoveend);
this.div.innerHTML="";
OpenLayers.Control.prototype.destroy.apply(this)
},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);
this.dxMarkerMajor=(this.styleValue("MarkerMajor","borderLeftWidth")+this.styleValue("MarkerMajor","width")+this.styleValue("MarkerMajor","borderRightWidth"))/2;
this.dxMarkerMinor=(this.styleValue("MarkerMinor","borderLeftWidth")+this.styleValue("MarkerMinor","width")+this.styleValue("MarkerMinor","borderRightWidth"))/2;
this.dxBar=(this.styleValue("Bar","borderLeftWidth")+this.styleValue("Bar","borderRightWidth"))/2;
this.dxBarAlt=(this.styleValue("BarAlt","borderLeftWidth")+this.styleValue("BarAlt","borderRightWidth"))/2;
this.dxNumbersBox=this.styleValue("NumbersBox","width")/2;
var classNames=["Bar","BarAlt","MarkerMajor","MarkerMinor"];
if(this.singleLine){classNames.push("LabelBoxSingleLine")
}else{classNames.push("NumbersBox","LabelBox")
}var vertDisp=0;
for(var classIndex=0;
classIndex<classNames.length;
++classIndex){var cls=classNames[classIndex];
vertDisp=Math.max(vertDisp,this.styleValue(cls,"top")+this.styleValue(cls,"height"))
}this.element.style.height=vertDisp+"px";
this.xOffsetSingleLine=this.styleValue("LabelBoxSingleLine","width")+this.styleValue("LabelBoxSingleLine","left");
this.div.appendChild(this.element);
this.map.events.register("moveend",this,this.onMoveend);
this.update();
return this.div
},onMoveend:function(){this.update()
},update:function(scale){if(this.map==null||!this.map.getScale()){return 
}this.scale=(scale!=undefined)?scale:this.map.getScale();
this.element.title=this.scaleText+OpenLayers.Number.format(this.scale);
this.element.style.width=this.maxWidth+"px";
var comp=this.getComp();
this.setSubProps(comp);
this.labelContainer.innerHTML="";
this.graphicsContainer.innerHTML="";
this.numbersContainer.innerHTML="";
var numDiv=this.divisions*this.subdivisions;
var alignmentOffset={left:0+(this.singleLine?0:this.dxNumbersBox),center:(this.maxWidth/2)-(numDiv*this.subProps.pixels/2)-(this.singleLine?this.xOffsetSingleLine/2:0),right:this.maxWidth-(numDiv*this.subProps.pixels)-(this.singleLine?this.xOffsetSingleLine:this.dxNumbersBox)};
var xPos,measure,divNum,cls,left;
for(var di=0;
di<this.divisions;
++di){xPos=di*this.subdivisions*this.subProps.pixels+alignmentOffset[this.align];
this.graphicsContainer.appendChild(this.createElement("MarkerMajor"," ",xPos-this.dxMarkerMajor));
if(!this.singleLine){measure=(di==0)?0:OpenLayers.Number.format((di*this.subdivisions)*this.subProps.length,this.subProps.dec,this.thousandsSeparator);
this.numbersContainer.appendChild(this.createElement("NumbersBox",measure,xPos-this.dxNumbersBox))
}for(var si=0;
si<this.subdivisions;
++si){if((si%2)==0){cls="Bar";
left=xPos-this.dxBar
}else{cls="BarAlt";
left=xPos-this.dxBarAlt
}this.graphicsContainer.appendChild(this.createElement(cls," ",left,this.subProps.pixels));
if(si<this.subdivisions-1){divNum=(di*this.subdivisions)+si+1;
xPos=divNum*this.subProps.pixels+alignmentOffset[this.align];
this.graphicsContainer.appendChild(this.createElement("MarkerMinor"," ",xPos-this.dxMarkerMinor));
if(this.showMinorMeasures&&!this.singleLine){measure=divNum*this.subProps.length;
this.numbersContainer.appendChild(this.createElement("NumbersBox",measure,xPos-this.dxNumbersBox))
}}}}xPos=numDiv*this.subProps.pixels;
xPos+=alignmentOffset[this.align];
this.graphicsContainer.appendChild(this.createElement("MarkerMajor"," ",xPos-this.dxMarkerMajor));
measure=OpenLayers.Number.format(numDiv*this.subProps.length,this.subProps.dec,this.thousandsSeparator);
if(!this.singleLine){this.numbersContainer.appendChild(this.createElement("NumbersBox",measure,xPos-this.dxNumbersBox))
}var labelBox=document.createElement("div");
labelBox.style.position="absolute";
var labelText;
if(this.singleLine){labelText=measure;
labelBox.className=this.displayClass+"LabelBoxSingleLine";
labelBox.style.left=Math.round(xPos+this.styleValue("LabelBoxSingleLine","left"))+"px"
}else{labelText="";
labelBox.className=this.displayClass+"LabelBox";
labelBox.style.textAlign="center";
labelBox.style.width=Math.round(numDiv*this.subProps.pixels)+"px";
labelBox.style.left=Math.round(alignmentOffset[this.align])+"px";
labelBox.style.overflow="hidden"
}if(this.abbreviateLabel){labelText+=" "+this.subProps.abbr
}else{labelText+=" "+this.subProps.units
}labelBox.appendChild(document.createTextNode(labelText));
this.labelContainer.appendChild(labelBox)
},createElement:function(cls,text,left,width){var element=document.createElement("div");
element.className=this.displayClass+cls;
OpenLayers.Util.extend(element.style,{position:"absolute",textAlign:"center",overflow:"hidden",left:Math.round(left)+"px"});
element.appendChild(document.createTextNode(text));
if(width){element.style.width=Math.round(width)+"px"
}return element
},getComp:function(){var system=this.measurementProperties[this.displaySystem];
var numUnits=system.units.length;
var comp=new Array(numUnits);
var numDiv=this.divisions*this.subdivisions;
for(var unitIndex=0;
unitIndex<numUnits;
++unitIndex){comp[unitIndex]={};
var ppdu=OpenLayers.DOTS_PER_INCH*system.inches[unitIndex]/this.scale;
var minSDDisplayLength=((this.minWidth-this.dxNumbersBox)/ppdu)/numDiv;
var maxSDDisplayLength=((this.maxWidth-this.dxNumbersBox)/ppdu)/numDiv;
for(var vi=0;
vi<numDiv;
++vi){var minNumber=minSDDisplayLength*(vi+1);
var maxNumber=maxSDDisplayLength*(vi+1);
var num=this.getHandsomeNumber(minNumber,maxNumber);
var compNum={value:(num.value/(vi+1)),score:0,tie:0,dec:0,displayed:0};
for(var vi2=0;
vi2<numDiv;
++vi2){var position=num.value*(vi2+1)/(vi+1);
var num2=this.getHandsomeNumber(position,position);
var major=((vi2+1)%this.subdivisions==0);
var last=((vi2+1)==numDiv);
if((this.singleLine&&last)||(!this.singleLine&&(major||this.showMinorMeasures))){compNum.score+=num2.score;
compNum.tie+=num2.tie;
compNum.dec=Math.max(compNum.dec,num2.dec);
compNum.displayed+=1
}else{compNum.score+=num2.score/this.subdivisions;
compNum.tie+=num2.tie/this.subdivisions
}}compNum.score*=(unitIndex+1)*compNum.tie/compNum.displayed;
comp[unitIndex][vi]=compNum
}}return comp
},setSubProps:function(comp){var system=this.measurementProperties[this.displaySystem];
var score=Number.POSITIVE_INFINITY;
var tie=Number.POSITIVE_INFINITY;
for(var unitIndex=0;
unitIndex<comp.length;
++unitIndex){var ppdu=OpenLayers.DOTS_PER_INCH*system.inches[unitIndex]/this.scale;
for(var vi in comp[unitIndex]){var compNum=comp[unitIndex][vi];
if((compNum.score<score)||((compNum.score==score)&&(compNum.tie<tie))){this.subProps={length:compNum.value,pixels:ppdu*compNum.value,units:system.units[unitIndex],abbr:system.abbr[unitIndex],dec:compNum.dec};
score=compNum.score;
tie=compNum.tie
}}}},styleValue:function(selector,key){var value=0;
if(this.limitedStyle){value=this.appliedStyles[selector][key]
}else{selector="."+this.displayClass+selector;
rules:for(var i=document.styleSheets.length-1;
i>=0;
--i){var sheet=document.styleSheets[i];
if(!sheet.disabled){var allRules;
try{if(typeof (sheet.cssRules)=="undefined"){if(typeof (sheet.rules)=="undefined"){continue
}else{allRules=sheet.rules
}}else{allRules=sheet.cssRules
}}catch(err){continue
}for(var ruleIndex=0;
ruleIndex<allRules.length;
++ruleIndex){var rule=allRules[ruleIndex];
if(rule.selectorText&&(rule.selectorText.toLowerCase()==selector.toLowerCase())){if(rule.style[key]!=""){value=parseInt(rule.style[key]);
break rules
}}}}}}return value?value:0
},getHandsomeNumber:function(small,big,sigFigs){sigFigs=(sigFigs==null)?10:sigFigs;
var num={value:small,score:Number.POSITIVE_INFINITY,tie:Number.POSITIVE_INFINITY,dec:3};
var cmult,max,dec,tmult,multiplier,score,tie;
for(var hexp=0;
hexp<3;
++hexp){cmult=Math.pow(2,(-1*hexp));
max=Math.floor(Math.log(big/cmult)/Math.LN10);
for(var texp=max;
texp>(max-sigFigs+1);
--texp){dec=Math.max(hexp-texp,0);
tmult=cmult*Math.pow(10,texp);
if((tmult*Math.floor(big/tmult))>=small){if(small%tmult==0){multiplier=small/tmult
}else{multiplier=Math.floor(small/tmult)+1
}score=multiplier+(2*hexp);
tie=(texp<0)?(Math.abs(texp)+1):texp;
if((score<num.score)||((score==num.score)&&(tie<num.tie))){num.value=parseFloat((tmult*multiplier).toFixed(dec));
num.score=score;
num.tie=tie;
num.dec=dec
}}}}return num
},CLASS_NAME:"OpenLayers.Control.ScaleBar"});OpenLayers.Control.MeasureArea=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,EVENT_TYPES:["measure","measurepartial"],handlerOptions:null,callbacks:null,displaySystem:"metric",displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},initialize:function(handler,options){this.EVENT_TYPES=OpenLayers.Control.Measure.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);
OpenLayers.Control.prototype.initialize.apply(this,[options]);
this.callbacks=OpenLayers.Util.extend({done:this.measureComplete,point:this.measurePartial},this.callbacks);
this.handler=new handler(this,this.callbacks,this.handlerOptions)
},updateHandler:function(handler,options){var active=this.active;
if(active){this.deactivate()
}this.handler=new handler(this,this.callbacks,options);
if(active){this.activate()
}},measureComplete:function(geometry){this.measure(geometry,"measure")
},measurePartial:function(point,geometry){this.measure(geometry,"measurepartial")
},measure:function(geometry,eventType){var stat,order;
if(geometry.CLASS_NAME.indexOf("LineString")>-1){stat=this.getBestLength(geometry);
order=1
}else{stat=this.getBestArea(geometry);
order=2
}this.events.triggerEvent(eventType,{measure:stat[0],units:stat[1],order:order,geometry:geometry})
},getBestArea:function(geometry){var units=this.displaySystemUnits[this.displaySystem];
var unit,area;
for(var i=0,len=units.length;
i<len;
++i){unit=units[i];
area=this.getArea(geometry,unit);
if(area>1){break
}}return[area,unit]
},getArea:function(geometry,units){var area=geometry.getArea();
var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];
if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[this.map.getUnits()];
area*=Math.pow((inPerMapUnit/inPerDisplayUnit),2)
}return area
},getBestLength:function(geometry){var units=this.displaySystemUnits[this.displaySystem];
var unit,length;
for(var i=0,len=units.length;
i<len;
++i){unit=units[i];
length=this.getLength(geometry,unit);
if(length>1){break
}}return[length,unit]
},getLength:function(geometry,units){var length=geometry.getLength();
var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];
if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[this.map.getUnits()];
length*=(inPerMapUnit/inPerDisplayUnit)
}return length
},CLASS_NAME:"OpenLayers.Control.MeasureArea"});OpenLayers.Format.GeoJSON=OpenLayers.Class(OpenLayers.Format.JSON,{initialize:function(options){OpenLayers.Format.JSON.prototype.initialize.apply(this,[options])
},read:function(json,type,filter){type=(type)?type:"FeatureCollection";
var results=null;
var obj=null;
if(typeof json=="string"){obj=OpenLayers.Format.JSON.prototype.read.apply(this,[json,filter])
}else{obj=json
}if(!obj){OpenLayers.Console.error("Bad JSON: "+json)
}else{if(typeof (obj.type)!="string"){OpenLayers.Console.error("Bad GeoJSON - no type: "+json)
}else{if(this.isValidType(obj,type)){switch(type){case"Geometry":try{results=this.parseGeometry(obj)
}catch(err){OpenLayers.Console.error(err)
}break;
case"Feature":try{results=this.parseFeature(obj);
results.type="Feature"
}catch(err){OpenLayers.Console.error(err)
}break;
case"FeatureCollection":results=[];
switch(obj.type){case"Feature":try{results.push(this.parseFeature(obj))
}catch(err){results=null;
OpenLayers.Console.error(err)
}break;
case"FeatureCollection":for(var i=0;
i<obj.features.length;
++i){try{results.push(this.parseFeature(obj.features[i]))
}catch(err){results=null;
OpenLayers.Console.error(err)
}}break;
default:try{var geom=this.parseGeometry(obj);
results.push(new OpenLayers.Feature.Vector(geom))
}catch(err){results=null;
OpenLayers.Console.error(err)
}}break
}}}}return results
},isValidType:function(obj,type){var valid=false;
switch(type){case"Geometry":if(OpenLayers.Util.indexOf(["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Box","GeometryCollection"],obj.type)==-1){OpenLayers.Console.error("Unsupported geometry type: "+obj.type)
}else{valid=true
}break;
case"FeatureCollection":valid=true;
break;
default:if(obj.type==type){valid=true
}else{OpenLayers.Console.error("Cannot convert types from "+obj.type+" to "+type)
}}return valid
},parseFeature:function(obj){var feature,geometry,attributes;
attributes=(obj.properties)?obj.properties:{};
feature=new OpenLayers.Feature(attributes.layer,new OpenLayers.LonLat(obj.coordinates[0],obj.coordinates[1]),attributes);
if(obj.id){feature.fid=obj.id
}return feature
},parseGeometry:function(obj){var geometry;
if(obj.type=="GeometryCollection"){if(!(obj.geometries instanceof Array)){throw"GeometryCollection must have geometries array: "+obj
}var numGeom=obj.geometries.length;
var components=new Array(numGeom);
for(var i=0;
i<numGeom;
++i){components[i]=this.parseGeometry.apply(this,[obj.geometries[i]])
}geometry=new OpenLayers.Geometry.Collection(components)
}else{if(!(obj.coordinates instanceof Array)){throw"Geometry must have coordinates array: "+obj
}if(!this.parseCoords[obj.type.toLowerCase()]){throw"Unsupported geometry type: "+obj.type
}try{geometry=this.parseCoords[obj.type.toLowerCase()].apply(this,[obj.coordinates])
}catch(err){throw err
}}if(this.internalProjection&&this.externalProjection){geometry.transform(this.externalProjection,this.internalProjection)
}return geometry
},parseCoords:{point:function(array){if(array.length!=2){throw"Only 2D points are supported: "+array
}return new OpenLayers.Geometry.Point(array[0],array[1])
},multipoint:function(array){var points=[];
var p=null;
for(var i=0;
i<array.length;
++i){try{p=this.parseCoords.point.apply(this,[array[i]])
}catch(err){throw err
}points.push(p)
}return new OpenLayers.Geometry.MultiPoint(points)
},linestring:function(array){var points=[];
var p=null;
for(var i=0;
i<array.length;
++i){try{p=this.parseCoords.point.apply(this,[array[i]])
}catch(err){throw err
}points.push(p)
}return new OpenLayers.Geometry.LineString(points)
},multilinestring:function(array){var lines=[];
var l=null;
for(var i=0;
i<array.length;
++i){try{l=this.parseCoords.linestring.apply(this,[array[i]])
}catch(err){throw err
}lines.push(l)
}return new OpenLayers.Geometry.MultiLineString(lines)
},polygon:function(array){var rings=[];
var r,l;
for(var i=0;
i<array.length;
++i){try{l=this.parseCoords.linestring.apply(this,[array[i]])
}catch(err){throw err
}r=new OpenLayers.Geometry.LinearRing(l.components);
rings.push(r)
}return new OpenLayers.Geometry.Polygon(rings)
},multipolygon:function(array){var polys=[];
var p=null;
for(var i=0;
i<array.length;
++i){try{p=this.parseCoords.polygon.apply(this,[array[i]])
}catch(err){throw err
}polys.push(p)
}return new OpenLayers.Geometry.MultiPolygon(polys)
},box:function(array){if(array.length!=2){throw"GeoJSON box coordinates must have 2 elements"
}return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(array[0][0],array[0][1]),new OpenLayers.Geometry.Point(array[1][0],array[0][1]),new OpenLayers.Geometry.Point(array[1][0],array[1][1]),new OpenLayers.Geometry.Point(array[0][0],array[1][1]),new OpenLayers.Geometry.Point(array[0][0],array[0][1])])])
}},write:function(obj,pretty){var geojson={type:null};
if(obj instanceof Array){geojson.type="FeatureCollection";
var numFeatures=obj.length;
geojson.features=new Array(numFeatures);
for(var i=0;
i<numFeatures;
++i){var element=obj[i];
if(!element instanceof OpenLayers.Feature.Vector){var msg="FeatureCollection only supports collections of features: "+element;
throw msg
}geojson.features[i]=this.extract.feature.apply(this,[element])
}}else{if(obj.CLASS_NAME.indexOf("OpenLayers.Geometry")==0){geojson=this.extract.geometry.apply(this,[obj])
}else{if(obj instanceof OpenLayers.Feature.Vector){geojson=this.extract.feature.apply(this,[obj]);
if(obj.layer&&obj.layer.projection){geojson.crs=this.createCRSObject(obj)
}}}}return OpenLayers.Format.JSON.prototype.write.apply(this,[geojson,pretty])
},createCRSObject:function(object){var proj=object.layer.projection.toString();
var crs={};
if(proj.match(/epsg:/i)){var code=parseInt(proj.substring(proj.indexOf(":")+1));
if(code==4326){crs={type:"OGC",properties:{urn:"urn:ogc:def:crs:OGC:1.3:CRS84"}}
}else{crs={type:"EPSG",properties:{code:code}}
}}return crs
},extract:{feature:function(feature){var geom=this.extract.geometry.apply(this,[feature.geometry]);
return{type:"Feature",id:feature.fid==null?feature.id:feature.fid,properties:feature.attributes,geometry:geom}
},geometry:function(geometry){if(this.internalProjection&&this.externalProjection){geometry=geometry.clone();
geometry.transform(this.internalProjection,this.externalProjection)
}var geometryType=geometry.CLASS_NAME.split(".")[2];
var data=this.extract[geometryType.toLowerCase()].apply(this,[geometry]);
var json;
if(geometryType=="Collection"){json={type:"GeometryCollection",geometries:data}
}else{json={type:geometryType,coordinates:data}
}return json
},point:function(point){return[point.x,point.y]
},multipoint:function(multipoint){var array=[];
for(var i=0;
i<multipoint.components.length;
++i){array.push(this.extract.point.apply(this,[multipoint.components[i]]))
}return array
},linestring:function(linestring){var array=[];
for(var i=0;
i<linestring.components.length;
++i){array.push(this.extract.point.apply(this,[linestring.components[i]]))
}return array
},multilinestring:function(multilinestring){var array=[];
for(var i=0;
i<multilinestring.components.length;
++i){array.push(this.extract.linestring.apply(this,[multilinestring.components[i]]))
}return array
},polygon:function(polygon){var array=[];
for(var i=0;
i<polygon.components.length;
++i){array.push(this.extract.linestring.apply(this,[polygon.components[i]]))
}return array
},multipolygon:function(multipolygon){var array=[];
for(var i=0;
i<multipolygon.components.length;
++i){array.push(this.extract.polygon.apply(this,[multipolygon.components[i]]))
}return array
},collection:function(collection){var len=collection.components.length;
var array=new Array(len);
for(var i=0;
i<len;
++i){array[i]=this.extract.geometry.apply(this,[collection.components[i]])
}return array
}},CLASS_NAME:"OpenLayers.Format.GeoJSON"});OpenLayers.Control.NavToolbar=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);
var tab=[];
if(options.zoomIn){tab.push(new OpenLayers.Control.ZoomBox())
}if(options.zoomOut){tab.push(new OpenLayers.Control.ZoomBoxOut())
}if(options.pan){if(options.panEffect){tab.push(new OpenLayers.Control.Navigation({animatedPanEnabled:true}))
}else{tab.push(new OpenLayers.Control.Navigation())
}}if(options.zoomMaxExtent){tab.push(new OpenLayers.Control.ZoomToMaxExtent())
}if(options.history){tab.push(nav.previous);
tab.push(nav.next)
}if(options.graticule){tab.push(new OpenLayers.Control.Graticule())
}if(options.save){tab.push(new OpenLayers.Control.Save())
}if(options.getFeatureInfo){tab.push(new OpenLayers.Control.GetFeatureInfo())
}if(options.measureDistance){var md=new OpenLayers.Control.Measure(OpenLayers.Handler.Path);
md.events.on({measure:handleMeasurements,measurepartial:handleMeasurements});
tab.push(md)
}if(options.measureArea){var ma=new OpenLayers.Control.MeasureArea(OpenLayers.Handler.Polygon);
ma.events.on({measure:handleMeasurements,measurepartial:handleMeasurements});
tab.push(ma)
}if(options.selectionZoomBox){tab.push(new OpenLayers.Control.SelectionZoomBox(options.selectionZoomBoxOptions))
}if(tab.length>0){this.addControls(tab)
}},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);
this.activateControl(this.controls[0]);
return div
},CLASS_NAME:"OpenLayers.Control.NavToolbar"});OpenLayers.Lang.fr={unhandledRequest:"Requête non gérée, retournant ${statusText}",permalink:"Permalien",overlays:"Calques",baseLayer:"Calque de base",sameProjection:"La carte de situation ne fonctionne que lorsque sa projection est la même que celle de la carte principale",readNotImplemented:"Lecture non implémentée.",writeNotImplemented:"Ecriture non implémentée.",noFID:"Impossible de mettre à jour un objet sans identifiant (fid).",errorLoadingGML:"Erreur au chargement du fichier GML ${url}",browserNotSupported:"Votre navigateur ne supporte pas le rendu vectoriel. Les renderers actuellement supportés sont : \n${renderers}",componentShouldBe:"addFeatures : le composant devrait être de type ${geomType}",getFeatureError:"getFeatureFromEvent a été appelé sur un calque sans renderer. Cela signifie généralement que vous avez détruit cette couche, mais que vous avez conservé un handler qui lui était associé.",minZoomLevelError:"La propriété minZoomLevel doit seulement être utilisée pour des couches FixedZoomLevels-descendent. Le fait que cette couche WFS vérifie la présence de minZoomLevel est une relique du passé. Nous ne pouvons toutefois la supprimer sans casser des applications qui pourraient en dépendre. C'est pourquoi nous la déprécions -- la vérification du minZoomLevel sera supprimée en version 3.0. A la place, merci d'utiliser les paramètres de résolutions min/max tel que décrit sur : http://trac.openlayers.org/wiki/SettingZoomLevels",commitSuccess:"Transaction WFS : SUCCES ${response}",commitFailed:"Transaction WFS : ECHEC ${response}",googleWarning:"La couche Google n'a pas été en mesure de se charger correctement.<br><br>Pour supprimer ce message, choisissez une nouvelle BaseLayer dans le sélecteur de couche en haut à droite.<br><br>Cela est possiblement causé par la non-inclusion de la librairie Google Maps, ou alors parce que la clé de l'API ne correspond pas à votre site.<br><br>Développeurs : pour savoir comment corriger ceci, <a href='http://trac.openlayers.org/wiki/Google' target='_blank'>cliquez ici</a>",getLayerWarning:"La couche ${layerType} n'est pas en mesure de se charger correctement.<br><br>Pour supprimer ce message, choisissez une nouvelle BaseLayer dans le sélecteur de couche en haut à droite.<br><br>Cela est possiblement causé par la non-inclusion de la librairie ${layerLib}.<br><br>Développeurs : pour savoir comment corriger ceci, <a href='http://trac.openlayers.org/wiki/${layerLib}' target='_blank'>cliquez ici</a>",scale:"Echelle ~ 1 : ${scaleDenom}",layerAlreadyAdded:"Vous avez essayé d'ajouter à la carte le calque : ${layerName}, mais il est déjà présent",reprojectDeprecated:"Vous utilisez l'option 'reproject' sur la couche ${layerName}. Cette option est dépréciée : Son usage permettait d'afficher des données au dessus de couches raster commerciales.Cette fonctionalité est maintenant supportée en utilisant le support de la projection Mercator Sphérique. Plus d'information est disponible sur http://trac.openlayers.org/wiki/SphericalMercator.",methodDeprecated:"Cette méthode est dépréciée, et sera supprimée à la version 3.0. Merci d'utiliser ${newMethod} à la place.",boundsAddError:"Vous devez passer les deux valeurs x et y à la fonction add.",lonlatAddError:"Vous devez passer les deux valeurs lon et lat à la fonction add.",pixelAddError:"Vous devez passer les deux valeurs x et y à la fonction add.",unsupportedGeometryType:"Type de géométrie non supporté : ${geomType}",pagePositionFailed:"OpenLayers.Util.pagePosition a échoué: l'élément d'id ${elemId} pourrait être mal positionné.",end:""};OpenLayers.Lang.en.scale="Scale: 1 / ${scaleDenom}";OpenLayers.Lang.fr.scale="Echelle: 1 / ${scaleDenom}";